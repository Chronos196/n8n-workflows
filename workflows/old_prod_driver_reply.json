{
  "active": false,
  "connections": {
    "Ищем автомобиль по номеру": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля": {
      "main": [
        [
          {
            "node": "проверка привязки к автомобилю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля1": {
      "main": [
        [
          {
            "node": "запись одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус1": {
      "main": [
        [
          {
            "node": "номер автомобиля",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка привязки к автомобилю": {
      "main": [
        [
          {
            "node": "создание заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нельзя создать заявку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков": {
      "main": [
        [
          {
            "node": "проверка наличия механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение инф. о водителе": {
      "main": [
        [
          {
            "node": "поиск механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов": {
      "main": [
        [
          {
            "node": "проверка наличия логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия логистов": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет логистов": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение только для механика?": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто": {
      "main": [
        [
          {
            "node": "статус авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение даты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка правильности номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нельзя создать заявку": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем сегодняшнюю дату": {
      "main": [
        [
          {
            "node": "форматируем в удобный вид",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем разницу в днях": {
      "main": [
        [
          {
            "node": "округляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если истекло": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "скоро истекает": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "форматируем в удобный вид": {
      "main": [
        [
          {
            "node": "получаем разницу в днях",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем доки и форматированную дату": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем доки+дата с разницей во времени": {
      "main": [
        [
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "округляем": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "сколько дней до окончания срока",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "действует долго": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем в один список": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список1": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "соединяем в единое сообщение": {
      "main": [
        [
          {
            "node": "Получение даты1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем документы": {
      "main": [
        [
          {
            "node": "есть ли документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли документы": {
      "main": [
        [
          {
            "node": "получаем сегодняшнюю дату",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "документы не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы не найдены": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли неисправности1": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат1",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат1": {
      "main": [
        [
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст1": {
      "main": [
        [
          {
            "node": "Добавляем теги",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки": {
      "main": [
        [
          {
            "node": "есть ли неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Добавляем теги": {
      "main": [
        [
          {
            "node": "Разделяем по статусам",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку": {
      "main": [
        [
          {
            "node": "к выполнению2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку1": {
      "main": [
        [
          {
            "node": "в работе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку2": {
      "main": [
        [
          {
            "node": "требуется проверка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "к выполнению2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в работе": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "требуется проверка": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "в один текст объединяем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст объединяем": {
      "main": [
        [
          {
            "node": "получим все заявки \"В работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим авто по водителю": {
      "main": [
        [
          {
            "node": "если авто не привязан",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если авто не привязан": {
      "main": [
        [
          {
            "node": "получим все заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не привязан авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Преобразование одометра в число": {
      "main": [
        [
          {
            "node": "Проверка нужна ли замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка нужна ли замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масле для меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка уведомления о том, что требуется замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка уведомления о том, что требуется замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масла не нужна в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масле для меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масла не нужна в меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем инф. о масле в единое для меню ТО": {
      "main": [
        [
          {
            "node": "изменяем водителя",
            "type": "main",
            "index": 0
          },
          {
            "node": "получаем документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?": {
      "main": [
        [
          {
            "node": "возвращаем статус2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем номер": {
      "main": [
        [
          {
            "node": "Ищем автомобиль по номеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Получение инф. о водителе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка всего сообщения": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус авто": {
      "main": [
        [
          {
            "node": "находим машину по odoo id9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число": {
      "main": [
        [
          {
            "node": "получаем данные автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "одометр введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число1": {
      "main": [
        [
          {
            "node": "данные смены введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер автомобиля": {
      "main": [
        [
          {
            "node": "сохраняем карьер часы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число2": {
      "main": [
        [
          {
            "node": "литры введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "литры введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "литры введены": {
      "main": [
        [
          {
            "node": "записываем литры",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число3": {
      "main": [
        [
          {
            "node": "записываем объём материала",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Нет заявок для отображения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделяем по статусам": {
      "main": [
        [
          {
            "node": "добавим перевод на новую строку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запись одометра": {
      "main": [
        [
          {
            "node": "Преобразование одометра в число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто привязан?": {
      "main": [
        [
          {
            "node": "создание заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "механики и логисты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения": {
      "main": [
        [
          {
            "node": "отправка сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов1": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов1": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка сообщения": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную4": {
      "main": [
        [
          {
            "node": "сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Сообщение отправлено",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам1": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "получим перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим перевозку": {
      "main": [
        [
          {
            "node": "поиск логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "диспетчер1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id9": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "находим рейсы по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки по рейсам1": {
      "main": [
        [
          {
            "node": "в одно сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки по рейсам": {
      "main": [
        [
          {
            "node": "в одно сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки1": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск логистов1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновляем заявку": {
      "main": [
        [
          {
            "node": "нужно ли приложить фото?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов3": {
      "main": [
        [
          {
            "node": "Отправка проблемы диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск диспетчера": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "бессрочно": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список2": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки \"В работе\"": {
      "main": [
        [
          {
            "node": "Проверка есть ли такие заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли такие заявки": {
      "main": [
        [
          {
            "node": "Вывод с кнопкой \"завершить заявку\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод с кнопкой \"назад\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты": {
      "main": [
        [
          {
            "node": "Получение машины из графика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение машины из графика": {
      "main": [
        [
          {
            "node": "Проверка есть ли водитель в графике",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли водитель в графике": {
      "main": [
        [
          {
            "node": "сообщение ввода автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "меняем статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов2": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "механики и логисты": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус4": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов2": {
      "main": [
        [
          {
            "node": "маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер1": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер2": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "Сообщение отправлено2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения3": {
      "main": [
        [
          {
            "node": "айди диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка в чат": {
      "main": [
        [
          {
            "node": "Сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст": {
      "main": [
        [
          {
            "node": "диспетчер2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди логистов": {
      "main": [
        [
          {
            "node": "в один текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди диспетчера": {
      "main": [
        [
          {
            "node": "в один текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст1": {
      "main": [
        [
          {
            "node": "отправка в чат",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть авто?": {
      "main": [
        [
          {
            "node": "привязан авто?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "привязан авто?": {
      "main": [
        [
          {
            "node": "введите сообщение",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужен авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите сообщение": {
      "main": [
        [
          {
            "node": "статус=ввод сообщения диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка логистам о доках": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения4": {
      "main": [
        [
          {
            "node": "отправка диспетчеру о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка диспетчеру о доках": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено2": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер3": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения5": {
      "main": [
        [
          {
            "node": "сообщение диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника1": {
      "main": [
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "диспетчер3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Сообщение отправлено3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад4": {
      "main": [
        [
          {
            "node": "возвращаем статус5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка правильности номера": {
      "main": [
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько дней до окончания срока": {
      "main": [
        [
          {
            "node": "бессрочно",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если истекло",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "скоро истекает",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "действует долго",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "маршрут": {
      "main": [
        [
          {
            "node": "айди логистов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отправка логистам о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты1": {
      "main": [
        [
          {
            "node": "получим все неисправности1",
            "type": "main",
            "index": 0
          },
          {
            "node": "получим все пройденные ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запланирован ли ремонт/ТО": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат2",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "объединяем данные о запланированных работах",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем данные о запланированных работах": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем сообщения": {
      "main": [
        [
          {
            "node": "объединение заявок и запланированных в одно сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединение заявок и запланированных в одно сообщение": {
      "main": [
        [
          {
            "node": "Меню ТО3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности1": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "есть ли неисправности2": {
      "main": [
        [
          {
            "node": "запланирован ли ремонт/ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат2": {
      "main": [
        [
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО3": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст2": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавляем теги1": {
      "main": [
        [
          {
            "node": "добавляем разделитель - новая строка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "рейсы в перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена1": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке1": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей1": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первой работа или перевозка": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день, работа первой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выводим информацию о перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Удаление кнопки в вводе часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число4": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные смены введены": {
      "main": [
        [
          {
            "node": "возвращаем статус1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          },
          {
            "node": "Проверка старта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем кнопку назад и оставляем м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку назад и оставляем тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине": {
      "main": [
        [
          {
            "node": "проверка выполняющихся рейсов или работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок1": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере2": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id": {
      "main": [
        [
          {
            "node": "получение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение2": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение1": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем объём материала": {
      "main": [
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем тонны": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем м3": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "склеить имена водителей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число5": {
      "main": [
        [
          {
            "node": "обновляем заявку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение работ в карьере": {
      "main": [
        [
          {
            "node": "Получение суммы заработка за карьер",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение суммы заработка за карьер": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Есть ли перевозки1": {
      "main": [
        [
          {
            "node": "Получение рейсов по перевозкам2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Sort1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "За последний месяц не было перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе2": {
      "main": [
        [
          {
            "node": "Получение перевозок водителя2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Получение работ в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение перевозок водителя2": {
      "main": [
        [
          {
            "node": "Есть ли перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение рейсов по перевозкам2": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort1": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Объединение рейсов в один файл2": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge9": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort5": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Sort5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка выполняющихся рейсов или работы в карьере": {
      "main": [
        [
          {
            "node": "находим перевозки по рейсам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим перевозки по рейсам1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим машину по odoo id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейсы не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке5": {
      "main": [
        [
          {
            "node": "айди последнего сообщения2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта": {
      "main": [
        [
          {
            "node": "команды",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Разделение reply-кнопок или иного ввода",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "авто привязан?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса2": {
      "main": [
        [
          {
            "node": "данные сотрудника",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные сотрудника1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса авторизации": {
      "main": [
        [
          {
            "node": "Неизвестная команда",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "форматируем номер",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем данные автомобиля",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделение reply-кнопок или иного ввода": {
      "main": [
        [
          {
            "node": "Получение информации о водителе",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим авто по водителю",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса авторизации",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "объединяем сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все пройденные ТО": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта1": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем пустые списки": {
      "main": [
        [
          {
            "node": "есть ли неисправности2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем пройденные ТО и остальные заявки": {
      "main": [
        [
          {
            "node": "убираем пустые списки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "команды": {
      "main": [
        [
          {
            "node": "/start",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение информации о водителе",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим авто по водителю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем рейсы": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Получение работ в карьере2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе": {
      "main": [
        [
          {
            "node": "Получаем рейсы",
            "type": "main",
            "index": 0
          },
          {
            "node": "Получение работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-22T18:39:48.263Z",
  "id": "afYwmGCfktkLQOjm",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "old_prod_driver_reply",
  "nodes": [
    {
      "parameters": {
        "content": "## Создание запроса на обслуживание ",
        "height": 454.79006974581796,
        "width": 1082.1649756719262,
        "color": 6
      },
      "id": "64870813-239e-4bb5-83fe-4e24421b3712",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2499,
        6040
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "cf9a134d-bf9f-4e78-a2ca-c2486d53f2bf",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2335,
        3200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## После нажатия кнопки \"приступить к работе\"",
        "height": 421.69740650535715,
        "width": 1023.3011191444527,
        "color": 6
      },
      "id": "8c7c0973-d349-4490-acb0-91739eb6bcc5",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        2700
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "number_car",
              "value": "={{ $json.number }}"
            }
          ]
        }
      },
      "id": "1688988c-9e76-4381-a1c5-2bf69a88ebc5",
      "name": "Ищем автомобиль по номеру",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1995,
        4500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2c6e096b-864b-4900-9066-d059e1bc7371",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2215,
        4500
      ]
    },
    {
      "parameters": {
        "content": "## Ввод номера автомобиля",
        "height": 510.0261823387185,
        "width": 1060.8242082088582,
        "color": 6
      },
      "id": "f2a6af6c-b7b5-4bb0-8c96-fde6a9e51b7c",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1755,
        4240
      ]
    },
    {
      "parameters": {
        "content": "## Изменение водителя в ОДУ\n",
        "height": 258.8309220721088,
        "width": 421.1900237988659,
        "color": 6
      },
      "id": "6b55b2ea-82b9-4324-8bf5-da58c9102cf6",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2495,
        5580
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2bae1975-2188-492a-b07a-bd6ce4366bc2",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2515,
        4560
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "1b5c0458-0699-4ed2-b600-6c0fc39a2821",
      "name": "получаем данные автомобиля",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2575,
        6300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль <b>{{ $json.model }} {{ $json.number_car }}</b> найден!\nВведите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести номер авто заново",
                    "additionalFields": {
                      "callback_data": "back_to_input_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d1f2938c-95c5-4481-9b63-f8d395abefe6",
      "name": "ввод одометра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        4260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "260c7717-b7b0-453e-aa26-f42cd42260ad",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3020,
        4420
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.car_id_while_inputing}}"
            }
          ]
        }
      },
      "id": "f2b4b4d7-e9fc-4136-9441-43d7a344d6db",
      "name": "получаем данные автомобиля1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1185,
        5360
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод одометра",
        "height": 271.1847873311224,
        "width": 511.5414015853248
      },
      "id": "d7d59e8c-4dfd-44e2-8add-e9c3b68ab406",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1075,
        5280
      ]
    },
    {
      "parameters": {
        "content": "## Ввод данных смены\nэти данные пока никуда не сохраняются",
        "height": 297.5961132589107,
        "width": 906.4857111284805,
        "color": 6
      },
      "id": "1082a987-faa2-4947-8a46-2809e9b6e0b1",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1275,
        5740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ad8accc5-8e1e-4dc9-beef-44e6b0a813d9",
      "name": "возвращаем статус1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1585,
        5840
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b90db41-fe8e-46f1-8e7e-aead67e43183",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "85c84084-75cc-4183-88f8-29030d71bf17",
      "name": "проверка привязки к автомобилю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2790,
        6301
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "2d6fb636-4a0f-4c1b-9aaf-fae50bd94d18",
      "name": "поиск механиков",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4075,
        6260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b16e954-3407-4a4c-866e-d2613badff62",
      "name": "поиск тг айди механиков",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4270,
        6261
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb2cbffb-f1b3-4ee6-94f4-06cdac279b88",
      "name": "проверка наличия механиков",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4490,
        6261
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
        "options": {}
      },
      "id": "5138ad9c-1d59-4230-9cbf-a47de75d2d12",
      "name": "Получение инф. о водителе",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        3735,
        6200
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка механикам\n",
        "height": 476.1450016967405,
        "width": 1329.7955997843726,
        "color": 6
      },
      "id": "e564e043-b865-4f6d-aa3f-1fc80414d413",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4035,
        6060
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Логист"
            }
          ]
        }
      },
      "id": "d76ef3d1-aae3-4d19-bed7-b2732792fe09",
      "name": "поиск логистов",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        5870,
        6341
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2e299414-b710-4730-8491-036cd247be72",
      "name": "поиск тг айди логистов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        6090,
        6341
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7aeb8505-696f-4f3c-993e-dbeefbd173c6",
      "name": "проверка наличия логистов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6310,
        6341
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Логисты не найдены",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d29aef76-acc9-4c5e-bc55-00ffbf77cf1b",
      "name": "нет логистов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6530,
        6421
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "5c7a9662-f4a0-447b-a98f-ab1b741da7ae",
      "name": "преобразуем в 1 переменную",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4910,
        6121
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f4a04b7f-8758-49ca-b7cd-8e933dc9137d",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.only_mech }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8b169837-a4c1-458e-bd8e-daf819942d5c",
      "name": "Сообщение только для механика?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5570,
        6261
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "5729044e-f6e1-4342-948e-7cc4182d0579",
      "name": "преобразуем в 1 переменную1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        6750,
        6201
      ]
    },
    {
      "parameters": {
        "content": "## Отправка логистам",
        "height": 547.6404091736987,
        "width": 1505.9827533603946,
        "color": 6
      },
      "id": "bbf22efb-e243-4ead-ae1d-6cb278c5dd80",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5735,
        6100
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "79922fb5-8fde-42f3-80b6-481d02b1e30d",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1680,
        2800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "860156ea-6ea5-4a23-93fb-292ec7198173",
      "name": "если сотрудник уже занял авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1860,
        2800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.driver_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d6cbdd47-636a-43b3-b6ae-59d32f0528ff",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2435,
        4400
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к водителю: <b>{{ $('Ищем автомобиль по номеру').item.json[\"driver_id\"][1] }}</b>. \nВы не можете занять этот автомобиль\n<b>Введите другой номер автомобиля</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "089c68f6-f60c-4815-8c0e-260ee4c21b34",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2615,
        4280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы не можете создать заявку, ни один автомобиль не привязан к вам",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c9789193-0141-417b-ade4-19cd5a390f66",
      "name": "нельзя создать заявку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3070,
        6301
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно",
        "height": 256.48901597526793,
        "width": 538.9510110344839,
        "color": 6
      },
      "id": "74a91452-6f44-482f-b1ea-86f2c2a93aaf",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2215,
        3120
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Неизвестная команда",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "45444d71-e42c-4d25-87a5-9d4785b4b838",
      "name": "Неизвестная команда",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1315,
        4200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "e473a48a-64c5-4752-a367-910c6b528952",
      "name": "меняем статус на дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3290,
        6301
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b0111329-3781-45b7-8455-d9762a6cd41a",
      "name": "меняем статус на дефолтный1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        7555,
        6300
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3f656d98-49a2-4d21-9859-86e57369a269",
      "name": "получаем сегодняшнюю дату",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3192,
        5060
      ]
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $json.currentDate }}",
        "endDate": "={{ $('получаем документы').item.json.expiration_date }}",
        "options": {}
      },
      "id": "f016ec66-27df-4dc0-9f06-c1d655eb37b0",
      "name": "получаем разницу в днях",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3672,
        5060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=❗ {{ -$json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} назад истёк срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (был действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "05bfa767-4f6b-4b21-a1d8-a2255ebe8d29",
      "name": "если истекло",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e9831e9-427c-43c6-a1e1-d9248aca50a2",
              "name": "status",
              "value": "=⚠️ Через {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} истекает срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "93cbb749-fdec-423b-acfa-a66ac17c962a",
      "name": "скоро истекает",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5220
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $('получаем документы').item.json.expiration_date }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "29614aba-2e45-407b-8078-e4751759e66a",
      "name": "форматируем в удобный вид",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3412,
        5060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "4e8e817a-bf40-47e4-8758-0c3495fc06ee",
      "name": "объединяем доки и форматированную дату",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3572,
        5220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "ee3db16f-206a-481e-9e8c-3fc4805d8b83",
      "name": "объединяем доки+дата с разницей во времени",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4152,
        5220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0bd3f1ff-9963-406f-b40f-8c9e47ba7e30",
              "name": "timeDifference",
              "value": "={{ $json.timeDifference.days.round() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "127a9227-717f-4151-8f44-904d0c7f1c90",
      "name": "округляем",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3892,
        5060
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n    days = abs(item.json.timeDifference)\n    if days % 100 // 10 == 1:\n        item.json.sklonenie = \"дней\"\n    elif days % 10 == 1:\n        item.json.sklonenie = \"день\"\n    elif days % 10 in [2, 3, 4]:\n        item.json.sklonenie = \"дня\"\n    else:\n        item.json.sklonenie = \"дней\"\nreturn _input.all()"
      },
      "id": "6accf023-2b7e-45a7-af8b-48ccadf3de26",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4372,
        5220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b226ac9f-94b7-41b3-93d2-ad88173c7799",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует ещё {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} (действителен до {{ $json[\"formattedDate\"] }}) ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d1795e19-94f6-4e6f-976b-b20718aca4d6",
      "name": "действует долго",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "3ef67106-9497-4cc2-b816-0d6a2ee4f7f9",
      "name": "объединяем в один список",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5100,
        5160
      ]
    },
    {
      "parameters": {},
      "id": "d04a7980-4910-4e2c-a473-56a833a69ddb",
      "name": "объединяем в один список1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5280,
        5340
      ]
    },
    {
      "parameters": {
        "content": "## Создание сообщения с датой документов",
        "height": 882.2499632258869,
        "width": 3233.963243636995,
        "color": 6
      },
      "id": "ed940d29-4210-4b47-b1df-c6d02e20d717",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2575,
        4940
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "status",
              "separateBy": "other",
              "customSeparator": "={{ \"\\n\\n\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "441ef3ec-f2c7-45df-bd32-2c309e84374d",
      "name": "соединяем в единое сообщение",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        5660,
        5240
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            }
          ]
        }
      },
      "id": "fd13ec89-d027-44b1-a2c2-020bc493b7a7",
      "name": "получаем документы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2680,
        5200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dd03a5e3-6831-4754-9d0f-c649dc32d482",
              "leftValue": "={{$json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "25a03d5c-04cc-49ca-b0dc-83508b977473",
      "name": "есть ли документы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2990,
        5400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1156af14-1187-4476-bcfb-82042687aa0b",
              "name": "status",
              "value": "Документы не найдены!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c0f91181-1dcf-46e0-98d6-8e9342c6c041",
      "name": "документы не найдены",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5330,
        5560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $json.id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7af451c7-63fa-4dbb-91e3-0bc25e5f411e",
      "name": "есть ли неисправности1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2570,
        3740
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {}
      },
      "id": "d8967de3-6d3b-40e0-89f4-b4405036fd4e",
      "name": "форматируем время в удобный формат1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2850,
        3540
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "2e83097a-4efe-4f5a-b1d3-cc65a1d28d3d",
      "name": "объединяем время и текст1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3090,
        3640
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Заявки на ТО не найдены",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "26cb4197-f291-4dcc-9731-56e11f814bf8",
      "name": "Заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3235,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "operator": "notEqual",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "826c2248-949a-4eba-9138-50072d52635a",
      "name": "получим все заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2350,
        3740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "988c91e8-36b4-4f3f-9131-b8cf97b1dd63",
              "name": "=date_description",
              "value": "={{ $('объединяем время и текст1').item.json[\"formattedDate\"] }} - <b>{{ $('объединяем время и текст1').item.json[\"description_of_maintenance\"] }}</b>",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "4644bc32-9190-4e19-bb56-30fb16e525c4",
      "name": "Добавляем теги",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3315,
        3640
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "d9f3dae6-18d1-4883-b935-4fa6ff0f1d65",
      "name": "добавим перевод на новую строку",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3995,
        3420
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "12629812-862d-4024-98cc-15ab7ebb5df4",
      "name": "добавим перевод на новую строку1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4075,
        3600
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "ef3e78de-5bb2-4d69-991a-5c2f0e2240ed",
      "name": "добавим перевод на новую строку2",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4075,
        3780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Можно взять в работу:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ae308457-3c7a-4941-8ad8-ea84ba89b5b6",
      "name": "к выполнению2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4215,
        3420
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>В работе:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1a6ef97c-b5af-490c-8321-6e58b80db104",
      "name": "в работе",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4295,
        3600
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Ожидают проверки механиком:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "02852dab-2c9e-42db-858b-76aca5070321",
      "name": "требуется проверка",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4295,
        3780
      ]
    },
    {
      "parameters": {},
      "id": "c0250c08-59ce-439f-ba09-c21ccf8c9be3",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4555,
        3560
      ]
    },
    {
      "parameters": {},
      "id": "0769f8d5-deb0-4d69-a952-8e038b6ee193",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4795,
        3620
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "concatenated_date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "bfb76f5c-7873-43e1-935b-7dab789f4eff",
      "name": "в один текст объединяем",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        5015,
        3620
      ]
    },
    {
      "parameters": {
        "content": "## Вывод всех заявок",
        "height": 774.298011427,
        "width": 3433.7723550403643,
        "color": 6
      },
      "id": "226b02b3-600c-4713-94a7-33b06266d773",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1795,
        3400
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "e0ad6673-6b54-437d-a54a-94359c20de5f",
      "name": "получим авто по водителю",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1855,
        3700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d2976151-29cb-4bb1-8c9a-c68b3e769f61",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f979c99a-4d45-46c3-88b9-0d1e89fc21b6",
      "name": "если авто не привязан",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2075,
        3700
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы увидеть заявки, нужно быть привязанным к автомобилю",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9877c98f-9c18-4fed-b9c1-e1938938fcca",
      "name": "не привязан авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2295,
        3920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.chat_message_id -1}}",
        "text": "=Ошибка Odoo: {{ $json.error }}\n\nВведите количество часов заново",
        "additionalFields": {}
      },
      "id": "6fe4e6c8-bdad-4a21-95a8-5f766db04fa9",
      "name": "если есть ошибки2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2375,
        7000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод часов заявки",
        "height": 455.96505135718655,
        "width": 669.8315772631973,
        "color": 6
      },
      "id": "515a5c79-3680-4bfe-b20c-d10a4f4cccaf",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2135,
        6700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3765df7a-35ff-469e-b2b9-92e76010d0ab",
              "name": "oil",
              "value": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "94fbec67-5c09-4005-80be-ee24ea612f40",
      "name": "Преобразование одометра в число",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1655,
        5300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a4b091e-3f7b-43b9-9a07-1ce686ad3dfd",
              "leftValue": "={{ $('получаем данные автомобиля1').item.json.oil_change_schedule }}",
              "rightValue": "={{ $json.oil }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fe489c79-18f3-4928-a1dd-64bef9a9a7c2",
      "name": "Проверка нужна ли замена масла",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1855,
        5220
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, показания вашего одометра говорят о том, что пора заменить масло",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заменил",
                    "additionalFields": {
                      "callback_data": "oil"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "49a047b3-79fe-4130-835a-5d6e224191a2",
      "name": "Отправка уведомления о том, что требуется замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2035,
        5360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"<b>До замены масла осталось {{$('получаем данные автомобиля1').item.json.oil_change_schedule - $('Преобразование одометра в число').item.json.oil }} км.</b>\",\n}\n",
        "options": {}
      },
      "id": "ad60b330-e33e-4cf4-a4f0-724d99b4d142",
      "name": "инф. о замене масле для меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2055,
        5200
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"\",\n}\n",
        "options": {}
      },
      "id": "b7f8f180-9ddb-4fd8-89ed-b9fc527f1e6c",
      "name": "инф. о замене масла не нужна в меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2215,
        5360
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "my_field_2"
            }
          ]
        },
        "options": {}
      },
      "id": "2b777b3f-459f-41ec-bc00-5e1335e9eadd",
      "name": "преобразуем инф. о масле в единое для меню ТО",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2375,
        5200
      ]
    },
    {
      "parameters": {
        "content": "## Сравнение текущего показания одометра с регламентом замены масла",
        "height": 316.4822932808388,
        "width": 898.8728138140585
      },
      "id": "8c7b4101-e6f9-47e0-8238-71e337c8c060",
      "name": "Sticky Note39",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1615,
        5160
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нужно приложить фото исправления?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b930fece-61cf-4353-9e78-92e821356142",
      "name": "нужно ли приложить фото?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2455,
        6800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "2b4a0587-e4d2-4f82-93ba-bab944e2d8e8",
      "name": "возвращаем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2675,
        6800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nvar data = $('Execute Workflow Trigger').all()[0].json;\nvar number = data.message.text;\n\nconst cleanedNumber = number.replace(/\\s+/g, '').toUpperCase(); //убираем пробелы и приводим к верхнему регистру\nconst withSpaces = cleanedNumber[0] + ' ' + cleanedNumber.slice(1, 4) + ' ' + cleanedNumber.slice(4); //добавляем пробелы\nreturn {\"number\": withSpaces};"
      },
      "id": "098fd1ef-ec72-4367-84f4-34a9b404b19e",
      "name": "форматируем номер",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1815,
        4500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c72d298-2725-455b-8e85-73a899505532",
              "name": "message",
              "value": "={{ \"Заявка создана в Odoo\\n\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "88ed763d-9234-44b9-9c23-d4035a60a525",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3295,
        6100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a6d2923-aede-446a-8052-961fdb771cf2",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Сообщение доставлено механикам\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "72ea4f0f-0059-409e-a89b-1613cfed07da",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5095,
        6120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "024d9c8f-dbc9-42c0-a939-d9c930d27923",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Сообщение доставлено логистам\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7ab31c01-08c1-466b-a370-26598177bfb5",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6995,
        6200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6ac48f8b-389e-463f-842c-e20e5d3145a7",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Механики не найдены\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6e60dda5-5330-4765-b723-b2b6e8af582a",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5015,
        6340
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75b10d33-872d-42eb-8a45-8447b1dee3e7",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Логисты не найдены\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a370ae1c-7ce9-4a2f-b79c-d1ae31880a4a",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6755,
        6420
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "6c73d61d-2b62-4f21-b5df-03272dc789b2",
      "name": "отправка всего сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        7335,
        6300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "29f8f851-1606-4cac-b82b-2cec8c237333",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Нет груза",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "195edae4-181d-435c-a4bf-0511f0a2eeca",
              "leftValue": "={{ $json.status }}",
              "rightValue": "На ремонте",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "81f0a927-44c7-489f-ad19-82a21a68af6e",
      "name": "статус авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2160,
        2740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ccb22322-4df1-484b-be79-951e563591ce",
      "name": "проверка на число",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        975,
        5520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_auto",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n\"number_car\": {{ '\"' + $('получаем данные автомобиля1').item.json.number_car + '\"' }},\n\"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "619ae14b-7d01-428a-8c69-2c53374f0295",
      "name": "изменяем водителя",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2595,
        5680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/finish_shift",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \n\"quarry_hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}\n}",
        "options": {}
      },
      "id": "60684951-3cc9-423d-94e4-853a924f805d",
      "name": "сохраняем карьер часы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2055,
        5840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d40420e8-5c7a-4f1b-a6d4-a44599eae63a",
      "name": "проверка на число1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        955,
        5800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "90d6ac96-926b-4cec-8197-793ec3bab6c7",
      "name": "часы введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1395,
        6000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "eb03d4b5-c0ce-46d5-9ce6-f400407e5356",
      "name": "номер автомобиля",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1815,
        5840
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a5acd09c-31dc-4ae6-834a-a0dc268c0511",
      "name": "проверка на число2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        275,
        6320
      ]
    },
    {
      "parameters": {
        "content": "## Ввод топлива",
        "height": 385.7962170846879,
        "width": 536.8852760490331,
        "color": 6
      },
      "id": "7fd284a5-3f71-4c16-b7e6-3d0ad33e987e",
      "name": "Sticky Note57",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        595,
        6320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Литры введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b852e9bb-d174-4952-8a25-ec051b216e42",
      "name": "литры введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        715,
        6520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "У вас сохранился чек?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "df57f810-1534-45ad-aad6-4c1cca296610",
      "name": "литры введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        675,
        6360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "fuel_liters": "={{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "91cd5a94-ccbe-493a-93ef-f99b23794652",
      "name": "записываем литры",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        895,
        6360
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "67e873bf-02d6-4a10-82be-cf4e7420808e",
      "name": "проверка на число3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        275,
        6780
      ]
    },
    {
      "parameters": {
        "content": "## Ввод объёма материала",
        "height": 385.7962170846879,
        "width": 979.7416761448314,
        "color": 6
      },
      "id": "fc1dcc86-714b-4182-bf82-13b1c7958932",
      "name": "Sticky Note62",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        595,
        6780
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Объём введён неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ecf44f22-6773-4546-9d10-a4089c1bc021",
      "name": "объём введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        715,
        6980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели объём материала",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bbcc2cbf-3d84-4585-919a-e6c71589124c",
      "name": "объём введён",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1400,
        6900
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Нет заявок для отображения",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "176a52c7-3963-421c-ab93-a58316ac7842",
      "name": "Нет заявок для отображения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3995,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "c7802380-9026-4054-8cf1-46f38cd8a7d6",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3795,
        3880
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "К выполнению",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "84c7a41e-05e5-4497-b42a-1e5102906729",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "В работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "dea7aa17-5f44-45d5-a497-9cea75e85820",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Требуется проверка",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "00991697-0e3e-4927-9ed6-b2d626647a0f",
      "name": "Разделяем по статусам",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3575,
        3640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/update_odometer",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \"odometer\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}}",
        "options": {}
      },
      "id": "36bc5bf7-b707-4e9d-88be-87dc6a965f9d",
      "name": "запись одометра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1415,
        5360
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## вывод перевозок на день",
        "height": 495.6002744918392,
        "width": 2268.621133488497,
        "color": 6
      },
      "id": "dcdb0ffb-3eda-4ea6-8f67-6cfcfd31de5a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2914.297154333599,
        2271.96550043607
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $json.odoo_id }}",
        "options": {}
      },
      "id": "7e158587-7631-402a-8bc5-20ec2934a3f6",
      "name": "данные сотрудника",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -200,
        8260
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "2ec06b39-d2d2-408b-a9d5-3e9db790b96c",
      "name": "номер авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        20,
        8260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2a5d44f6-7b7d-4402-abdc-f0f1ca00161f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "57ee63ed-61d0-45f4-a4d6-aab145c5bcff",
      "name": "авто привязан?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        640,
        7580
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "66d6332e-f919-465f-9f72-7cd0d5f96cc4",
      "name": "айди для отправки сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1100,
        7920
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У водителя {{ $('данные сотрудника').item.json.resource_id[1] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема(автомобиль не указан):  \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a529f22b-439f-42f0-95b4-d541f55be1c7",
      "name": "отправка сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1320,
        7920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "9ab49ab3-c281-495b-bc39-40787d1e1e85",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a2b444bb-fca1-4035-bb19-d33ce97c8ff6",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "11461077-dc7d-4654-b55b-3d2a7e95ab9b",
      "name": "преобразуем в 1 переменную2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7340
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Логист"
            }
          ]
        }
      },
      "id": "daf7ddc2-8e05-4d92-ae15-d6084ec7de9a",
      "name": "поиск логистов1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2fd195fb-4371-4463-928e-9e3d2d0d15d0",
      "name": "поиск тг айди логистов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "b0237252-29c3-4f98-b4a8-a5140a4adb1d",
      "name": "преобразуем в 1 переменную4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1560,
        7920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Номер авто не указан!\nСообщение отправлено механикам и логистам/диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "58ab8d49-67e1-4e3f-af1b-c310f6f46ded",
      "name": "сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1800,
        7920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно: автомобиль: просто текст",
        "height": 952.8208880612963,
        "width": 2285.9105554802254,
        "color": 6
      },
      "id": "87d9e001-457d-4c19-b9dc-5f9f2a8b5ddd",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        617.0869954435207,
        7220.64235686831
      ]
    },
    {
      "parameters": {
        "content": "## Если номер авто указан",
        "height": 617.7370004574938,
        "width": 1937.6611321746518,
        "color": 7
      },
      "id": "d2b991a7-2fb0-426f-81a0-002d1c4aba69",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        7273.493779701511
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "659e5068-c344-4de1-afed-170919b5030f",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "16caf824-7a00-4284-b25b-bc72aa5905eb",
              "name": "message",
              "value": "={{ \"Создана заявка на тех. обслуживание\\nСообщение отправлено механику\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3fc8aa04-42ff-453c-a0f2-18a203316f22",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено логисту\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "389be408-b7f2-464a-b13c-1a05ee3903c4",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7520
      ]
    },
    {
      "parameters": {},
      "id": "c05a9115-5e75-4d3b-b649-6860e3196d63",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2080,
        7440
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "message",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "beedb441-1da0-4ac6-861a-e71d289007ef",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2420,
        7600
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.concatenated_message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ff08dc4d-e8aa-4199-9ba0-685f4df0bce4",
      "name": "Сообщение отправлено",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2600,
        7600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1061d20c-9e6f-4874-bef2-5951be7b7074",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2700,
        8000
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>\n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки1').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>\n\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "1f47a660-7dfb-46e2-a3d7-a646833c3fc8",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e3f3043f-4080-4130-9ca5-d027878ef346",
      "name": "Отправка проблемы логистам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "transportation"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "f0dfaacb-740b-47fd-86bd-aca2a4925e64",
      "name": "рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        280,
        8500
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "5dff3365-e53a-4381-b251-d6507d60d690",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        500,
        8500
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "get",
        "customResourceId": "={{ $json.transportation[0] }}",
        "options": {}
      },
      "id": "6428dc82-5867-40bc-a654-5e512b08bbcf",
      "name": "получим перевозку",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        720,
        8500
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о маршруте логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a28aeb62-5171-46aa-9546-9dd67798278a",
      "name": "Сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3100,
        8480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "7097a415-29a9-482d-beba-b345a33c8c2c",
      "name": "возвращаем статус4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3420,
        8480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно (маршрут: только текст)",
        "height": 258.83086086517716,
        "width": 1617.001312107392,
        "color": 6
      },
      "id": "a281585e-0043-4ea4-b86c-f5c0102b4c39",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1620,
        8407.002636411891
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "87c602db-0d4c-463f-8fa5-0aa44be23ab7",
      "name": "Aggregate2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1820,
        8740
      ]
    },
    {
      "parameters": {
        "content": "## Срочно (документы: только текст)",
        "height": 249.85481449883417,
        "width": 1370.1136540203677,
        "color": 6
      },
      "id": "e89cdd5d-d99a-4e6b-8434-bc01b984611d",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1620,
        8684
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "deb3bbeb-7501-403d-8317-d9626f3631e2",
      "name": "находим машину по odoo id9",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2940,
        2440
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9ca4914f-e529-46a9-aef2-58f9aa0b9d8f",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3940,
        2620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "8f1492b8-c66f-4177-897d-475b086045c1",
      "name": "Выводим информацию о перевозке5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4600,
        3148
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "limit": 1,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.id }}"
            }
          ]
        }
      },
      "id": "8ab78183-27e7-4d77-a1a7-83bca70bf95b",
      "name": "находим рейсы по машине",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        3540,
        2920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "ea12ca18-fefa-4908-8b98-a003862e5b8d",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3320,
        2920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2bdbc025-5543-441d-97b5-70b6c9b80c4d",
      "name": "Выводим информацию о перевозке4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4600,
        2888
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод текущей перевозки",
        "height": 432.36801840109257,
        "width": 1150.356787433489,
        "color": 6
      },
      "id": "3574338e-4ffc-41c6-a6c8-fa507da7d598",
      "name": "Sticky Note49",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2960,
        2840
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.transportation[0] }}"
            }
          ]
        }
      },
      "id": "48f57909-2848-496f-a308-da4eab65285a",
      "name": "находим перевозки по рейсам1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4160,
        3148
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## рейс выполняется",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "99d970be-8830-4909-9f91-059e031c0b4a",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4120,
        2828
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('статус авто').item.json.current_transportation[0] }}"
            }
          ]
        }
      },
      "id": "fd8887d6-4cbb-4b04-af44-03e0dba2a914",
      "name": "находим перевозки по рейсам",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4160,
        2888
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## рейс назначен",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "73a5ce8d-9a26-42d4-92b3-242d2ffa0762",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4120,
        3088
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "2c951022-ed09-4bd2-8f7a-4955e59012f0",
      "name": "создание заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3060,
        6100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "ff71a4ed-7ab8-4764-a0e0-698bf8689a5a",
      "name": "создание заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        880,
        7520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/end_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.end_request_id }},\n    \"hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }},\n    \"employee_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "e439e4bd-0d9d-4b4e-891c-1806b5d2a4e0",
      "name": "обновляем заявку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2160,
        6840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8f649e80-363e-4206-a3f8-b34fc4485dab",
      "name": "поиск тг айди логистов3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "14482882-3233-4708-b047-cc2af9ea22d6",
      "name": "Aggregate3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено диспетчеру\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "606bcb33-1b07-44b6-91ba-0dbc2bba5cac",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7700
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "ed924f6e-c295-433b-8933-336ecee67ebf",
      "name": "поиск диспетчера",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "5d853367-c767-42c9-9907-2d1aef765f36",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2240,
        7580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует бессрочно",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "19f3e501-53e7-46f3-a6a9-f64e7c7d16bb",
      "name": "бессрочно",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4880,
        4900
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {},
      "id": "6d91247a-6911-4fd2-b8cc-91d60b392944",
      "name": "объединяем в один список2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5420,
        5080
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('если авто не привязан').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "В работе"
            }
          ]
        }
      },
      "id": "95e8b1eb-e37b-4943-b89e-012609a2d2dd",
      "name": "получим все заявки \"В работе\"",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        5260,
        3620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "230d2a2f-75dd-40a3-a8c7-0ba67887863f",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a7f4e2cf-c106-4393-8736-df58cdb9aa70",
      "name": "Проверка есть ли такие заявки",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5440,
        3620
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку",
                    "additionalFields": {
                      "callback_data": "finish_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "29922dea-eb7b-4b56-a200-0767035a2455",
      "name": "Вывод с кнопкой \"завершить заявку\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5720,
        3560
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_TO"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "96e843bd-b1aa-45c7-83d4-06a90cdec385",
      "name": "Вывод с кнопкой \"назад\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5700,
        3780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c11f9dbf-4f4e-413d-ad95-d4e011e34c40",
      "name": "Получение даты",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2100,
        2880
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "driver.schedule",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "date",
              "value": "={{ $json.currentDate }}"
            }
          ]
        }
      },
      "id": "8794e850-a170-458a-8b89-143b2c20ce0a",
      "name": "Получение машины из графика",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2260,
        2880
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "25225955-cb86-434c-be8e-0b0a19d69a22",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9d6490b8-83ea-4bb6-a08b-5d519b4151c0",
      "name": "Проверка есть ли водитель в графике",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2420,
        2880
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a87d0713-265d-4fba-ba81-562bc24f4db6",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2560,
        3000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=По графику ваш автомобиль  \n<b>{{ $json.car[1] }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выбрать",
                    "additionalFields": {
                      "callback_data": "pick_car"
                    }
                  },
                  {
                    "text": "Взять другой",
                    "additionalFields": {
                      "callback_data": "other_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a7b3fb25-74f4-4c79-847b-c2d2cb403da7",
      "name": "сообщение ввода автомобиля1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2660,
        2880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "0cb68501-ccaf-4d78-9840-a10b02a60462",
      "name": "меняем статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2780,
        3060
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Подтвердите правильность автомобиля и номера:\n<b>{{ $json.model }} - {{ $json.number_car }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Подтвердить",
                    "additionalFields": {
                      "callback_data": "correct_number"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести номер авто заново",
                    "additionalFields": {
                      "callback_data": "back_to_input_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3f1c2cdb-b31a-44c6-931b-d07db496ad20",
      "name": "проверка правильности номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2800,
        4420
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "operator": "in",
              "value": "={{ [\"Логист\"] }}"
            }
          ]
        }
      },
      "id": "f92b2003-3934-4d2a-9966-b416155a59de",
      "name": "поиск логистов2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        960,
        8514
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_id",
              "operator": "in",
              "value": "={{ [\"Механик\", \"Логист\", \"Диспетчер\"] }}"
            }
          ]
        }
      },
      "id": "ffad607d-725e-4412-9a21-c3e62d69f352",
      "name": "механики и логисты",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        880,
        7920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c46761a6-bd77-499b-a226-be652733805c",
      "name": "Отправка проблемы диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Отправьте сообщение, фото, видео, запись диктофона или кружок",
        "additionalFields": {}
      },
      "id": "e8ca767a-a0b7-4cd5-a96f-72b8a8552f6d",
      "name": "убираем кнопку назад3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3540,
        8140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0de93e9b-d514-4add-80b5-2c104830d328",
      "name": "поиск тг айди логистов2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1180,
        8514
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "a26db22a-3f43-49b0-82a3-f98a86e8b206",
      "name": "диспетчер1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2000,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "58822552-9408-4ef5-9504-e3dda099c083",
      "name": "диспетчер2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2040,
        8480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a024a13a-fa39-41e8-be92-2056bf1dece7",
      "name": "айди для отправки сообщения3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2220,
        8480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "d336e8f7-1201-4606-972e-6a7cea7ece29",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2500,
        8740
      ]
    },
    {
      "parameters": {
        "errorMessage": "driver reply"
      },
      "id": "44475214-d625-4fa7-b17f-5a8737c336d7",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -725,
        3120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "-4161741739",
        "text": "=У водителя <a href=\"tg://user?id={{ $('Execute Workflow Trigger').item.json.message.chat.id }}\">{{ $('данные сотрудника').all()[0].json.name }}</a>(авто {{ $('номер авто').all()[0].json.number_car }}) проблема на маршруте <b>{{ $('получим перевозку').all()[0].json.display_name.substring(11) }}</b>: <i>{{ $('Execute Workflow Trigger').all()[0].json[\"message\"][\"text\"] }}</i>\n\n{{ $('в один текст').item.json.concatenated_logists != `@<a href=\"tg://user?id=\">Логист</a>` ? $('в один текст').item.json.concatenated_logists : \"\"}}\n{{ $('в один текст1').item.json.concatenated_dispatchers != `@<a href=\"tg://user?id=\">Диспетчер</a>` ?  $('в один текст1').item.json.concatenated_dispatchers : \"\"}}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c4233256-ad8b-4dec-ad46-853d260e6604",
      "name": "отправка в чат",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2880,
        8480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "logists",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "068b3d35-0529-4b59-a09f-93b72bba656b",
      "name": "в один текст",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1843,
        8483
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "logists",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Логист</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "04188c56-f099-4082-acc2-2fccdc9371a2",
      "name": "айди логистов",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1643,
        8483
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "dispatchers",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Диспетчер</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5b813697-07c2-470c-bf7a-00fc52aaa5a4",
      "name": "айди диспетчера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2420,
        8480
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dispatchers",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "e99f28c0-48c7-4dea-8230-6fb62bb50510",
      "name": "в один текст1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2660,
        8480
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "0a959ccd-a054-480f-95fd-169e688f5c9c",
      "name": "есть авто?",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        476,
        3838
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "aa34d759-7ed5-432a-990f-a196eae48734",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "65f8010f-cd3c-43a2-81b8-8116e4e2969c",
      "name": "привязан авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        696,
        3838
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы написать диспетчеру, нужно пройти утренний осмотр автомобиля",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "426b3156-9704-4941-8cdd-c1a93f939cbd",
      "name": "нужен авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        936,
        3898
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Введите ваше сообщение диспетчеру",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a52e7be7-3c06-40f1-a309-e60ce4b65227",
      "name": "введите сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        936,
        3738
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "inputing_to_dispatcher"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "d8f10bd9-43cd-4ce2-b4cf-f38a31063b37",
      "name": "статус=ввод сообщения диспетчеру",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1156,
        3738
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Сообщение диспетчеру",
        "height": 315.0421795158151,
        "width": 863.4674878401926,
        "color": 6
      },
      "id": "9661ec19-48f0-4a82-9e41-368350823d4e",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        3720
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').item.json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a>(авто {{ $('номер авто').item.json[\"number_car\"] }}) на маршруте {{ $('получим перевозку').all()[0].json.display_name.substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e1617857-f53f-4072-815c-61ec468ac31c",
      "name": "отправка логистам о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        8734
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "656da5e6-0303-4248-ba6e-75395e56c16f",
      "name": "айди для отправки сообщения4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2160,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').item.json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a>(авто {{ $('номер авто').item.json[\"number_car\"] }}) на маршруте {{ $('получим перевозку').all()[0].json.display_name.substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2a777d31-d6a8-4c82-988b-42d8dc15a746",
      "name": "отправка диспетчеру о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2340,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о документах логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "6138d48a-1271-4dfe-9d8d-4be38d954914",
      "name": "Сообщение отправлено2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2700,
        8740
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "43e2487e-3311-4716-8ee5-182e60c4df71",
      "name": "диспетчер3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        160,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "88e2476d-55c3-4e68-ac32-713b87117eed",
      "name": "айди для отправки сообщения5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        380,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Несрочное сообщение",
        "height": 233.01808081143514,
        "width": 1709.1877305719204,
        "color": 6
      },
      "id": "c71c4a98-16c0-4a12-ac44-eb1d261f07de",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -244.3380515945937,
        8740
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $json.odoo_id }}",
        "options": {}
      },
      "id": "8a0c8400-b58f-494e-afdd-04d4ab79bb75",
      "name": "данные сотрудника1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -220,
        8800
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "74a0cad8-6d92-471b-8142-42dc8c245412",
      "name": "номер авто1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -40,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "91670365-0cc3-4ffb-ade0-4f27f7db9df3",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        760,
        8800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили сообщение диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e86f7617-9c6e-4be2-85a1-108f97668cd4",
      "name": "Сообщение отправлено3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        960,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Введите ваше сообщение диспетчеру",
        "additionalFields": {}
      },
      "id": "899c0a63-205e-497b-a689-21c08092b860",
      "name": "убираем кнопку назад4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1160,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "d8610ec6-7fe1-4584-b9a7-4a3b1eecf6c2",
      "name": "возвращаем статус5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1340,
        8800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Сообщение от водителя автомобиля {{ $('номер авто1').item.json.number_car }}, {{ $('данные сотрудника1').item.json.name }}, <a href=\"tel:{{ $('данные сотрудника1').item.json.mobile_phone }} \">{{ $('данные сотрудника1').item.json.mobile_phone }}</a>:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ответить на сообщение",
                    "additionalFields": {
                      "callback_data": "=answer_to_not_urgent_{{ $('Execute Workflow Trigger').item.json.message.chat.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2b2bb6ea-4644-4aaa-9b5d-fae2ce95364c",
      "name": "сообщение диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нет доступных перевозок/рейсов",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "f27907fc-56b7-4683-828a-34198010631d",
      "name": "Рейсы не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3920,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.formattedDate }}",
                    "rightValue": "01.01.1970",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4d8ac404-b74b-4df3-8919-0de5596a2e53",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c7b85a8b-0464-40f1-becb-57f1a23f84b7",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 31,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "1682102d-3f66-4582-9f0d-d399bd31df16",
      "name": "сколько дней до окончания срока",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4592,
        5220
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "route",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "cd6ec3dc-180b-43ea-8c12-a7d7e91ea930",
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "e5630a8f-b37f-475b-95b3-b53a0274b67e",
      "name": "маршрут",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1380,
        8514
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8d2985d3-8e7c-4eff-8ec2-6aba1f85b943",
      "name": "Получение даты1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        5940,
        5240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6160867c-892e-41f3-8005-31ea66475bd6",
              "leftValue": "={{ $('есть ли неисправности2').item.json.date }}",
              "rightValue": "={{ $('Получение даты1').item.json.currentDate }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f01fb71a-c107-493f-b219-c1334dcfbe2e",
      "name": "запланирован ли ремонт/ТО",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7188,
        5100
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $json[\"data\"];\n\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return day + '.' + month + '.' + year;\n}\n\nlet combinedMessage = '';\n\nitems.forEach(item => {\n    const formattedDate = formatDate(item[\"date\"]);\n    let message = '';\n    let description = '';\n    if (item[\"description_of_maintenance\"] != false) {\n        description = ' (' + item[\"description_of_maintenance\"] + ')';\n    } else {\n        description = '';\n    }\n\n    if (item[\"tech_maintenance\"]) {\n        message = '<b>🛠У вас запланировано ТО' + description +'</b> на ' + '<b>' + formattedDate + '</b>';\n    } else {\n        message = '<b>🛠У вас запланирован ремонт' + description + '</b> на ' + '<b>' + formattedDate + '</b>';\n    }\n\n    combinedMessage += message + '\\n';\n});\n\nconst finalMessage = '\\n' + combinedMessage.trim() + '\\n';\n\nreturn [{\n    json: {\n        message: finalMessage\n    }\n}];"
      },
      "id": "e2700ef4-882b-48b8-8b1f-4c3d388a3a5b",
      "name": "текст для запланированного ТО/Ремонта",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8028,
        5260
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "86f3b9fc-13da-4614-9bb5-767071200bee",
      "name": "объединяем данные о запланированных работах",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        7580,
        5260
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "a1da3ed8-582e-4700-98e0-a91eec8862b9",
      "name": "объединяем сообщения",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        8700,
        5060
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $json[\"data\"] || [];\n\nlet concatenatedData = \"\";\nlet messageData = \"\";\n\ndata.forEach(item => {\n    if (item.result) {\n        concatenatedData = item.result;\n    }\n    if (item.message) {\n        messageData = item.message;\n    }\n});\n\nlet finalMessage = \"\";\n\nif (concatenatedData) {\n    finalMessage += \"\\n\" + concatenatedData + \"\\n\";\n}\n\nif (messageData) {\n    finalMessage += messageData;\n}\n\nreturn [\n    {\n        json: {\n            finalMessage: finalMessage\n        }\n    }\n];"
      },
      "id": "e0e8e287-344b-4c2e-9f33-5619d0887d28",
      "name": "объединение заявок и запланированных в одно сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8920,
        5060
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').item.json[\"concatenated_status\"] }}\n\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').item.json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').item.json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').item.json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').item.json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "5d25b3ea-7360-4011-aac9-b847c7955dd8",
      "name": "Меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        7320,
        5480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "63c6f89d-1de3-4992-9d68-0ef53c64d991",
      "name": "возвращаем статус6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        9148,
        5460
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "fieldName": "status",
              "operator": "notEqual",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "60ba4e37-c3f8-4241-819a-501284c9e550",
      "name": "получим все неисправности1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        6180,
        5380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $('убираем пустые списки').item.json }}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c26d9592-3a95-4971-afed-c4ff57165fd6",
      "name": "есть ли неисправности2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6900,
        5240
      ]
    },
    {
      "parameters": {
        "content": "## Вывод неисправностей и напоминаний о запланированных ТО/ремонтов перед сменой",
        "height": 702.728777590311,
        "width": 3479.9961837874575,
        "color": 6
      },
      "id": "f6a31e3e-e9d4-4d08-937a-5c1e37bd7bc0",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5899.1101003847225,
        4960
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {}
      },
      "id": "7ac860de-70ce-4d9d-9f68-4833e97c7de6",
      "name": "форматируем время в удобный формат2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7560,
        4980
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').all()[0].json[\"concatenated_status\"] }}\n{{ $json.finalMessage }}\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').all()[0].json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').all()[0].json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6636005c-a21c-4261-9f39-3bb7a3ff17d7",
      "name": "Меню ТО3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        9168,
        5060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "5ef9f068-0880-447d-bca2-89b295d11f6a",
      "name": "объединяем время и текст2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        7780,
        5060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90695d8c-3cb9-4dd0-a519-10f98ad471c2",
              "name": "dateAndText",
              "value": "={{ $('объединяем время и текст2').item.json.formattedDate }} - <b>{{ $('объединяем время и текст2').item.json.description_of_maintenance }}</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f0a67166-e54c-4693-8247-f3e7503881e8",
      "name": "добавляем теги1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7700,
        4560
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dateAndText",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "cdea3a9d-cd89-4fc5-9fbf-0ef2312fe3e2",
      "name": "добавляем разделитель - новая строка1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        7940,
        4560
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "369f4007-31dd-4a5b-bce8-3b252f9b0fcd",
      "name": "Выводим информацию о перевозке6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5180,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "51296e67-ad6c-4f28-859d-28daa8f0495b",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3220,
        2440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "82fa3b1a-a7ad-49b5-943a-575c31c7c4e3",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3500,
        2380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a4b6ce42-0b68-456b-9caf-551da38d9da7",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        2380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "fceaffcf-ff06-49b4-a4eb-cc140736dba4",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4120,
        2440
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "8af74876-857b-4f55-9de3-fb2fb35c8236",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4980,
        2320
      ]
    },
    {
      "parameters": {},
      "id": "f2b62919-09d9-4232-a7ff-d92e03ddcb71",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4980,
        2460
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "99fe1d1e-0e29-48f4-b917-aaa0ba0b8f25",
      "name": "перевозки+имена1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4740,
        2320
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.rounds }}"
            },
            {
              "fieldName": "driver",
              "operator": "notEqual",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "driver",
              "operator": "notEqual",
              "value": "={{ null }}"
            }
          ]
        }
      },
      "id": "145aebe8-b9d9-4143-bf68-3b546e0b86d4",
      "name": "рейсы в перевозке1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4340,
        2460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "7537a40d-8081-49d2-863b-68dc5b66e4bd",
      "name": "склеить имена водителей1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4740,
        2460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "542c1217-af3f-43d8-832d-f3f84baf6c6e",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5220,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "997a4bd6-179e-4131-8d36-60259ab52106",
      "name": "Вывод перевозок на день, работа первой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5500,
        2240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "dccf77e5-cc14-4c4c-ad28-713b92844bc3",
      "name": "Выводим информацию о перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5500,
        2440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
            "current_quarry_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "5b8758c7-86b9-4b01-a982-d2e3143a94ca",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -940,
        6160
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод карьер-часов",
        "height": 476.3912289841209,
        "width": 940.444874510144,
        "color": 6
      },
      "id": "3df52e97-144c-49cb-83ac-1a3efcbff808",
      "name": "Sticky Note58",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1500,
        6080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "655c9e6c-4214-48e0-abbd-5918a700cac2",
      "name": "проверка на число4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1480,
        6180
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "8be1e327-51ad-41a8-b899-7cbfdbb3b3ed",
      "name": "часы введены неверно1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1180,
        6360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы ввели карьер-часы - <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_quarry_hours"
                    }
                  },
                  {
                    "text": "Ввести заново",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "07c61032-c528-4011-942d-6e5d7ad84f82",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1160,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели данные, смена завершена!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3f442b25-2e84-40b0-8711-d706be56b71d",
      "name": "данные смены введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1365,
        5840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Произошла ошибка, повторите ввод данных одометра",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "21a8ef78-dccd-43cd-ad08-fd5d6babe693",
      "name": "одометр введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1315,
        5580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id-1 }}",
        "text": "=Введите количество карьер-часов. Пример: \"8\"",
        "additionalFields": {}
      },
      "id": "364e8332-957b-4da0-83e5-702854a21ddb",
      "name": "Удаление кнопки в вводе часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -720,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "cc59faee-5016-494b-94ef-0f4403e0b03d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -960,
        2900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "weight_measure": "={{ $('Execute Workflow Trigger').item.json.message.text }} {{ $('Execute Workflow Trigger').item.json.weight_measure}} "
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "5e885843-0d52-436f-8a21-b327d35358e8",
      "name": "записываем объём материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        700,
        6820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "057c9126-6a23-49e4-abaa-2f9fe7e1686f",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        880,
        6820
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "7fa6def7-5204-42d1-a3a4-9f9b269c2e3e",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "7aaa49bc-cb4e-4a85-b85f-aebc36d75054",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3140,
        3080
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "8e0d26ea-1985-4e85-9762-6c49c169822c",
      "name": "преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5720,
        3008
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "e6d763a3-ff79-496f-a515-d30e2dafe798",
      "name": "получение перевозок1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5060,
        3048
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "8475bba1-bcfe-4809-8108-c7ba66372f3e",
      "name": "Сортировка перевозок и работ в карьере2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5280,
        3008
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "87600196-ae6b-48d0-a51c-48c348eb89f9",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5500,
        3008
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "04619d41-4e7f-492e-bc97-7a482fedf16e",
      "name": "находим машину по odoo id",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4860,
        3048
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы выполняете:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "5acdd56f-b2ba-4220-847c-95165449d6e6",
      "name": "Выводим информацию о перевозке7",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5920,
        3008
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## вывод текущей работы в карьере",
        "height": 229.27416531557694,
        "width": 1247.7741668527976
      },
      "id": "6f61e469-28b5-4b6b-b928-39beb8c634a8",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4820,
        2980
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $input.all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "32dff10a-2b64-4558-a4a7-2998f063651c",
      "name": "в одно сообщение2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4360,
        3148
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $input.all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "1c6a5cfc-d236-4573-869c-a1dd64f4511c",
      "name": "в одно сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4360,
        2888
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "7526c000-8b67-45b6-bd53-90a5b5586b36",
      "name": "убираем кнопку назад и оставляем тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        7000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d7c1373f-2bd3-4312-aef7-8dc2c0b0e1ca",
      "name": "убираем кнопку назад и оставляем м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        6800
      ],
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "driver[1]",
        "options": {}
      },
      "id": "8ecb07e5-da9d-4ba4-bddf-46591b0dec38",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        4560,
        2460
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5c48b301-6b7f-458c-916a-0d609f0f6712",
      "name": "проверка на число5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1820,
        6840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, введите еще раз",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "f99d84aa-a855-49b3-92b8-a1ca2bfa525e",
      "name": "часы введены неверно2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        7020
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "full.quarry.work",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "id",
            "sum_of_quarry_works",
            "display_name",
            "date",
            "cost_for_driver"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "quarry_work_drivers",
              "value": "={{ $json.resource_id[1] }}"
            }
          ]
        }
      },
      "id": "12eeddf3-5210-4bcb-973f-757d5a05b337",
      "name": "Получение работ в карьере",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1300,
        960
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, sum_of_quarry_works, cost_for_driver, date } = entry;\n\n        // Если driver_rate == false, заработок равен 0\n        if (cost_for_driver === false) {\n            return {\n                id: id,\n                quarry_hours: sum_of_quarry_works,  // Замена count на quarry_hours\n                total: 0,\n                date: date\n            };\n        }\n\n        // Извлекаем количество и ставку из driver_rate\n        const rate_value = cost_for_driver;\n        const rate = parseFloat(rate_value);  // Преобразуем ставку в число\n\n        // Общая сумма заработка\n        const total = sum_of_quarry_works * rate;\n\n        return {\n            id: id,\n            quarry_hours: sum_of_quarry_works,  // Замена count на quarry_hours\n            total: total,\n            date: date\n        };\n    });\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n\n"
      },
      "id": "fd1fd79b-7507-4506-a75e-971b60f14b15",
      "name": "Получение суммы заработка за карьер",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        920
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = items.map(item => item.json);\n\n// Определяем текущую дату\nconst today = new Date();\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + 1); // Понедельник текущей недели\n\n// Определяем начало и конец текущего месяца\nconst startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n\n// Функция для проверки, попадает ли дата до сегодняшнего дня\nfunction isBeforeToday(dateStr) {\n    const date = new Date(dateStr);\n    return date >= startOfMonth && date <= today;\n}\n\n// Инициализируем объект для хранения данных по дням недели\nconst weeklyReport = {};\nconst pastWeeksReport = {};\n\n// Заполняем объект weeklyReport и pastWeeksReport\nfor (let i = 0; i < 7; i++) {\n    const date = new Date(startOfWeek);\n    date.setDate(startOfWeek.getDate() + i);\n    const dateStr = date.toISOString().split('T')[0];\n    weeklyReport[dateStr] = { count: 0, quarry_hours: 0, total: 0 };\n\n    // Инициализируем объект для прошлых недель\n    if (date >= startOfMonth && date <= today) {\n        const weekStart = new Date(startOfWeek);\n        weekStart.setDate(startOfWeek.getDate() - 7); // Начало прошлой недели\n        const weekEnd = new Date(startOfWeek);\n        weekEnd.setDate(startOfWeek.getDate() - 1); // Конец прошлой недели\n\n        // Добавляем в pastWeeksReport\n        while (weekStart >= startOfMonth) {\n            const weekStartStr = weekStart.toISOString().split('T')[0];\n            pastWeeksReport[weekStartStr] = { count: 0, quarry_hours: 0, total: 0 };\n            weekStart.setDate(weekStart.getDate() - 7);\n        }\n    }\n}\n\n// Агрегируем данные для текущей недели\ninputData.forEach(entry => {\n    if (isBeforeToday(entry.date)) {\n        const dateStr = entry.date;\n        if (weeklyReport[dateStr]) {\n            if (entry.count !== undefined) {\n                weeklyReport[dateStr].count += entry.count;\n            }\n            if (entry.quarry_hours !== undefined) {\n                weeklyReport[dateStr].quarry_hours += entry.quarry_hours;\n            }\n            if (entry.total !== undefined) {\n                weeklyReport[dateStr].total += entry.total;\n            }\n        }\n    }\n});\n\n// Агрегируем данные для прошлых недель\ninputData.forEach(entry => {\n    const date = new Date(entry.date);\n    if (date >= startOfMonth && date <= today) {\n        const weekStart = new Date(date);\n        weekStart.setDate(date.getDate() - date.getDay() + 1); // Понедельник недели даты\n        const weekStartStr = weekStart.toISOString().split('T')[0];\n        if (pastWeeksReport[weekStartStr]) {\n            if (entry.count !== undefined) {\n                pastWeeksReport[weekStartStr].count += entry.count;\n            }\n            if (entry.quarry_hours !== undefined) {\n                pastWeeksReport[weekStartStr].quarry_hours += entry.quarry_hours;\n            }\n            if (entry.total !== undefined) {\n                pastWeeksReport[weekStartStr].total += entry.total;\n            }\n        }\n    }\n});\n\n// Формируем текст для Telegram-сообщения\nlet textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n// Сортируем дни недели от текущего дня к понедельнику\nconst sortedDates = Object.keys(weeklyReport)\n    .filter(dateStr => new Date(dateStr) <= today)\n    .sort((a, b) => new Date(b) - new Date(a)); // Сортировка от текущего дня к понедельнику\n\nif (sortedDates.length === 0) {\n    textMessage += 'Не было данных за текущую неделю.\\n\\n';\n} else {\n    sortedDates.forEach(dateStr => {\n        const date = new Date(dateStr);\n        const dayOfWeek = date.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const report = weeklyReport[dateStr];\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (report.count === 0 && report.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${report.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${report.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${report.total} руб.\\n\\n`;\n        }\n    });\n}\n\n// Добавляем отчет за прошлые недели месяца\nconst hasPastWeeks = Object.keys(pastWeeksReport).length > 0;\nif (hasPastWeeks) {\n    textMessage += '📊 <b>Отчет за прошлые недели месяца</b>\\n\\n';\n\n    const sortedPastWeeks = Object.keys(pastWeeksReport)\n        .sort((a, b) => new Date(b) - new Date(a)); // Сортировка от текущей недели к более ранним неделям\n\n    sortedPastWeeks.forEach(weekStartStr => {\n        const weekStartDate = new Date(weekStartStr);\n        const weekEndDate = new Date(weekStartDate);\n        weekEndDate.setDate(weekEndDate.getDate() + 6); // Конец недели\n        const weekStartFormatted = weekStartDate.toLocaleDateString('ru-RU', { day: 'numeric', month: 'numeric' });\n        const weekEndFormatted = weekEndDate.toLocaleDateString('ru-RU', { day: 'numeric', month: 'numeric' });\n\n        textMessage += `📅 <b>Неделя с ${weekStartFormatted} по ${weekEndFormatted}:</b>\\n`;\n        textMessage += `🔹 Количество рейсов: ${pastWeeksReport[weekStartStr].count}\\n`;\n        textMessage += `🔹 Карьерные часы: ${pastWeeksReport[weekStartStr].quarry_hours} ч\\n`;\n        textMessage += `🔹 Заработок: ${pastWeeksReport[weekStartStr].total} руб.\\n\\n`;\n    });\n}\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "dfab015e-5c8b-4239-85c8-c6e47793be48",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3020,
        760
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.from.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "cb24d70f-d5d1-4931-813e-6b91a3fb8b47",
      "name": "Telegram3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3340,
        760
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "d98a77a9-5224-4c18-a898-c75a91d8ad5b",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2800,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4eb3bffd-2c3d-4ff3-ab20-adfc77391ccc",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "46bae487-b0f1-4f77-adc0-68d92ec3045d",
      "name": "Есть ли перевозки1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        900,
        660
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "За последний месяц не было перевозок",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "81f99a1e-5b91-4768-87dc-7fc62d64f3c7",
      "name": "За последний месяц не было перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1200,
        780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод статистики \nПока данные берутся из Postgres",
        "height": 626.577500188101,
        "width": 3182.3458029008684,
        "color": 6
      },
      "id": "35f3d064-c8b6-46a1-b36c-eb1ccf9a2163",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        440,
        1200
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "99d1ceef-0c9e-4ce4-b65e-0eadffb5c992",
      "name": "Получение информации о водителе2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        500,
        660
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.transportation",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "id",
            "driver_rate",
            "date",
            "trailer_driver_rate"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "round_drivers",
              "operator": "like",
              "value": "={{ $json.resource_id[1] }}"
            }
          ]
        }
      },
      "id": "760b4c48-b812-4168-95f0-bfa651757a30",
      "name": "Получение перевозок водителя2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        720,
        660
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "driver",
              "value": "={{ $('Получение информации о водителе2').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            }
          ]
        }
      },
      "id": "e48d9477-b4b8-4f0e-bd14-0f00d4b05c9a",
      "name": "Получение рейсов по перевозкам2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1340,
        540
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "id",
              "order": "descending"
            }
          ]
        },
        "options": {}
      },
      "id": "240e1e3f-6995-421f-a60f-ff8084f2c161",
      "name": "Sort1",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1640,
        740
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "012a6fa8-df41-42e3-9ff0-203a8e4bade8",
      "name": "Объединение рейсов в один файл2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1620,
        540
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {
          "fuzzyCompare": true
        }
      },
      "id": "a54ea1c1-33e1-4e3c-9dbf-fafe73e86f92",
      "name": "Merge9",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2360,
        700
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "id",
              "order": "descending"
            }
          ]
        },
        "options": {}
      },
      "id": "64e94bec-da94-4c76-8afa-2cf17ef621de",
      "name": "Sort5",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        2120,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, total_count, with_trailer_count, driver_rate, trailer_driver_rate, date } = entry;\n\n        // Количество рейсов без прицепа\n        const without_trailer_count = total_count - with_trailer_count;\n\n        // Общая сумма за рейсы без прицепа\n        const total_without_trailer = without_trailer_count * driver_rate;\n\n        // Общая сумма за рейсы с прицепом\n        const total_with_trailer = with_trailer_count * trailer_driver_rate;\n\n        // Общая сумма всех рейсов\n        const total = total_without_trailer + total_with_trailer;\n\n        return {\n            id: id,\n            count: total_count,\n            total: total,\n            date: date\n        };\n    });\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "5c2a8f31-5ef0-4d6a-bcad-66edd73f8adc",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2580,
        720
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst input = items[0].json;\n\nconst inputData = input.data;\n\nfunction processTransportations(data) {\n    const transportations = {};\n\n    data.forEach(entry => {\n        const transportId = entry.transportation[0];\n        const driverWithTrailer = entry.driver_with_trailer;\n\n        if (!transportations[transportId]) {\n            transportations[transportId] = {\n                totalCount: 0,\n                withTrailerCount: 0\n            };\n        }\n\n        // Увеличиваем общее количество рейсов\n        transportations[transportId].totalCount += 1;\n\n        // Увеличиваем количество рейсов с прицепом, если он есть\n        if (driverWithTrailer) {\n            transportations[transportId].withTrailerCount += 1;\n        }\n    });\n\n    return Object.keys(transportations).map(transportId => {\n        return {\n            id: transportId,\n            total_count: transportations[transportId].totalCount,\n            with_trailer_count: transportations[transportId].withTrailerCount\n        };\n    });\n}\n\nconst processedData = processTransportations(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "ffde3999-fb13-49c6-9547-33cb93df7b09",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        540
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Выполняется",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "8f16fd18-1271-49f2-a3b2-81e9f3ef31f4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Назначен",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "60e14a74-a750-4ebb-9d16-42b0d1b2faa9",
                    "leftValue": "={{ $('Limit').item.json.quarry_works }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "11f82737-b17a-4686-a68c-fe9e4b06dbac",
      "name": "проверка выполняющихся рейсов или работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3760,
        2920
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "771bd0bc-b4a6-463d-baab-9e5e696ec66a",
      "name": "айди последнего сообщения2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4800,
        3240
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b> водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: {{ $('Execute Workflow Trigger').item.json.message.text }} \n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "735dd01f-ab4a-4a04-ab7d-faafe4923e9b",
      "name": "Отправка проблемы механикам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4710,
        6121
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: {{ $('Execute Workflow Trigger').item.json.message.text }} ",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ac6c1d09-3850-44ae-bbd0-0571699ed4bf",
      "name": "Отправка проблемы логистам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6520,
        6200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4e939449-84e4-498e-84a6-eaa528a1407c",
      "name": "Проверка старта",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -425,
        2840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы уже авторизованы",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Срочно",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Моя статистика",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заявки на ТО",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "af5d60fe-ec5e-458f-b6f4-a8c633756697",
      "name": "/start",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        740,
        2480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "={{ \"\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "756a48d4-2f7f-4532-b7e2-749df92ae660",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        180,
        8000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_warn_message",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5f0d2bb4-f1ab-41cf-87ff-a91e750353da",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_to_dispatcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "257f59a6-c5b1-4d0f-9db6-89944ed14e79",
      "name": "проверка статуса2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -400,
        8480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c328907d-5e2f-4059-b43d-dec7c9a2136a",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "authorized",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ed5a4e82-0574-4022-a4e9-a9e3d492e32f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_car_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "27af43d5-2d5c-4cf3-9fd6-11b9316f9089",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_odometer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c2794bc8-e2a0-40b4-b9a7-bf906ac1f32b",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_data_after_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "886fe962-d8ac-4fe7-bfc6-53735b1d1c2f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b1352144-6e5b-4776-aed7-ef2b3b1af6ea",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "03354b42-0d53-4fdf-8303-664dfa71f703",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_fuel_count",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a7622408-5f09-4a62-aa84-c23ede0d56a4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "119a2411-e4a8-48a4-bece-f74c47e3c9d1",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a26756d7-fa52-4ed2-bea6-4357d21ab946",
      "name": "проверка статуса авторизации",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -80,
        5740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Моя статистика",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "46700892-d6f7-4494-9b30-6e3a9344bc28",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Приступить к работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e9d1379d-cad3-4666-a782-5366de1a5ead",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Срочно",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "41f0fd84-a2a8-4d16-8bd0-ea0e5824d5dc",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Заявки на ТО",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0d0a1a6d-fc12-4cdd-9ac1-c419d96eae91",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Связь с диспетчером",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c39e26d5-2074-472a-b520-8450836c8c3c",
      "name": "Разделение reply-кнопок или иного ввода",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -205,
        3240
      ]
    },
    {
      "parameters": {},
      "id": "ffec7765-4886-42b7-a106-8115f621ae2a",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        8460,
        5160
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "fieldName": "tech_maintenance",
              "value": "={{ true }}"
            },
            {
              "fieldName": "status",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "5a91d9c9-b033-40fa-9571-203cf96a1a53",
      "name": "получим все пройденные ТО",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        6180,
        5100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем данные из предыдущего шага\nconst items = $input.all();\n\n// Переменные для хранения итоговых сообщений\nlet maintenanceText = \"\";\nlet nonMaintenanceText = \"\";\n\n// Флаги для отслеживания, были ли добавлены заголовки\nlet maintenanceHeaderAdded = false;\nlet nonMaintenanceHeaderAdded = false;\n\n// Проходим по каждому элементу из массива заявок\nfor (let item of items) {\n  const formattedDate = item.json.formattedDate;\n  const description = item.json.description_of_maintenance;\n\n  // Проверка для техобслуживания (ТО)\n  if (item.json.tech_maintenance === true && item.json.status === 'Готово') {\n    // Добавляем заголовок только один раз\n    if (!maintenanceHeaderAdded) {\n      maintenanceText += `<b>Пройденные ТО:</b>\\n`;\n      maintenanceHeaderAdded = true;\n    }\n    maintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n  \n  // Проверка для заявок на техобслуживание\n  if (item.json.tech_maintenance === false) {\n    // Добавляем заголовок только один раз\n    if (!nonMaintenanceHeaderAdded) {\n      nonMaintenanceText += `\\n<b>Найдены заявки на техобслуживание:</b>\\n`;\n      nonMaintenanceHeaderAdded = true;\n    }\n    nonMaintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n}\n\n// Формируем финальный текст\nlet finalText = \"\";\n\n// Если есть текст по ТО, добавляем его\nif (maintenanceText) {\n  finalText += maintenanceText;\n}\n\n// Если есть текст по заявкам на техобслуживание, добавляем его\nif (nonMaintenanceText) {\n  finalText += nonMaintenanceText;\n}\n\n// Возвращаем результат\nreturn [\n  {\n    json: {\n      result: finalText.trim() // Возвращаем итоговый текст, убрав лишние пробелы\n    }\n  }\n];\n"
      },
      "id": "37199984-4ee3-4108-aef5-e9fdb9314743",
      "name": "текст для запланированного ТО/Ремонта1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8048,
        5060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ae491c28-3b50-427e-b12d-f77d6b4ed1d9",
              "leftValue": "={{ $('объединяем пройденные ТО и остальные заявки').item.json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b8a3db7-dcd3-48c4-9b47-f51ddd4205d6",
      "name": "убираем пустые списки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.1,
      "position": [
        6660,
        5240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "6c9000c3-9408-471d-8bd3-48a1e4b1fa03",
      "name": "объединяем пройденные ТО и остальные заявки",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6440,
        5240
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "6905d00d-a0b5-4be8-8b8e-2ea037510fa8",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/quickly",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "6569f114-fa63-4967-9d77-4c1927b57a41",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/dispatcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "475cdd9e-74f2-4ff7-8910-57f19870e4f7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/statistics",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "9281af0b-9b85-422c-852d-104070bcaa96",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/service",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "cdacf0e1-db07-4ca5-b87f-95b052880230",
      "name": "команды",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.1,
      "position": [
        160,
        2920
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            }
          ]
        }
      },
      "id": "daf636d6-3b48-4402-a3dd-be335a47b9a3",
      "name": "Получаем рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1260,
        1320
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "89769121-8322-43ac-b934-d2262621b2f2",
      "name": "Объединение рейсов в один файл",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1620,
        1320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, write_date } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: write_date,  // Для вывода используем write_date\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: write_date,  // Для вывода используем write_date\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n\n\n"
      },
      "id": "f9c607a9-b4b8-4c16-9b6a-ddf5563f24da",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Извлекаем только дату из поля time_of_start\n            const date = time_of_start.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "c8c13a9b-71ff-4d43-93ff-cd7f05c03e00",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        1320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.from.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "845250e6-1fc9-438c-9f6d-890da5786a24",
      "name": "Telegram4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2760,
        1360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "quarry.work",
        "operation": "getAll",
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Получение информации о водителе').item.json.resource_id[1] }}"
            }
          ]
        }
      },
      "id": "9405b878-ccb5-4e6c-83e1-fa0af78c2e0c",
      "name": "Получение работ в карьере2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1420,
        1660
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "bd42666e-42c3-4afd-bbe2-17ad1ba9b0f3",
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2300,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = items.map(item => item.json);  // Подключаем данные через items\n\n// Определяем текущую дату\nconst today = new Date();  // Текущая дата\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60)); // UTC +10 Владивосток\n\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + 1); // Понедельник текущей недели\n\n// Определяем начало и конец прошлых недель\nconst previousWeekStart = new Date(startOfWeek);\npreviousWeekStart.setDate(previousWeekStart.getDate() - 7);\nconst twoWeeksAgoStart = new Date(previousWeekStart);\ntwoWeeksAgoStart.setDate(twoWeeksAgoStart.getDate() - 7);\nconst threeWeeksAgoStart = new Date(twoWeeksAgoStart);\nthreeWeeksAgoStart.setDate(threeWeeksAgoStart.getDate() - 7);\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    inputData.forEach(entry => {\n        const entryDate = new Date(entry.date);\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === date.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                // Считаем данные по суммарным данным дня\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            }\n            // Для записей о работах в карьере\n            else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    // Проходим по каждому дню от текущего дня к понедельнику\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toISOString().split('T')[0];\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за неделю\nfunction getWeeklyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    inputData.forEach(entry => {\n        const entryDate = new Date(entry.date);\n\n        if (entryDate >= startDate && entryDate < endDate) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Считаем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Получаем отчеты за прошлые недели\nconst previousWeekReport = getWeeklyReport(previousWeekStart, startOfWeek);\nconst twoWeeksAgoReport = getWeeklyReport(twoWeeksAgoStart, previousWeekStart);\nconst threeWeeksAgoReport = getWeeklyReport(threeWeeksAgoStart, twoWeeksAgoStart);\n\n// Формируем текст отчета для Telegram\nlet textMessage = getCurrentWeekReport();  // Отчет за текущую неделю\n\ntextMessage += '📊 <b>Отчет за прошлые недели месяца</b>\\n\\n';\n\ntextMessage += `📅 <b>Неделя с ${previousWeekStart.toISOString().split('T')[0]} по ${startOfWeek.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${previousWeekReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${previousWeekReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${previousWeekReport.total} руб.\\n\\n`;\n\ntextMessage += `📅 <b>Неделя с ${twoWeeksAgoStart.toISOString().split('T')[0]} по ${previousWeekStart.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${twoWeeksAgoReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${twoWeeksAgoReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${twoWeeksAgoReport.total} руб.\\n\\n`;\n\ntextMessage += `📅 <b>Неделя с ${threeWeeksAgoStart.toISOString().split('T')[0]} по ${twoWeeksAgoStart.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${threeWeeksAgoReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${threeWeeksAgoReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${threeWeeksAgoReport.total} руб.\\n\\n`;\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "a66cb7e5-19d8-48d5-919e-7f0dcc7e0750",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2540,
        1360
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "22b02971-7c33-4fa2-8246-cc7f3d8b3593",
      "name": "Получение информации о водителе",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        960,
        1540
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 628023803,
          "message": {
            "message_id": 12057,
            "from": {
              "id": 799934256,
              "is_bot": false,
              "first_name": "Александр",
              "username": "saniochek_22",
              "language_code": "ru"
            },
            "chat": {
              "id": 799934256,
              "first_name": "Александр",
              "username": "saniochek_22",
              "type": "private"
            },
            "date": 1727292345,
            "text": "Моя статистика"
          },
          "tg_id": "799934256",
          "odoo_id": 38,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": null,
          "fuel_liters": null,
          "weight_measure": null,
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": null,
          "count_weight_photo_sent": null,
          "current_quarry_hours": null,
          "end_round_message_id": null,
          "last_message_text": null,
          "cookie": "session_id=535ede51c5bff8a282d6da83c71b663aa1f046f6; Expires=Thu, 25 Sep 2025 19:25:46 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-09-29T17:26:58.667Z",
  "versionId": "5d48b115-2023-48ab-92fd-72d122b581ee"
}