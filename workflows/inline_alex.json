{
  "active": false,
  "connections": {
    "отправьте данные": {
      "main": [
        [
          {
            "node": "статус=отправка срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "меняем статус - ввод текста запроса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "комментарий механику": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          },
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id3": {
      "main": [
        [
          {
            "node": "находим машину по odoo id3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id3": {
      "main": [
        [
          {
            "node": "меняем статус машины на Нет водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус машины на Нет водителя": {
      "main": [
        [
          {
            "node": "статус ввода данных после смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус получения фото при неисправности": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные при работе в карьере": {
      "main": [
        [
          {
            "node": "получаем odoo id3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Завершение смены": {
      "main": [
        [
          {
            "node": "получаем odoo id5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id5": {
      "main": [
        [
          {
            "node": "находим машину по odoo id5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id5": {
      "main": [
        [
          {
            "node": "меняем статус машины на Нет водителя1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке1": {
      "main": [
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отмена отправки фото": {
      "main": [
        [
          {
            "node": "Статус получения фото при неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"к выполнению\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки": {
      "main": [
        [
          {
            "node": "отправляем сообщение ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение ": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение 1": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"в работе\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки": {
      "main": [
        [
          {
            "node": "обновим статус на \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "проверка наличия механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков1": {
      "main": [
        [
          {
            "node": "данные водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные водителя": {
      "main": [
        [
          {
            "node": "данные авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно вписать часы": {
      "main": [
        [
          {
            "node": "обновим статус и номер текущей заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки1": {
      "main": [
        [
          {
            "node": "получим актуальный статус заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки": {
      "main": [
        [
          {
            "node": "убираем номер заявки из пг",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем номер заявки из пг": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки1": {
      "main": [
        [
          {
            "node": "меняем на статус отправки фотографии",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим актуальный статус заявки": {
      "main": [
        [
          {
            "node": "заявка в работе?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка в работе?": {
      "main": [
        [
          {
            "node": "нужно вписать часы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявка уже изменена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "принятие заказа": {
      "main": [
        [
          {
            "node": "Получение информации о водителе1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нажатие водителем на кнопку замена масла": {
      "main": [
        [
          {
            "node": "Получаем odoo_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем odoo_id": {
      "main": [
        [
          {
            "node": "Получаем информацию о машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем информацию о машине": {
      "main": [
        [
          {
            "node": "Обновление пробега при котором нужна будет замена масла1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение при нажатии на кнопку отправить фото": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки меню ТО": {
      "main": [
        [
          {
            "node": "поиск текущего авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "комментарий механику",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Кнопки после отправки фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто": {
      "main": [
        [
          {
            "node": "текст заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст заявки": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото завершения заявки": {
      "main": [
        [
          {
            "node": "завершён процесс заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завершён процесс заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно ли приложить фото?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки отправки фото груза и замены масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка весовых справок или ттн при завершении смены": {
      "main": [
        [
          {
            "node": "отправить весовую или ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "заявки \"к выполнению\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "заявки \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки отправки фото груза и замены масла": {
      "main": [
        [
          {
            "node": "Нажатие водителем на кнопку замена масла",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение при нажатии на кнопку отправить фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "снова вводим номер авто": {
      "main": [
        [
          {
            "node": "снова ввод номера авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником1": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто1": {
      "main": [
        [
          {
            "node": "он не может занять новый, пока занят старый1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "снова вводим номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником2": {
      "main": [
        [
          {
            "node": "водитель взял авто?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель взял авто?": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно взять авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок": {
      "main": [
        [],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начало рейса2": {
      "main": [
        [
          {
            "node": "завершение рейса1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id8": {
      "main": [
        [
          {
            "node": "начало рейса2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id7": {
      "main": [
        [
          {
            "node": "находим машину по odoo id8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id8": {
      "main": [
        [
          {
            "node": "находим машину по odoo id9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id9": {
      "main": [
        [
          {
            "node": "получение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id2": {
      "main": [
        [
          {
            "node": "находим машину по odoo id2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id2": {
      "main": [
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка весовой": {
      "main": [
        [
          {
            "node": "меняем статус на отправку весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id10": {
      "main": [
        [
          {
            "node": "находим машину по odoo id12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id12": {
      "main": [
        [
          {
            "node": "Получение сегодняшней даты3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение сегодняшней даты3": {
      "main": [
        [
          {
            "node": "получаем дату и время 00:2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем дату и время 00:2": {
      "main": [
        [
          {
            "node": "дата и время 23:2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:2": {
      "main": [
        [
          {
            "node": "находим рейсы по машине7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине7": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          },
          {
            "node": "Summarize4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize4": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Вывод статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки по рейсам7": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "получаем название маршрута из перевозки7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто": {
      "main": [
        [
          {
            "node": "выполняющиеся рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся рейсы": {
      "main": [
        [
          {
            "node": "есть рейсы выполняющиеся",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы выполняющиеся": {
      "main": [
        [
          {
            "node": "Подтверждение завершения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет рейсов": {
      "main": [
        [
          {
            "node": "удалим инлайн кнопку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статистика1": {
      "main": [
        [
          {
            "node": "получаем odoo id10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление статистики",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные о топливе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки завершения смены": {
      "main": [
        [
          {
            "node": "Подтверждение завершения смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "работа в карьере или нет",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные при работе в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершение смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "была заправка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Подтверждение завершения смены после вывода перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вывод перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск авто1": {
      "main": [
        [
          {
            "node": "поиск логистов4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов4": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов4": {
      "main": [
        [
          {
            "node": "Отправка литров логисту",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную4": {
      "main": [
        [
          {
            "node": "Инфа доставлена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не отправилось2": {
      "main": [
        [
          {
            "node": "меняем статус на обычный2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка литров логисту": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если не отправилось2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Инфа доставлена": {
      "main": [
        [
          {
            "node": "меняем статус на обычный2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о литрах": {
      "main": [
        [
          {
            "node": "статус ввода литров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото чека": {
      "main": [
        [
          {
            "node": "статус=чек фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли чек": {
      "main": [
        [
          {
            "node": "статус дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор меры": {
      "main": [
        [
          {
            "node": "статус=дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о топливе": {
      "main": [
        [
          {
            "node": "данные о литрах",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото чека",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть ли чек",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус=ввод количества материала": {
      "main": [
        [
          {
            "node": "Проверка выбранного матрериала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Кнопки после отправки фото": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус на дефолтный2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статус получения фото при неисправности",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отмена отправки фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки завершения смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера1": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус на дефолтный2": {
      "main": [
        [
          {
            "node": "Требуется ли отправка весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объём материала": {
      "main": [
        [
          {
            "node": "выбор меры",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ТТН и весовые в конце смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто2": {
      "main": [
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "находим рейсы без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обработка кнопок ТО": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото завершения заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с выбором": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без ттн": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто3": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки": {
      "main": [
        [
          {
            "node": "находим рейсы  в перевозке",
            "type": "main",
            "index": 0
          },
          {
            "node": "находим рейсы без ттн в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы  в перевозке": {
      "main": [
        [
          {
            "node": "сколько всего рейсов в перевозке по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько всего рейсов в перевозке по машине": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без ттн": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "находим рейсы без ттн в перевозке": {
      "main": [
        [
          {
            "node": "сколько рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сравниваем общее кол-во рейсов и рейсов без ттн": {
      "main": [
        [
          {
            "node": "загрузите ттн",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ттн загружена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем кол-во в одно": {
      "main": [
        [
          {
            "node": "сравниваем общее кол-во рейсов и рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн": {
      "main": [
        [
          {
            "node": "меняем статус на отправку ТТН",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто4": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки1": {
      "main": [
        [
          {
            "node": "находим рейсы без весовой в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без весовой в перевозке": {
      "main": [
        [
          {
            "node": "есть рейсы или нет",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы или нет": {
      "main": [
        [
          {
            "node": "сколько рейсов без весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "весовые загружены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без весовой": {
      "main": [
        [
          {
            "node": "загрузите весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок2": {
      "main": [
        [
          {
            "node": "разделение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вам назначена срочная перевозка": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделение перевозок": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "есть ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка": {
      "main": [
        [
          {
            "node": "выполняется сейчас срочная?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняется сейчас срочная?": {
      "main": [
        [
          {
            "node": "находим рейсы по машине4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "находим перевозки, которые выведем в кнопках",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки, которые выведем в кнопках": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?": {
      "main": [
        [
          {
            "node": "Проверка перевозки(кубометры)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок3": {
      "main": [
        [
          {
            "node": "разделение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделение перевозок1": {
      "main": [
        [
          {
            "node": "находим прошлую перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершена ли срочная перевозка": {
      "main": [
        [
          {
            "node": "получение перевозок3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим рейсы по машине4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочная перевозка завершена": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим прошлую перевозку": {
      "main": [
        [
          {
            "node": "находим рейсы по машине10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?1": {
      "main": [
        [
          {
            "node": "завершена ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вам назначена срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине10": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?2": {
      "main": [
        [
          {
            "node": "срочная перевозка завершена",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине9": {
      "main": [
        [
          {
            "node": "Summarize5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли срочная перевозка": {
      "main": [
        [
          {
            "node": "находим рейсы по машине9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим рейсы по машине4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize5": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине4": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "кнопки принятия и завершения заказа",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем не обновленные данные1": {
      "main": [
        [
          {
            "node": "Добавление веса и количества рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине": {
      "main": [
        [
          {
            "node": "получаем не обновленные данные1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус ввода данных после смены": {
      "main": [
        [
          {
            "node": "Удаление дневной статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с завершением смены": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки2": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите весовые": {
      "main": [
        [
          {
            "node": "меняем статус на отправку нескольких весовых",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые1": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки2": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые2": {
      "main": [
        [
          {
            "node": "номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ТТН и весовые в конце смены": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с завершением смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаляем прошлое сообщение с выбором",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "загрузите ттн или весовые2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize6": {
      "main": [
        [
          {
            "node": "1 ли рейс?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине и перевозке": {
      "main": [
        [
          {
            "node": "Summarize6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим рейсы по машине и перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "есть ли перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 ли рейс?": {
      "main": [
        [
          {
            "node": "если 1, то назначен ли он?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если 1, то назначен ли он?": {
      "main": [
        [
          {
            "node": "находим информацию о перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим информацию о перевозке": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение для описания проблемы": {
      "main": [
        [
          {
            "node": "статус=дефолт",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные1": {
      "main": [
        [
          {
            "node": "статус=отправка срочно маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто5": {
      "main": [
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "есть рейс?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?": {
      "main": [
        [
          {
            "node": "отправьте данные1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто6": {
      "main": [
        [
          {
            "node": "рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы1": {
      "main": [
        [
          {
            "node": "актуальный рейс1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс1": {
      "main": [
        [
          {
            "node": "есть рейс?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?1": {
      "main": [
        [
          {
            "node": "отправьте данные2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные2": {
      "main": [
        [
          {
            "node": "статус=отправка срочно документ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновим статус на \"в работе\"": {
      "main": [
        [
          {
            "node": "заявка взята в работу",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод доступных перевозок5": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке6": {
      "main": [
        [
          {
            "node": "Добавление перевозки в бд3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "отправьте данные",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "назад",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаление меню ТО": {
      "main": [
        [
          {
            "node": "удаление меню ТО1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "завершение рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"м3\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем \"м3\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем \"Тонны\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"Тонны\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "завершение рейса": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "Получение сегодняшнего дня",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo": {
      "main": [
        [
          {
            "node": "Odoo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo1": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра": {
      "main": [
        [
          {
            "node": "Изменение прошлого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение сегодняшнего дня": {
      "main": [
        [
          {
            "node": "Odoo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Изменение прошлого сообщения": {
      "main": [
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "меняем статус2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление меню ТО": {
      "main": [
        [
          {
            "node": "удаление меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопки у подтверждения номера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статистика1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопки у подтверждения номера": {
      "main": [
        [
          {
            "node": "ввод одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра1": {
      "main": [
        [
          {
            "node": "статус ввода одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто1": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок2": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начало рейса": {
      "main": [
        [
          {
            "node": "находим рейсы по машине",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс": {
      "main": [
        [
          {
            "node": "находим машину по odoo id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id": {
      "main": [
        [
          {
            "node": "начало рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка перевозки(кубометры)": {
      "main": [
        [
          {
            "node": "Рейс завершен и есть еще рейсы1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейс завершен и есть еще рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "вывод доступных перевозок5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка выбранного матрериала": {
      "main": [
        [
          {
            "node": "ввод количества материала м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод количества материала тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sort1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sort2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки принятия и завершения заказа": {
      "main": [
        [
          {
            "node": "начатый рейс",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск текущего авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем автомобиль с таким же сотрудником2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка перевозки(кубометры)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод перевозок на день",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день1": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто2": {
      "main": [
        [
          {
            "node": "accept_order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок6": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто3": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов": {
      "main": [
        [
          {
            "node": "поиск текущего авто3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод часов": {
      "main": [
        [
          {
            "node": "Ввод часов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Перевозки на день": {
      "main": [
        [
          {
            "node": "убираем кнопку у перевозки на день",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Начало работы в карьере": {
      "main": [
        [
          {
            "node": "поиск текущего авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод перевозок": {
      "main": [
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "обработка кнопок ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Начало работы в карьере1": {
      "main": [
        [
          {
            "node": "Начало работы в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто4": {
      "main": [
        [
          {
            "node": "завершение карьерных работ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов1": {
      "main": [
        [
          {
            "node": "поиск текущего авто4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершение карьерных работ1": {
      "main": [
        [
          {
            "node": "Работа в карьере выполнена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Работы в карьере": {
      "main": [
        [
          {
            "node": "Перевозки на день",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод часов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Начало работы в карьере1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнена работа в карьере": {
      "main": [
        [
          {
            "node": "завершение карьерных работ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Работа в карьере выполнена": {
      "main": [
        [
          {
            "node": "Работа в карьере выполнена1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод часов1": {
      "main": [
        [
          {
            "node": "Смена статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку у перевозки на день": {
      "main": [
        [
          {
            "node": "Начало работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram5": {
      "main": [
        [
          {
            "node": "получение перевозок6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Проверка часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка часов": {
      "main": [
        [
          {
            "node": "Выполнена работа в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Недостаточное кол-во часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-16T11:43:26.245Z",
  "id": "c3bmh730clyWctNt",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "inline_alex",
  "nodes": [
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с автомобилем\nОтправьте сообщение, фото, видео, запись диктофона или кружок",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6742d9b2-b4f4-47ef-8ef9-94a0e7dd8e73",
      "name": "отправьте данные",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        9200
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f198777b-b0ac-4c7c-bfdc-2c6e07984ad6",
      "name": "статус=отправка срочно",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1020,
        9200
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": true,
            "odoo_id": "={{ $json.odoo_id }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "56983e30-841e-4bac-863b-de1a02686faf",
      "name": "меняем статус - ввод текста запроса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -40,
        2020
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "eab7a18e-2d87-4b7d-8ed8-f6b74fd69253",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -440,
        2020
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Отправьте свой комментарий механику",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9aca976c-69a6-4fc2-82b7-1ad6ed77f321",
      "name": "комментарий механику",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -780,
        2020
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Блок проверки нажатой водителем кнопки",
        "height": 5589.183573096278,
        "width": 2241.8033428606927
      },
      "id": "72bd2300-5b74-4db4-abf9-d8ad04b38fe6",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1180,
        1420
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить рейс?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "aaea34d0-3eab-4094-b16e-ff2a91833996",
      "name": "Подтверждение завершения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        540,
        1180
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "photo_cancel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "926cbeee-a6c3-4106-9d3f-e58c07bdcc1d",
      "name": "Отправка фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        2160
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "check_final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "a3424971-4ca4-44ab-949a-40952d8b95ee",
      "name": "Подтверждение завершения смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -260,
        2640
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение смены\nсвои изменения буду делать белым цветом",
        "height": 538.650511832316,
        "width": 1230.4022564984548,
        "color": 6
      },
      "id": "de573544-8dad-4177-bfac-7bf75e650ba2",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -700,
        2620
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dacbba62-8f87-44a6-a2e4-351ac609ff01",
      "name": "получаем odoo id3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -160,
        2840
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "employee_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "d432fa81-8b6a-4d1b-92e3-80de9838f037",
      "name": "находим машину по odoo id3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        40,
        2840
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "update",
        "customResourceId": "={{ $json.id }}",
        "fieldsToCreateOrUpdate": {
          "fields": [
            {
              "fieldName": "status",
              "fieldValue": "Нет водителя"
            },
            {
              "fieldName": "employee_id"
            }
          ]
        }
      },
      "id": "db31e2f8-5e8f-4e9d-878e-6801e953a3e1",
      "name": "меняем статус машины на Нет водителя",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        220,
        2840
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_data_after_work"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "197299bd-f5b2-42af-a8f6-a63c7c97daa3",
      "name": "статус ввода данных после смены",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        380,
        2840
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": true,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "50afd41f-0781-4658-af81-06b85b557f6e",
      "name": "Статус получения фото при неисправности",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -580,
        2240
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы работали в карьере?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "career"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "final_complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "2d7ad428-6416-4a1d-a949-04d1a56b5422",
      "name": "работа в карьере или нет",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -560,
        2760
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Для завершения введите <b>количество карьер-часов</b>",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ff08b624-da68-452a-baa4-1978afe2b13f",
      "name": "данные при работе в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -340,
        2840
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Cмена завершена!",
        "additionalFields": {}
      },
      "id": "9882b84b-36e5-46c1-9de9-0000a9bc257c",
      "name": "Завершение смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        2980
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bcd39ba8-43e0-48d0-918d-4e888b0eec66",
      "name": "получаем odoo id5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -400,
        3020
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "520efcf0-8153-4e3b-8db6-ec6147dac683",
      "name": "находим машину по odoo id5",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -240,
        3020
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "update",
        "customResourceId": "={{ $json.id }}",
        "fieldsToCreateOrUpdate": {
          "fields": [
            {
              "fieldName": "status",
              "fieldValue": "Нет водителя"
            },
            {
              "fieldName": "driver_id",
              "fieldValue": "={{ \"\" }}"
            }
          ]
        }
      },
      "id": "a87f8657-8a29-4bb1-a20e-ded23ba8adca",
      "name": "меняем статус машины на Нет водителя1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -60,
        3020
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "68ee1c91-1761-426f-b762-a80ac8bffa23",
      "name": "убираем кнопки в меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1580,
        1960
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "1be0433e-4b2a-4bde-9c34-4891d0383599",
      "name": "Выводим информацию о перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -260,
        1460
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4ea85315-d96c-4016-986d-3f3404afdf6e",
      "name": "Статус получения фото при неисправности1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        120,
        2460
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Комментарий доставлен механикам",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "8fbd33c6-ab2e-4eab-bc24-1aa905e97d99",
      "name": "отмена отправки фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        2460
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ветка если человек работал в карьере",
        "height": 192.98769776932238,
        "width": 878.3119518363878
      },
      "id": "856d9467-d499-484f-8e46-de0c4af7bf1b",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        2800
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "={{ \"К выполнению\" }}"
            }
          ]
        }
      },
      "id": "ea0aab1c-c209-4887-999c-09b78723e887",
      "name": "заявки \"к выполнению\"",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        60,
        3600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `TR_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите начать\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "3064c7ad-0648-435f-832a-71a4593cb563",
      "name": "создаём динамически инлайн кнопки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        3600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "a99b6d5d-ae8b-41e3-9034-d28a6f54161a",
      "name": "отправляем сообщение ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        720,
        3600
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "8e1b3896-4376-44c1-9949-ce45e6d260eb",
      "name": "удаляем прошлое сообщение с заявками",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        940,
        3600
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для принятия заявки",
        "height": 257.97529446338507,
        "width": 1077.334745180572,
        "color": 6
      },
      "id": "e5e05422-4fd4-454f-a839-4851a8192690",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -200,
        3520
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `ER_${item.json.id}` // FR - end request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите завершить\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "c47ae5ee-26d8-4d54-8076-4fefe49648d7",
      "name": "создаём динамически инлайн кнопки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        3960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "fc8b9025-f752-4ab6-afd8-9005cb7131e4",
      "name": "отправляем сообщение 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        720,
        3960
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "38e5a561-b4a3-4818-870c-69ad6d41a58d",
      "name": "удаляем прошлое сообщение с заявками1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        940,
        3960
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для завершения заявки",
        "height": 257.97529446338507,
        "width": 1084.9093561699729,
        "color": 6
      },
      "id": "3990ba3d-e3c0-4215-a711-18e4e63f3ac3",
      "name": "Sticky Note31",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -200,
        3880
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "={{ \"В работе\" }}"
            }
          ]
        }
      },
      "id": "f486d7aa-25a7-4889-8752-e4b5f252852b",
      "name": "заявки \"в работе\"",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        60,
        3960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0137e4ef-a4ad-47f2-8e72-76851a2041ff",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b4f8e6b-5131-4f2a-9c91-e29aa91c9830",
      "name": "проверка наличия заявок",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        280,
        3960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dc39beeb-5bdc-4e48-9621-513cf7a5ecbd",
      "name": "проверка наличия заявок1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        280,
        3600
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Заявки не найдены"
        }
      },
      "id": "e59f50d6-10d8-44ef-9ae7-dfbdeb558021",
      "name": "заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        560,
        3780
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e55f14b8-87f8-4e4f-8da8-8216e5555086",
      "name": "номер выбранной заявки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        160,
        4240
      ]
    },
    {
      "parameters": {
        "content": "## Водитель берёт задачу в работу",
        "height": 323.3861574435644,
        "width": 649.594490717535,
        "color": 6
      },
      "id": "4bec03c8-f11b-42e8-8a8b-cf0c0a2e6a91",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        4180
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "ee6c74f9-8eb8-4f1f-a662-e6c3e9ae256c",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1125,
        5079
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a8c8c4af-ca98-4315-a654-6aae251dd186",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1320,
        5080
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "31ace5a1-4844-4b3f-bd8a-f8c09d3fa0fd",
      "name": "проверка наличия механиков1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1545,
        5079
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('поиск тг айди механиков1').item.json.tg_id }}",
        "text": "={{ $('данные авто').item.json[\"number_car\"] }} - {{ $('Execute Workflow Trigger').item.json[\"end_request_hours\"] }} ч. - {{ $('данные водителя').item.json[\"display_name\"] }} - {{ $json.description_of_maintenance }}\n\n<b>Требуется проверить корректность выставленных часов</b>\n<a href=\"https://everest.lamart.site/web#id={{ $('Execute Workflow Trigger').item.json[\"end_request_id\"] }}&cids=1&menu_id=343&action=485&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Принять заявку✅",
                    "additionalFields": {
                      "callback_data": "={{\"accept_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отклонить заявку ❌",
                    "additionalFields": {
                      "callback_data": "={{\"reject_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0825032f-75e3-4d20-aef5-e60d06543426",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2400,
        5060
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Ошибка Odoo: {{ $json.error }}",
        "additionalFields": {}
      },
      "id": "234a5908-281b-4764-a9d3-f6e519fae108",
      "name": "если есть ошибки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        620,
        4346
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Заявка взята в работу. Не забудьте завершить заявку после ремонта",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку сейчас",
                    "additionalFields": {
                      "callback_data": "={{ \"ER_\"+$json.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "98a90571-513b-4e65-90c0-867e69574389",
      "name": "заявка взята в работу",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        620,
        4186
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "5d33b3a1-0898-4737-a3e2-a47e9ed92d77",
      "name": "данные водителя",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1765,
        5055
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "content": "## Механик получает уведомление, когда водитель завершает заявку",
        "height": 250.48240620104332,
        "width": 1538.2139291185106,
        "color": 6
      },
      "id": "941003ae-9bf6-4856-bdc3-5a37402f3ed3",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        5000
      ]
    },
    {
      "parameters": {
        "content": "## Водитель завершает заявку",
        "height": 315.592882734556,
        "width": 1246.6718203422697,
        "color": 6
      },
      "id": "e79650cd-e13e-4d13-be0a-1599272ead49",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -200,
        4520
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите число затраченных часов на работу:",
        "additionalFields": {}
      },
      "id": "146fa94f-f6fa-47a0-aafc-abdc7cd01eaf",
      "name": "нужно вписать часы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        580,
        4545
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4aa05232-17cb-4deb-bfd3-213cfeb548e6",
      "name": "номер выбранной заявки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -80,
        4625
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request_hours",
            "end_request_id": "={{ $('номер выбранной заявки1').item.json.TO_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "7a44fb7e-8d82-4ea1-b59a-cf289ffe8b0c",
      "name": "обновим статус и номер текущей заявки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        880,
        4545
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Когда механик проверит заявку, вам придёт уведомление",
        "additionalFields": {}
      },
      "id": "d0b8d295-fa6b-4d20-be75-a86591f72c79",
      "name": "завершён процесс заявки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        240,
        5060
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "end_request_id": "={{ null }}",
            "end_request_hours": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "62916fff-33c1-485b-ab61-ddc6c701e081",
      "name": "убираем номер заявки из пг",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        500,
        5060
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Прикрепите фото исправления:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "056b315f-8895-4f94-8e0b-0f1d0b21f77b",
      "name": "завершён процесс заявки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        240,
        4900
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "adding_end_request_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ae74d02c-75c6-4e32-aac1-59a3ea321ee5",
      "name": "меняем на статус отправки фотографии",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        460,
        4900
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопок для отправки фото завершения заявки",
        "height": 369.7365490265316,
        "width": 579.6907768759479,
        "color": 6
      },
      "id": "e62946e4-4144-4bab-95d4-62961a8c8d49",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        4840
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.TO_number }}"
            }
          ]
        }
      },
      "id": "ce129d0f-af81-4195-bc1c-c9942e8eda54",
      "name": "получим актуальный статус заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        120,
        4625
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fc7e922b-a871-4029-abf2-95687ecdcc6a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d76877f9-8161-4208-bf51-70d33a2063b7",
      "name": "заявка в работе?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        4625
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Статус заявки должен быть \"В работе\""
        }
      },
      "id": "55a3f7cd-a65e-4994-b352-4dca42bf3d3e",
      "name": "заявка уже изменена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        720,
        4685
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "У вас есть доступные рейсы",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить фото материала",
                    "additionalFields": {
                      "callback_data": "materials_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a0b844f6-73eb-41e6-a48a-3189be6df5a6",
      "name": "принятие заказа",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        60,
        1520
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6a5dbed4-c8bf-4c34-8299-b1eb1c152420",
      "name": "Получение информации о водителе1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        820,
        1820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab1dea4e-d947-4ffa-a190-704692bf9687",
              "leftValue": "={{ $json.materials_photo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d5fd130b-79c7-4243-b72c-14a2e4760935",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        980,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3ad539d0-5913-45a3-96cc-546ffa62956b",
      "name": "Обновление статуса отправки фото логисту1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1560,
        1800
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('принятие заказа').item.json.result.message_id -1}}"
      },
      "id": "aeb3da9f-541a-46c5-9804-fe753b5eb352",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1380,
        1800
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": true,
            "tg_id": "={{ $('Сообщение при нажатии на кнопку отправить фото').item.json.result.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ff9d0982-26b9-4efb-9189-a2661b3f34a8",
      "name": "Обновление статуса отправки фото логисту",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        220,
        5520
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Спасибо за замену масла, следующую нужно будет произвести через 15000 км. Я обязательно пришлю вам уведомление",
        "additionalFields": {}
      },
      "id": "d166c1ff-230d-4ecd-98fd-b8165d97fcf0",
      "name": "Нажатие водителем на кнопку замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -60,
        5265
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e0f45a61-f7fd-41a0-baab-592e6f59517e",
      "name": "Получаем odoo_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        180,
        5265
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "b46854ec-800b-4c27-aa73-2f6d07a109de",
      "name": "Получаем информацию о машине",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        420,
        5260
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "update",
        "customResourceId": "={{ $json.id }}",
        "fieldsToCreateOrUpdate": {
          "fields": [
            {
              "fieldName": "oil_change_schedule",
              "fieldValue": "={{ $json.odometer + 15000 }}"
            }
          ]
        }
      },
      "id": "6b18b055-ea37-4d7b-b927-73d05274969c",
      "name": "Обновление пробега при котором нужна будет замена масла1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        680,
        5265
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обновление регламента замены масла после подтверждения водителем замены",
        "height": 242.0127880946941,
        "width": 1022.4114664041946,
        "color": 4
      },
      "id": "28602117-2f5d-47b0-b68f-88dd6bf40d7e",
      "name": "Sticky Note37",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        5200
      ]
    },
    {
      "parameters": {
        "content": "## Отправка водителем фотографии материала",
        "height": 242.24910613248537,
        "width": 576.4460386934658,
        "color": 5
      },
      "id": "14a7e8f9-766a-4cab-84de-c300355791e9",
      "name": "Sticky Note38",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        5460
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию и ожидайте уведомление от логиста.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "62f03ad3-0e74-4b51-b4f8-956f505dda71",
      "name": "Сообщение при нажатии на кнопку отправить фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -40,
        5520
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопки \"назад\" при выборе отправки материала",
        "height": 254.01493864256875,
        "width": 981.6305810235699,
        "color": 4
      },
      "id": "2f72dea5-960a-46c8-ae98-a0204a5b2480",
      "name": "Sticky Note40",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        740,
        1740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "6fb344b8-2202-44d1-b21d-8f672278767c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_ok",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "68071ac7-12d9-4440-97e3-ca534a0322b2",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_wrong",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "640ae67e-3bdd-4258-aa48-a21627914bb3",
      "name": "кнопки меню ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1120,
        1800
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.id }}"
            }
          ]
        }
      },
      "id": "f88f9733-571b-47ff-82f7-cab17abec89d",
      "name": "данные авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1960,
        5056
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.end_request_id }}"
            }
          ]
        }
      },
      "id": "50656db7-9b3e-4230-8965-0dfbbcf912b7",
      "name": "текст заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2160,
        5056
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Нужно приложить фото исправления?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5bfbb96d-d9ed-42bd-81b1-ac28c21651be",
      "name": "нужно ли приложить фото?1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -560,
        5120
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "14694926-c373-416a-a992-7f1ff09e4ed6",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -340,
        5120
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "yes_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "386be4a5-616e-44af-bee7-3a9e3fee981c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e0aeb7f9-0c4b-475f-bef0-1e5a98d8bd2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a72016a8-eacb-4800-8e53-0df0646b0c03",
      "name": "фото завершения заявки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -880,
        5000
      ]
    },
    {
      "parameters": {
        "content": "## Отмена отправки фото исправления",
        "height": 207.35648349288545,
        "width": 487.077305180272,
        "color": 6
      },
      "id": "c4d404f7-ba15-44c7-b4e5-5dc6d838f928",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -640,
        5080
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "weight_or_ttn",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "27ad91bc-edea-4149-ab6d-2d2b5153f02c",
      "name": "отправка весовых справок или ттн при завершении смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1620,
        5300
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Для завершения отправьте ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "career"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "weight_or_ttn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5f3dc7c0-a7de-466c-9524-8ec998996bc4",
      "name": "отправить весовую или ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1760,
        4620
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "0f9a9859-2a5d-46db-8aac-902f61bc1d4d",
      "name": "номер авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -160,
        3600
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "8d3bae26-38a8-4176-8001-8ddd9af50689",
      "name": "номер авто1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -160,
        3960
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "oil",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5d8c11e3-17b7-408e-9ef9-e1c9ec8f3258",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "materials_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "dc92afbd-3aa0-4650-b6e8-ec322e3d3bcb",
      "name": "кнопки отправки фото груза и замены масла",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -960,
        5400
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите номер автомобиля заглавными буквами и без пробелов, например: А312МЕ",
        "additionalFields": {}
      },
      "id": "861486ae-4ce0-4689-aa43-8dc411f1b6d2",
      "name": "снова вводим номер авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        120,
        5980
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "2c67193a-6ad8-4076-8eb5-6f34591f6547",
      "name": "снова ввод номера авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        320,
        5980
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "fcfb161c-84d3-4933-ac83-a465200cdcce",
      "name": "ищем автомобиль с таким же сотрудником1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -440,
        5840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7592667f-1f03-49fa-a540-d9ffbf2a97a2",
      "name": "если сотрудник уже занял авто1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -160,
        5840
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Вы не можете занять новый автомобиль, сейчас вы привязаны к авто:\n{{ $json[\"model\"] }} {{ $json[\"number_car\"] }}",
        "additionalFields": {}
      },
      "id": "7485cfb4-11d5-4c25-8a24-8072cadc28a9",
      "name": "он не может занять новый, пока занят старый1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        120,
        5820
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вернуться к вводу номера",
        "height": 419.59874123065686,
        "width": 1005.9448008587696,
        "color": 6
      },
      "id": "b493de72-dadf-438b-8200-3827e8172ab3",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        5740
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "employee_id",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Нет груза"
            }
          ]
        }
      },
      "id": "69c32ea6-cfb9-4d0a-b109-b3330a081ab0",
      "name": "ищем автомобиль с таким же сотрудником2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -820,
        1440
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c0595d5d-ac8a-4d9c-9c7c-7e3a7d30630f",
      "name": "водитель взял авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -600,
        1440
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Чтобы начать смену, нужно взять автомобиль"
        }
      },
      "id": "ad6bf3ce-4e12-4e82-b7de-c7319d098b61",
      "name": "нужно взять авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -420,
        1560
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "проверить перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "e53dd670-c220-4976-ac1f-cc2562c14a70",
      "name": "Нет доступных перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1340,
        3440
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "50044cff-b91b-4cd7-ac85-1256e67e50c4",
      "name": "Telegram3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1540,
        3440
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "проверить перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "7219197e-4ecf-4ae2-a28c-8a56f997885a",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1740,
        3440
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}",
        "options": {}
      },
      "id": "cb560412-3304-4753-bdad-a03bfe527432",
      "name": "начало рейса2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -580,
        3520
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "f3585c3a-96b6-4a97-bc13-79e1376160ed",
      "name": "находим машину по odoo id8",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -760,
        3520
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a44757a1-5bb7-4234-abfe-0fce8d21380e",
      "name": "получаем odoo id7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -960,
        3520
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок водителю",
        "height": 326.7771809966836,
        "width": 3097.1140685838354,
        "color": 3
      },
      "id": "e01e3ecc-6678-44c7-b687-3f616ac876ff",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        3180
      ]
    },
    {
      "parameters": {
        "content": "## костыль смены перевозки, иначе принятие/завершение рейса не сменится на следующую перевозку",
        "height": 217.7284710963141,
        "width": 846.9736389555314,
        "color": 3
      },
      "id": "0d128869-478b-49ac-881c-1d13bf10dd15",
      "name": "Sticky Note49",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1100,
        3442
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ee30366e-c572-4abc-9049-293ea1395206",
      "name": "получаем odoo id8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -740,
        3260
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "bb569e14-e74f-4cba-ba08-1cfa60c3ffd7",
      "name": "находим машину по odoo id9",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -540,
        3260
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "content": "## Начало рейса и смена статусов через эндпоинт",
        "height": 239.17047464637366,
        "width": 932.7416531557697,
        "color": 5
      },
      "id": "2da693eb-5cd1-43f5-b524-be0a1c74a169",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -960,
        140
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "44f815d3-cf06-4aad-aed3-9b1f329fb36c",
      "name": "получаем odoo id2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -700,
        940
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "4dd18186-5e2d-48d8-876f-01432f53461b",
      "name": "находим машину по odoo id2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -520,
        940
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение рейса и смена статусов через эндпоинт",
        "height": 333.57059544936584,
        "width": 1630.8723698847368,
        "color": 5
      },
      "id": "a7dc89ad-d155-45df-968b-c2ebc2ce2044",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -768.9968651247295,
        829.6107313338616
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "9327e887-99fb-40b3-8a54-b0232ee58621",
      "name": "Отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -680,
        2460
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправить фотографию весовой справки? ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить",
                    "additionalFields": {
                      "callback_data": "document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить в конце смены",
                    "additionalFields": {
                      "callback_data": "final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "295d9969-12a3-413d-848c-1dc6a9542185",
      "name": "Требуется ли отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        2260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a18b7eed-5a81-44b0-909e-96ceabf96b49",
      "name": "получаем odoo id10",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -660,
        6320
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "088d0f6f-f520-49ed-8eb2-880c1cf96cb8",
      "name": "находим машину по odoo id12",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -480,
        6320
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "57e95e2b-1e29-472e-83a6-742677efb620",
      "name": "Получение сегодняшней даты3",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -340,
        6320
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "=yyyy-MM-dd, 00:00:00",
        "options": {}
      },
      "id": "f7e4c130-f3ca-4dce-a322-3aa52dbbabb3",
      "name": "получаем дату и время 00:2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -180,
        6320
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $('Получение сегодняшней даты3').item.json.currentDate }}",
        "format": "=yyyy-MM-dd, 23:59:59",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "bc069d76-6bef-491e-8e28-d8467330f220",
      "name": "дата и время 23:2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -40,
        6320
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $('находим машину по odoo id12').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            },
            {
              "fieldName": "time",
              "operator": "greaterOrEqual",
              "value": "={{ $('получаем дату и время 00:2').item.json.formattedDate }}"
            },
            {
              "fieldName": "time",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            }
          ]
        }
      },
      "id": "c43aee01-3644-483e-b99b-9e7893d5d397",
      "name": "находим рейсы по машине7",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        100,
        6320
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "caa077b1-c18a-43e1-9a07-b1905c570ec9",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        480,
        6200
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "sum",
              "field": "cargo_netto"
            }
          ]
        },
        "options": {}
      },
      "id": "7b390c9f-fc96-4ef1-bd02-7688511a3223",
      "name": "Summarize4",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        580,
        6420
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "b2540787-cb51-4d93-bf7f-8c989776d925",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        740,
        6320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Во время смены: \nКоличество выполненых рейсов: {{ $json.count_id }}\nСумма нетто: {{ $json.sum_cargo_netto }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "32ac02a7-2eee-4b5c-bd28-bb5faa3ddae2",
      "name": "Вывод статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        940,
        6320
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "36b85f2c-c949-4e43-9028-b40bbb6c9211",
      "name": "Удаление статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -480,
        6520
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.transportation[0] }}"
            }
          ]
        }
      },
      "id": "7cd860a6-5967-4ce3-a1a8-5357ac292bd4",
      "name": "находим перевозки по рейсам7",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        320,
        6560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "countUnique",
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "50f87aba-4102-4c56-8220-b74e67ddc2be",
      "name": "Summarize1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        620,
        6640
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.route",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.route[0] }}"
            }
          ]
        }
      },
      "id": "46d79a4d-81a6-4721-9f28-cf1d6bce37d2",
      "name": "получаем название маршрута из перевозки7",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        820,
        6640
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "db41108a-8fff-494d-a698-7995f10f4f97",
      "name": "поиск текущего авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -100,
        1260
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "a6a32f89-2544-4103-811f-530b50140328",
      "name": "выполняющиеся рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        120,
        1260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2eed836a-a22c-4f31-abfd-431debae8854",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "99a1928e-d4e0-4a16-8f92-992efc10e713",
      "name": "есть рейсы выполняющиеся",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        1260
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет выполняющихся рейсов"
        }
      },
      "id": "8153a069-c692-472e-aa36-cecaf4b426cc",
      "name": "нет рейсов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        540,
        1360
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Подтверждение завершения рейса",
        "height": 339.93292480078713,
        "width": 1030.963710220358,
        "color": 6
      },
      "id": "96e4260a-c986-473f-b90b-a924daa52e7e",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        1160
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "60bab010-84d2-44e1-8fd6-0cedbb739969",
      "name": "удалим инлайн кнопку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        760,
        1360
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "56a65c23-f7c2-46db-bfcd-8287fe8833b4",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "after_stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "6d446613-943c-4feb-a09b-d0d3243ebb0b",
      "name": "Статистика1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -940,
        6480
      ]
    },
    {
      "parameters": {
        "content": "## ввод данных о топливе",
        "height": 192.98769776932238,
        "width": 878.3119518363878,
        "color": 6
      },
      "id": "a0580dfd-6337-4069-b5e2-6c3517d2d53d",
      "name": "Sticky Note56",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1020,
        6860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final_complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "8d5ad2d4-5afd-4ea6-98d0-ba7aa53e84af",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e53fa5d5-a88b-4f37-9bf0-46d2099b8322",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "560c5a7c-3386-42c4-b959-a3f7c0ae9861",
      "name": "кнопки завершения смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1140,
        2820
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "c6fdaf56-cd7c-4f83-8690-875947fdadec",
      "name": "Подтверждение завершения смены после вывода перевозки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        0,
        2640
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Была ли заправка у данного автомобиля?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "fuel"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "2b05732d-381e-4ab4-929f-198bca9b0bf7",
      "name": "была заправка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -780,
        3020
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "6a96b0fa-d3b9-4e65-a68c-b252565f2104",
      "name": "поиск авто1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -480,
        7160
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Логист"
            }
          ]
        }
      },
      "id": "0673f838-638d-47be-a120-93a1414e23f0",
      "name": "поиск логистов4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -304,
        7160
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "55cf7932-8843-4de0-aaae-3b495697fc1e",
      "name": "поиск тг айди логистов4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -84,
        7160
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3362e7f8-adef-48a9-8ec4-3297f21d69ee",
      "name": "преобразуем в 1 переменную4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        376,
        7160
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "3c8bc7cc-c433-4498-9697-13bfef9f1239",
      "name": "меняем статус на обычный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        836,
        7160
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Не удалось отправить информацию, логист не найден",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "48963a89-b001-4fa2-9dcf-e80211de0054",
      "name": "если не отправилось2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        536,
        7320
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка информации о литрах логисту",
        "height": 340.04935999199654,
        "width": 1584.447064897881,
        "color": 6
      },
      "id": "27405956-6853-4279-971e-44be48723e97",
      "name": "Sticky Note59",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        7060
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Заправка: авто {{ $('поиск авто1').item.json.number_car }}, {{ $('Execute Workflow Trigger').item.json.fuel_liters }}л. Чек не сохранился",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d230f486-bf99-43b0-9591-097dd601b70d",
      "name": "Отправка литров логисту",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        156,
        7160
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Информация о литрах доставлена логисту",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "68415077-04cc-4e03-b9a0-c6c602282495",
      "name": "Инфа доставлена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        600,
        7160
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Сколько литров вы заправили в автомобиль? Введите число, например: 100",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "3ec366b9-0d42-466a-8a93-b66d600cee6c",
      "name": "данные о литрах",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        6900
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию чека с заправки:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад ",
                    "additionalFields": {
                      "callback_data": "cancel_receipt_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "40372bff-c1a7-4756-a650-54bbca383d43",
      "name": "фото чека",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -480,
        7460
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_fuel_count"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ca2882ee-9f28-427b-a823-64e39dcd84ed",
      "name": "статус ввода литров",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -520,
        6900
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "У вас сохранился чек?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "cc293431-9202-497b-ac55-d600f2f15b91",
      "name": "есть ли чек",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -540,
        7640
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Фото чека",
        "height": 334.02911078486767,
        "width": 615.1032860836,
        "color": 6
      },
      "id": "8983fdb1-b72e-4831-a15a-ff6d4d8dc5ca",
      "name": "Sticky Note60",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        7424
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите меру исчисления перевозимого материала:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "м3",
                    "additionalFields": {
                      "callback_data": "measure_m3"
                    }
                  },
                  {
                    "text": "Тонны",
                    "additionalFields": {
                      "callback_data": "measure_t"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "4c93a668-8caa-4dfa-8535-5d9a5fd764d8",
      "name": "выбор меры",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        7880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "f94be98c-f8f1-4704-98c0-334305d62c81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "2fd426ab-a8c4-4d3d-ac1c-695cb0c9155b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "add_fuel_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4e2010a9-533d-40b6-8dd9-d434e1f1fb81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "cancel_receipt_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "fd423f5a-3023-48bf-9a83-80285dbd6abc",
      "name": "данные о топливе",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -960,
        6900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "photo_fuel_receipt"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ca4c8861-d882-4267-aa4c-43169ed01f14",
      "name": "статус=чек фото",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -300,
        7460
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "4871a951-83ce-458e-92b6-76ef041ee16b",
      "name": "статус дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -300,
        7640
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "e748754c-dfe6-490b-a616-d504520ccc28",
      "name": "статус=дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -40,
        7880
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_material_volume",
            "weight_measure": "={{ $json.measure }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d6901cd7-a0f4-4009-8047-707aa1586e61",
      "name": "статус=ввод количества материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -160,
        8140
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "send_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "219e6b5f-9163-4d47-be94-eaa66793d95e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "last",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9ae7ddc4-13c4-4009-8856-5b2bfbe14441",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "mech_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5273404d-720b-4e65-82f4-df39ecd37ae7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "photo_cancel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4c57a215-ac3c-40f6-b79d-95384548ad56",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "03cbc6e8-df93-4dee-9467-7d9f92695e2b",
      "name": "Кнопки после отправки фото",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1120,
        2180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c998d5a5-0ba2-42ce-94b8-7eb8c4900754",
              "name": "measure",
              "value": "м3",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d799edf0-e0ed-4560-8274-871a1cceba5c",
      "name": "мера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -380,
        8060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd7f631a-2dd0-4bd9-a162-d6b2e9db5ffe",
              "name": "measure",
              "value": "Тонны",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cb8a20e7-8e28-4d6b-9dee-3b539767f3fc",
      "name": "мера1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -380,
        8240
      ]
    },
    {
      "parameters": {
        "content": "## сохранение объёма материала",
        "height": 589.7232460239827,
        "width": 841.1891717773943,
        "color": 6
      },
      "id": "a6acf280-bf19-4d28-87df-5c24367fd0a2",
      "name": "Sticky Note61",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -760,
        7800
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, вы завершили рейс, хотите начать следующий?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "cacfa134-db8d-4cd5-a4e3-b8fb0d9d8e6b",
      "name": "Рейс завершен и есть еще рейсы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1880,
        980
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы выполнили все рейсы по данной перевозке!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть назначенную перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "6a9bf455-c6ef-4c98-90d7-85abea566daf",
      "name": "Завершен рейс и перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1440,
        1040
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c1a400c1-ef5a-4ba3-86c6-17eb89aa6c99",
      "name": "меняем статус на дефолтный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -60,
        2260
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "weight_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "62b568f5-7744-4723-abd6-21203d1a23c7",
      "name": "меняем статус на отправку весовой",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -480,
        2460
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "24448d12-7e1b-4732-a4a0-0221bb3273da",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_m3",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5cf07c1d-3184-4f47-b88a-2fc5bea5dd8a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_t",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c8ce3302-046b-4089-b85d-9e7cf424c680",
      "name": "объём материала",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1000,
        7880
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите документ, который хотите проверить",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "300dc938-762d-4714-a938-9e2dfb4da88a",
      "name": "загрузите ттн или весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        8880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "1dd8f452-fc6f-48aa-9534-621772077722",
      "name": "отправляем сообщение 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        740,
        8500
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "088bc62b-c047-45bc-a5ae-8eee2292a839",
      "name": "номер авто2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -680,
        8500
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "cffd12ed-39f3-41d3-99c5-b71b00284d79",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -260,
        8500
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "take_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "535cadc8-a70a-4a72-a932-a352cc94843b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4a9a6c70-e2e7-4ac3-ad3b-9b2fc779f25d",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TR_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c15e9b8-76c9-4f34-96af-cf0008354db6",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"ER_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b5d08639-5b0d-42e5-9033-327b8386394d",
      "name": "обработка кнопок ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1140,
        3820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4b07ad9e-307c-473d-a9f6-c9cb583505b5",
      "name": "номер выбранной перевозки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -660,
        8880
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b1fc9053-4512-47d6-9bdc-519167398e82",
      "name": "запишем номер выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -440,
        8880
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4cb6fa3b-2ff6-4b55-a410-41d61a2f194c",
      "name": "запишем номер выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -460,
        8660
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "8df3982b-ba42-4285-8501-a1052e1f5fe7",
      "name": "удаляем прошлое сообщение с выбором",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -680,
        8660
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок динамическими инлайн кнопками для дальнейшей проверки документов\nА также возврат к этому меню",
        "height": 396.78241746442734,
        "width": 1829.5306633264163
      },
      "id": "47120541-1363-40a8-8d60-7d136e371568",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -920,
        8440
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.transportations.id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            },
            {
              "fieldName": "ttn"
            },
            {
              "fieldName": "car",
              "value": "={{ $('номер авто2').item.json.id }}"
            }
          ]
        }
      },
      "id": "d95fb00a-6e4f-49da-a2f6-93015d13f921",
      "name": "находим рейсы без ттн",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -60,
        8500
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "26f626cc-95ed-4738-8ae6-c6c0fa13b6aa",
      "name": "номер авто3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -840,
        9280
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0eb0f1cc-9f11-4c95-8b19-98d23ad8f344",
      "name": "получаем id выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -600,
        9280
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.transportation_for_certificate }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            },
            {
              "fieldName": "car",
              "value": "={{ $('номер авто3').item.json.id }}"
            }
          ]
        }
      },
      "id": "bd1e916d-b09f-478b-ad3d-8fb74a08bfce",
      "name": "находим рейсы  в перевозке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -180,
        9200
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "0894ca4d-d834-4df4-9dde-e2f2d9897cfc",
      "name": "сколько всего рейсов в перевозке по машине",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        40,
        9200
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "ttn"
            }
          ]
        },
        "options": {}
      },
      "id": "3606fccc-4f3f-46bc-b462-b4adcb523a15",
      "name": "сколько рейсов без ттн",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        40,
        9420
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('получаем id выбранной перевозки').item.json.transportation_for_certificate }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            },
            {
              "fieldName": "ttn"
            },
            {
              "fieldName": "car",
              "value": "={{ $('номер авто3').item.json.id }}"
            }
          ]
        }
      },
      "id": "fa7fa582-07d5-4116-abc4-435d3b6f8069",
      "name": "находим рейсы без ттн в перевозке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -180,
        9420
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "62b9cd55-3ac5-4d9e-a1dc-c4f5c083d658",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": "={{ $json.count_ttn }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1ae4c7ad-367b-4a19-b657-796159a616f9",
      "name": "сравниваем общее кол-во рейсов и рейсов без ттн",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        520,
        9300
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "70d4207e-e05e-4155-911d-30e619e11872",
      "name": "объединяем кол-во в одно",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        320,
        9300
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "❗Вы не загружали ТТН по данной перевозке.\nОтправьте фото для загрузки",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "0d22d14b-8638-4114-8266-3c530afdb508",
      "name": "загрузите ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        840,
        9160
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "ТТН по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "a81a5781-2abf-4936-bc1f-0c161a358613",
      "name": "ттн загружена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        840,
        9340
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "582d7d0e-761c-45ae-8d35-97043efec7a2",
      "name": "меняем статус на дефолтный4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        0,
        8880
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "TTN_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "effa89d3-dbc4-406d-810d-bc3b420d4575",
      "name": "меняем статус на отправку ТТН",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1020,
        9160
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам",
        "height": 197.9358524347207,
        "width": 922.1693440210809
      },
      "id": "d37a0d48-98b7-44dd-a4c3-00a9506b6f00",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -729,
        8840
      ]
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 496.7072782298619,
        "width": 2031.4883429481965
      },
      "id": "4501f9b1-078d-42bd-87bb-a1668c1e0049",
      "name": "Sticky Note44",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        9060
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "74ce5c75-c764-42b9-b306-e271fec201f1",
      "name": "номер авто4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -820,
        9760
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2f1ee27d-3204-403a-9e49-7ce2053d8895",
      "name": "получаем id выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -580,
        9760
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 385.52249089873953,
        "width": 1629.9877220302546
      },
      "id": "a74a3f92-3744-420a-a8e1-a23c36b01412",
      "name": "Sticky Note64",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        9680
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('получаем id выбранной перевозки1').item.json.transportation_for_certificate }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            },
            {
              "fieldName": "weight_certificate"
            },
            {
              "fieldName": "car",
              "value": "={{ $('номер авто4').item.json.id }}"
            }
          ]
        }
      },
      "id": "6b0ba306-125c-4b72-9efb-1cb6e4cf43de",
      "name": "находим рейсы без весовой в перевозке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -320,
        9760
      ],
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Все весовые справки по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "aa460bd9-23d1-43c5-afa6-a474a141ad7f",
      "name": "весовые загружены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        9920
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "211055ce-8e69-443a-9229-a0997cc776a2",
              "leftValue": "={{ $('находим рейсы без весовой в перевозке').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "44080b81-c7e7-44bb-b94d-d60b3761628b",
      "name": "есть рейсы или нет",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -100,
        9760
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "weight_certificate"
            }
          ]
        },
        "options": {}
      },
      "id": "83218d0a-6362-4020-88f0-d4bb0efaed9a",
      "name": "сколько рейсов без весовой",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        160,
        9740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "many_weight_photo",
            "count_weight_photo": "={{ $('сколько рейсов без весовой').item.json.count_weight_certificate }}",
            "count_weight_photo_sent": 0
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "3a3f9acf-431a-4f27-ab7d-f24776b2fff0",
      "name": "меняем статус на отправку нескольких весовых",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        600,
        9740
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "efe5869e-e880-459f-a4e6-366d1314f809",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -100,
        3220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/complete_round",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id8').item.json.number_car +'\"'}}\n}",
        "options": {}
      },
      "id": "f6ccf472-4b97-4c3f-86f7-0d5cacc508a9",
      "name": "завершение рейса1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -400,
        3520
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "7747c719-af87-45ec-b70f-d8a8de877059",
      "name": "получение перевозок2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        680
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена срочная перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "cbb25220-a1b3-4eff-ad76-c0f9b0ff76fa",
      "name": "вам назначена срочная перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        660
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Отправитель - <b>{{ $('Filter1').item.json.transportations[\"sender\"][1] }}</b>\nПолучатель - <b>{{ $('Filter1').item.json.transportations[\"partner\"][1] }}</b>\nМаршрут - <b>{{ $('Filter1').item.json.transportations.display_name.substring(11) }}</b>\nМатериал - <b>{{ $('Filter1').item.json.transportations.material[1] }}</b>\nКомментарий - <b>{{ $('Filter1').item.json.transportations.comment }}</b> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "31daf43a-44c3-40f5-8f09-9bd1f5a284d3",
      "name": "Выводим информацию о срочной перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        660
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "087efe3e-faf0-4b28-8df2-4fabcb37f89f",
      "name": "разделение перевозок",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -40,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.transportations.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ad098954-a384-46c9-8788-8af94afd2194",
      "name": "Filter1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        160,
        680
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.current_transportation[0] }}"
            }
          ]
        }
      },
      "id": "89f31b85-87b5-4800-a744-1f7d19a7451b",
      "name": "находим какая сейчас перевозка",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        420,
        940
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $json.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "c87d52a8-b033-4521-acbe-c8168704b95c",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9932fce6-9f11-45eb-a7cf-bb57467d841c",
      "name": "выполняется сейчас срочная?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        620,
        940
      ]
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "transportation[0]",
        "options": {}
      },
      "id": "cd6fe56d-066e-40e6-afb7-61701de50ec6",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        140,
        8500
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.transportation[0] }}"
            }
          ]
        }
      },
      "id": "49922449-7ba8-4d29-8425-f72a8157bb56",
      "name": "находим перевозки, которые выведем в кнопках",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        340,
        8500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "47e5f2c0-2919-4244-831d-1390d22d2634",
      "name": "получение перевозок1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        3260
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине4').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "debbcfff-e08d-476a-a138-2d34a1c8a232",
      "name": "есть ли еще рейсы по этой перевозке?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Отправитель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"sender\"][1] }}</b>\nПолучатель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"partner\"][1] }}</b>\nМаршрут - <b>{{ $('находим прошлую перевозку').item.json.transportations.display_name.substring(11) }}</b>\nМатериал - <b>{{ $('находим прошлую перевозку').item.json.transportations.material[1] }}</b>\nКомментарий - <b>{{ $('находим прошлую перевозку').item.json.transportations.comment }}</b> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить перевозку",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "779fbf8d-ea19-464d-a614-21c87afa9457",
      "name": "Выводим информацию о срочной перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2360,
        440
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "996e27e0-6e22-474f-a083-686b44885b22",
      "name": "получение перевозок3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1160,
        440
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "41d2b510-e39c-46eb-86ee-f05672f51c21",
      "name": "разделение перевозок1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1360,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bb8153e1-c56a-4454-a9d3-3d7fe5fd3d07",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cc85d92e-e1e4-4af2-806b-711ed09f64e5",
      "name": "завершена ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        920,
        440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы завершили срочную перевозку\nДо этого Вы выполняли перевозку:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "fdc33878-e822-4c2c-9200-990f05b90fe4",
      "name": "срочная перевозка завершена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2160,
        440
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.transportations.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "5a61de57-7c06-4354-93fb-20f077c6a0db",
              "leftValue": "={{ $json.transportations.type }}",
              "rightValue": "Запланированная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "54be46d2-c502-46ce-9fc7-a8a3b5dc432a",
      "name": "находим прошлую перевозку",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1560,
        440
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6ae8b3e3-6474-4941-9108-b76de8c0e04b",
      "name": "есть ли еще рейсы по этой перевозке?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        940,
        680
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.transportations.id }}"
            },
            {
              "fieldName": "car",
              "value": "={{ $('находим машину по odoo id2').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Назначен"
            }
          ]
        }
      },
      "id": "587b777a-399b-4a3e-a95c-fb2444b33736",
      "name": "находим рейсы по машине10",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1760,
        440
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине10').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8ff19150-e892-4618-bec0-d150f4043dc8",
      "name": "есть ли еще рейсы по этой перевозке?2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1940,
        440
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('Filter1').item.json.transportations.id }}"
            },
            {
              "fieldName": "car",
              "value": "={{ $('находим машину по odoo id2').item.json.id }}"
            }
          ]
        }
      },
      "id": "df81fa60-5c11-4906-bc2d-469a68d867df",
      "name": "находим рейсы по машине9",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        560,
        680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Filter1').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "33b0fb23-facf-4574-8bf4-18b37c44c1ed",
      "name": "есть ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        680
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "3d93769b-587b-4d89-8488-160fa94818cf",
      "name": "Summarize5",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        760,
        680
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}"
            },
            {
              "fieldName": "car",
              "value": "={{ $('завершение рейса').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Назначен"
            }
          ]
        }
      },
      "id": "8d6c9c7c-4f51-4d2d-acec-da48c918a7f2",
      "name": "находим рейсы по машине4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        960,
        920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {},
      "id": "14a64979-1080-4760-adfd-1279bc55766f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2160,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $('начало рейса').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "365df828-6583-4cb0-90ab-46b4af9ba699",
      "name": "получаем не обновленные данные1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        240,
        120
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('начало рейса').item.json.id }}",
            "count": "={{ $json.count +1 }}",
            "driver_id": "={{ $('получаем odoo id').item.json.odoo_id }}",
            "weigth": "={{ $json.weigth +  $('находим рейсы по машине').item.json.cargo_netto }}"
          },
          "matchingColumns": [
            "id",
            "driver_id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count",
              "displayName": "count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "weigth",
              "displayName": "weigth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "driver_id",
              "displayName": "driver_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "43615661-60d1-4c3e-b081-25f5f1925f7f",
      "name": "Добавление веса и количества рейсов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        420,
        120
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('находим машину по odoo id').item.json.current_transportation[0] }}"
            },
            {
              "fieldName": "car",
              "value": "={{ $('находим машину по odoo id').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "477f4a93-72d6-40c3-91c7-3a1e6e643364",
      "name": "находим рейсы по машине",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        40,
        120
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cc1ce98c-fa1f-4323-8fbc-f4d240534c35",
      "name": "Удаление дневной статистики",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        600,
        2840
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "6a33f1dd-3e62-4cb5-904c-950509147c3e",
      "name": "удаляем прошлое сообщение с завершением смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -900,
        8500
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Меню выполнения следующего рейса, либо перевозка заверена",
        "height": 326.33462121963237,
        "width": 711.5058573856858
      },
      "id": "40612b94-5885-4a68-97c6-21053222ace9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        840
      ]
    },
    {
      "parameters": {
        "content": "## Проверка наличия срочной перевозки",
        "height": 190.88466314753396,
        "width": 1374.4966262860821
      },
      "id": "25ff6839-daa0-47db-b123-c071bc578d8b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -280,
        645.5871571978169
      ]
    },
    {
      "parameters": {
        "content": "## Вывод срочной перевозки",
        "height": 210.2083569266656,
        "width": 451.40360811227606,
        "color": 5
      },
      "id": "2bc09f46-ad3a-496b-828e-838879823e4b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        620
      ]
    },
    {
      "parameters": {
        "content": "## Завершена ли срочная еревозка и возврат к предыдущей",
        "height": 223.82830383823693,
        "width": 1656.5765497002262
      },
      "id": "8ae1ffc9-6a6c-465a-89b4-30d80e37d371",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        860,
        401.4692021114788
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "532662e3-885c-48ca-9043-5cbdb440bf8f",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -460,
        8500
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.display_name.substring(11)}`,\n    callback_data: `TS_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"Завершить проверку\", callback_data: \"check_fuel\" }] // постоянная кнопка\n    ]\n};\n\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Проверьте наличие ТТН и Весовых справок в перевозке.\\nВыберите необходимую перевозку🛻\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "096da25b-1826-436f-8108-a6d90e954719",
      "name": "создаём динамически инлайн кнопки2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        8500
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "За эту смену у Вас не было перевозок или у Вас нет выполненных рейсов",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_fuel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e7a804cc-40d3-4712-832f-4ab87bf402ae",
      "name": "сегодня не было перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        8680
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=❗Загружены не все весовые справки по данной перевозке.\nОтправьте <b>{{ $json.count_weight_certificate }}</b> фото для загрузки ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "06825e90-8f50-4342-85b7-ef31b91af69b",
      "name": "загрузите весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        380,
        9740
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Выберите документ, который хотите проверить",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "1c3df17f-e2c4-4317-bd2e-a7e0fb007fcd",
      "name": "загрузите ттн или весовые1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -240,
        10200
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "552c85bf-d38b-4457-a0af-9f70371ea2b5",
      "name": "номер выбранной перевозки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -680,
        10200
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f0f0f678-0d86-4c2f-838e-6cd7c41f64a3",
      "name": "запишем номер выбранной перевозки2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -460,
        10200
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "35086728-b0dd-4f96-a073-5319b5b2bc59",
      "name": "меняем статус на дефолтный6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -20,
        10200
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам после загрузки весовых",
        "height": 241.63069006760355,
        "width": 1012.8855128867174
      },
      "id": "e31c3274-4864-4e46-8dc1-6cdef914297a",
      "name": "Sticky Note66",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -900,
        10140
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1a4255b1-6a7c-487f-8e6e-a1f4bf8f6e99",
      "name": "загрузите ттн или весовые2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -860,
        10200
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "transportations.id"
            }
          ]
        },
        "options": {}
      },
      "id": "cf52a8d5-d66e-4598-9f82-a8edc00c4b2d",
      "name": "Sort",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        120,
        3220
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "upload_sertificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_certificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "3ef15479-f781-4cf6-8452-ac25023ba248",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_TTN",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5daaa096-aa68-4239-be97-b65bd575add0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_weight",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "d301eb78-6a62-4223-ad44-d3f85f59eb7e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"NTS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "69b7eca8-f0f1-48ae-a554-d4555e272c02",
      "name": "ТТН и весовые в конце смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1100,
        8620
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Вы в главном меню",
        "additionalFields": {}
      },
      "id": "0ecebfca-9b15-4b74-a9c9-b08c69f195bb",
      "name": "назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        9340
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "7b1cd1a4-7925-4460-8a1d-6bb0e4c79749",
      "name": "Summarize6",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        700,
        3280
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $('Sort').item.json.transportations.id }}"
            },
            {
              "fieldName": "car",
              "value": "={{ $('находим машину по odoo id9').item.json.id }}"
            }
          ]
        }
      },
      "id": "17071b64-c2d4-48f6-9f8b-290c199869e4",
      "name": "находим рейсы по машине и перевозке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        500,
        3260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {},
      "id": "98ef101a-c2d7-47fb-b060-f75e9ead4830",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1260,
        2980
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a0a4952d-77d3-4d78-8b28-28e410745bc5",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        340,
        3240
      ]
    },
    {
      "parameters": {},
      "id": "c9312f2e-c474-435a-b1c4-7f19213e6db2",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1380,
        3280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "61bcb0f0-862c-40b8-8081-282ab7b7e544",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5ccecca5-b25a-4a8b-87ef-8610f3e0414e",
      "name": "Filter2",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        720,
        3100
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Filter2').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "da8d1e4e-90ae-4ab4-a36c-5d17d844c02a",
      "name": "есть ли перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        920,
        3100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7b45f759-a46e-4494-a3c2-5ec089814d43",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dcde8123-137b-4b94-b173-76888c0e400b",
      "name": "1 ли рейс?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5cca3a3f-692b-4006-a954-08659e1e94ec",
              "leftValue": "={{ $('находим рейсы по машине и перевозке').item.json.status }}",
              "rightValue": "Назначен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0fdee934-0843-440f-a0d0-2c3c9927af5b",
      "name": "если 1, то назначен ли он?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1120,
        3220
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('находим рейсы по машине и перевозке').item.json.transportation[0] }}"
            }
          ]
        }
      },
      "id": "a030c84e-7890-48ea-aa28-86bab3a78df4",
      "name": "находим информацию о перевозке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1280,
        3120
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "02cab235-fde2-4536-b530-aa5acc0d46c1",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        9500
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "3325b9b3-8e35-4d4b-af66-fe1c29af204d",
      "name": "статус=дефолт",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1020,
        9500
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## меню Срочно",
        "height": 987.9912140099913,
        "width": 515.4472763738418,
        "color": 6
      },
      "id": "34620f59-8936-498d-ba16-8b9a0cd756a0",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1380,
        9140
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с маршрутом\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "8dae1e95-1538-40d5-ab95-22c9af5b74e9",
      "name": "отправьте данные1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        9700
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_route"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "9c9b7144-7f86-4a16-940f-4e2a1a9260a6",
      "name": "статус=отправка срочно маршрут",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1020,
        9700
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "55"
      },
      "id": "abeda74b-a51a-4ff4-bcfc-c13128d6b666",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1940,
        1360
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "transportation"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "33f93188-2355-4a80-81ec-6238582b2381",
      "name": "рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1880,
        9620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "9b59b03c-4b42-451f-8644-3010e6c52839",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1700,
        9620
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "3d4861d3-85e6-4a37-a14c-58df12d3b373",
      "name": "номер авто5",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -2060,
        9620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "927a2200-285a-433b-a911-ca0d30e59c98",
      "name": "есть рейс?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1500,
        9620
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет начатого рейса, вы не можете указать проблему"
        }
      },
      "id": "bb379789-af41-4ccc-9132-a76f63b4c523",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        10040
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "55958dff-7b92-4ab4-8337-c7fdb4e67332",
      "name": "номер авто6",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -2060,
        9820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "transportation"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "d36a6dae-301d-4e6e-a61f-52be43578441",
      "name": "рейсы1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1880,
        9820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "b8d33409-3d3a-44ae-9a44-3ece2682e06b",
      "name": "актуальный рейс1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1700,
        9820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1c2fdfd6-47b8-41d6-8edc-738003db9ff1",
      "name": "есть рейс?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1500,
        9820
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с документами\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1be0990e-5a84-427f-a6cf-43b474b581c8",
      "name": "отправьте данные2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1240,
        9860
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_document"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "b0f7943b-ef26-4ff4-85f1-fd20b6408276",
      "name": "статус=отправка срочно документ",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1020,
        9860
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/take_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "b93a6040-8416-41c8-9e9e-029cbe8cfac3",
      "name": "обновим статус на \"в работе\"",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        380,
        4240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена следующая перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "9bc250b0-e26d-46db-9e5f-d329c4b3403b",
      "name": "вывод доступных перевозок5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1940,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('Code').item.json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "18b86cbd-fb4f-48f9-b1f0-785841fd806a",
      "name": "Выводим информацию о перевозке6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2220,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Limit').item.json.display_name.substring(11); }}",
            "id": "={{ $('Limit').item.json.id }}",
            "driver_id": "={{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "count",
              "displayName": "count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weigth",
              "displayName": "weigth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "driver_id",
              "displayName": "driver_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "15a9c11d-b371-44fb-8406-c6163b376884",
      "name": "Добавление перевозки в бд3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2420,
        3260
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "вывод информации о перевозке",
        "height": 277.01644113372225,
        "width": 804.0896318554126
      },
      "id": "77bfb87c-3c51-45e7-9ff7-e00abb26e021",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        3200
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ab2599b7-d238-4b88-bb49-bd3904b8bd0e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_back_to_menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "32f5ff63-66c6-41ab-b8ae-31db4b91a594",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_choise_warn",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5458e8a5-336f-4d88-b337-020b31a58c52",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_route",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ee338c82-2f82-4b33-ac41-5d054a850f9c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "7841b01e-f06f-4e06-b486-8e412263bc3b",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2520,
        9520
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1 }}"
      },
      "id": "db471ae9-2dcc-4da2-8f89-20948bc71d78",
      "name": "удаление меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -2040,
        10360
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id  }}"
      },
      "id": "b2f786f3-ac1e-4edc-a850-19043037fde5",
      "name": "удаление меню ТО1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1860,
        10360
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/complete_round",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}},\n  {{ $json.weight }}\n}",
        "options": {}
      },
      "id": "dfd7022e-a595-4bf0-aa8d-2fe9bfa73674",
      "name": "завершение рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        240,
        940
      ]
    },
    {
      "parameters": {},
      "id": "d318bc82-58e7-4484-b2d8-fb182680c280",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        80,
        940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_volume\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e6a9ac26-4df0-4432-abf3-7968147f8741",
      "name": "убираем \"м3\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -120,
        880
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "a01d3012-4257-48fd-8035-d622aebff6b6",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -340,
        940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_netto\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -7) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3e25771a-c7e9-4c80-81af-50471571b14a",
      "name": "убираем \"Тонны\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -120,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c56ea872-f5c3-41fc-b3ad-5e0a619c9438",
      "name": "меняем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1360,
        11260
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "1a9b7e71-43fe-4c37-a89c-df2ea160b3e1",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1760,
        10960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "driver.schedule",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Switch').item.json.odoo_id }}"
            },
            {
              "fieldName": "date",
              "value": "={{ $json.currentDate }}"
            }
          ]
        }
      },
      "id": "86356a82-7df9-4eaa-b5b2-89e2a035529a",
      "name": "Odoo",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1420,
        10960
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        }
      },
      "id": "108100ca-5b2d-4f9b-b8f7-952411424de4",
      "name": "Odoo1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1240,
        10960
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ca6a0c17-30d4-4136-b642-093f345d56de",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1040,
        10960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.employee_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1917fb6c-0785-4742-b73a-7f7a9881a1e3",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -820,
        10860
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a6bb2143-2b9e-476a-a397-93b5f5b23f17",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        11020
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к другому водителю.\nВы не можете занять этот автомобиль",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "1e2bab1f-61c2-42b5-bdd6-af2123b5520a",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        10740
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "15daa199-bc80-4f74-b2d5-5cf6d89d2bbf",
      "name": "ввод одометра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -380,
        10880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_odometer",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f676d803-a1bd-446f-a295-6a9680c93c8b",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        220,
        10880
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "19dfd832-10da-45d0-a8e7-a6705081b3d6",
      "name": "Получение сегодняшнего дня",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1580,
        10960
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "fb0e454f-6d40-4147-9d00-b7d1211d1583",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1800,
        11240
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1}}",
        "text": "=Ваш автомобиль {{ $('Odoo1').item.json.model }} - {{ $('Odoo1').item.json.number_car }}",
        "additionalFields": {}
      },
      "id": "4c9163e7-f4ac-4c82-b669-7b3a53c077ae",
      "name": "Изменение прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -160,
        10880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1 }}"
      },
      "id": "ecefa41b-a6ed-4518-ab21-8616025fc41c",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1560,
        11260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "delete_TO",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "bc0555bc-cbce-476f-a46a-1528806164c3",
      "name": "Удаление меню ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2280,
        10520
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_input_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "475a9936-9e3b-4576-a4d4-1b35af3b38e0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "correct_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c2ec136f-8e62-4d43-84d8-6a6e56e54201",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -800,
        5860
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "17824472-6452-4a47-9361-521a73d952b7",
      "name": "убираем кнопки у подтверждения номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -480,
        6000
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a7d1ba46-5c71-46ee-87aa-8937514f9f81",
      "name": "ввод одометра1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -280,
        6000
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_odometer"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "e7abf301-a154-48ca-94a9-8b399f47dca4",
      "name": "статус ввода одометра1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -80,
        6000
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "39ebd366-1c5b-4a9f-a19d-9b510fd02d6c",
      "name": "поиск текущего авто1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -900,
        1840
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "682b15a9-d938-4b58-9053-267f7332c8ca",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -520,
        1840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations, full_quarry_work",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "f8d76152-f65c-44b8-bf7e-fc4388646ce6",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -160,
        1760
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "проверить перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "8c3771f0-aab4-4f07-a568-44c0478eb4dd",
      "name": "Нет доступных перевозок2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        1880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "transportations.id"
            }
          ]
        },
        "options": {}
      },
      "id": "eea479ec-8b92-4eab-95aa-5436cdc63a56",
      "name": "Sort1",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        320,
        1760
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к первой перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c8ae5873-89da-4794-80b9-e1c87e9ebe11",
      "name": "Вывод перевозок на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1380,
        1600
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок на день в начале смены",
        "height": 230.4346665917456,
        "width": 1157.3905949081466,
        "color": 3
      },
      "id": "7d0f34e8-073c-4c27-a915-5a67db0295d8",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -900,
        1740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}},\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "c0a0557a-f8c9-44cf-967a-2a63ebc688fc",
      "name": "начало рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -200,
        220
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, рейс активен, по его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "96d941f8-13e5-4b63-adc3-cc20fb950fae",
      "name": "начатый рейс",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -900,
        220
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "0e2a739b-6273-4772-ab73-f0c39c2580bf",
      "name": "находим машину по odoo id",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -460,
        220
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "={{ $json.error.message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "416d1348-5adc-4f2e-863f-d34db5784af9",
      "name": "Telegram4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        40,
        380
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "63545b13-a170-424d-af9a-c79facb56b17",
              "leftValue": "={{ $('находим какая сейчас перевозка').item.json.end_condition }}",
              "rightValue": "По перевезенным кубометрам",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "89f078ed-d42d-4ea5-9f70-966eea0152e8",
      "name": "Проверка перевозки(кубометры)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1640,
        880
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>Требуемое кол-во кубометров по текущей перевозке -  {{ $('находим какая сейчас перевозка').item.json.required_cubic_metre }}</b>\n<b>Остаток кубометров по текущей перевозке -  {{ $('находим какая сейчас перевозка').item.json.required_cubic_metre - $('находим какая сейчас перевозка').item.json.current_cubic_metre }}</b> ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6ad04c26-7689-4a39-8906-1faaf563bd32",
      "name": "Рейс завершен и есть еще рейсы1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1880,
        800
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  if (item.json.hasOwnProperty('transportations')) {\n    const transportation = item.json.transportations;\n    const sender = transportation.sender[1];\n    const partner = transportation.partner[1];\n    const route = transportation.display_name.substring(11);\n    const material = transportation.material[1];\n    const comment = transportation.comment;\n    const endCondition = transportation.end_condition;\n    const requiredCubicMetre = transportation.required_cubic_metre;\n    const round_quantity_for_car = transportation.round_quantity_for_car;\n    const required_ton = transportation.required_ton;\n    const currentCubicMetre = transportation.current_cubic_metre;\n\n    let message = `<b>${index}.</b> Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\") {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre - currentCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n      message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\") {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n    }\n\n    if (index === 1) {\n      message = `<i><b>${index}. Отправитель - ${sender}\\nПолучатель - ${partner}\\nМаршрут - ${route}\\nМатериал - ${material}`;\n      if (comment !== false) {\n        message += `\\nКомментарий - <i>${comment}</i>`;\n      }\n      if (endCondition === \"По перевезенным кубометрам\") {\n        message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre - currentCubicMetre}</b>`;\n      }\n      if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n        message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n      }\n      if (endCondition === \"По перевезенным тоннам\") {\n        message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n      }\n      message += `</b></i>\\n\\n`;\n    } else {\n      message += `\\n\\n`;\n    }\n\n    combinedMessages += message;\n\n  } else if (item.json.hasOwnProperty('full_quarry_work')) {\n    const quarryWorks = item.json.full_quarry_work;\n    const quarryName = quarryWorks.quarry[1];\n    const date = quarryWorks.date;\n    const comment = quarryWorks.comment;\n    const endCondition = quarryWorks.end_condition;\n    const requiredHours = quarryWorks.required_hours;\n\n    let message = `<b>${index}.</b> Карьер - <b>${quarryName}</b>\\nДата - <b>${date}</b>`;\n\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"В течении смены\") {\n      message += `\\nТребуемое количество часов по работе - <b>${requiredHours}</b>`;\n    }\n\n    if (index === 1) {\n      message = `<i><b>${index}. Карьер - ${quarryName}\\nДата - ${date}`;\n      if (comment !== false) {\n        message += `\\nКомментарий - <i>${comment}</i>`;\n      }\n      if (endCondition === \"В течении смены\") {\n        message += `\\nТребуемое количество часов по работе - <b>${requiredHours}</b>`;\n      }\n      message += `</b></i>\\n\\n`;\n    } else {\n      message += `\\n\\n`;\n    }\n\n    combinedMessages += message;\n  }\n\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "76fc714f-8704-4c39-b0d0-704d5a763294",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        1740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $input.all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const round_quantity_for_car= transportation.round_quantity_for_car;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n    \n  if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n    message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "ff7d44ed-3832-48b1-aac9-135f5987557b",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1660,
        3260
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4c3c04f1-6431-46e9-8052-32be5be9b010",
              "leftValue": "={{ $json.weight_measure }}",
              "rightValue": "м3",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d82dc6b3-b35f-4a4e-a724-377c2f60be50",
      "name": "Проверка выбранного матрериала",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        60,
        8140
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6fc4b4fe-1528-4588-b215-85a375a45e75",
      "name": "ввод количества материала м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        320,
        8020
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите массу перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "53ee17da-2111-404c-aa7b-473364c8b560",
      "name": "ввод количества материала тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        360,
        8240
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const transportation = item.json.transportations;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const round_quantity_for_car= transportation.round_quantity_for_car;\n  const required_ton= transportation.required_ton;\n  const currentCubicMetre = transportation.current_cubic_metre;\n\n  let message = `<b>${index}.</b> Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <i>${comment}</i>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre-currentCubicMetre}</b>`;\n  }\n  \n  if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n    message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  if (index === 1) {\n    message = `<i><b>${index}. Отправитель - ${sender}\\nПолучатель - ${partner}\\nМаршрут - ${route}\\nМатериал - ${material}`;\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    if (endCondition === \"По перевезенным кубометрам\") {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre-currentCubicMetre}</b>`;\n    }\n    if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n      message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n    }\n    if (endCondition === \"По перевезенным тоннам\") {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n    }\n    message += `</b></i>\\n\\n`;\n  } else {\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "ac400d02-f52f-49d3-aa62-d4cbe9d77824",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        1760
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c024d937-a693-4045-88a1-a709219ebdc2",
              "leftValue": "={{ $json.full_quarry_work }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "28e5132c-6667-4a5b-934c-255c26600630",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        60,
        1760
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "full_quarry_work"
            }
          ]
        },
        "options": {}
      },
      "id": "fd8231d3-e2b7-47e1-8ae9-bbe95bbc3cef",
      "name": "Sort2",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        340,
        2040
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ab29fac3-d8a1-4277-9aac-c46a8ca3e960",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "1fb76a2e-1b73-4555-8e9c-fb47193d2c4b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "Finish",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e7143341-d29c-49ad-8647-8595445df788",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "3a3f51d5-25e1-4bec-a3eb-9615ed6e6ce3",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b58ebd15-9f47-4599-8da8-ae34968192d5",
      "name": "кнопки принятия и завершения заказа",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1360,
        1260
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\nlet isQuarryFirst = false; // Переменная для проверки, если на первом месте карьера\n\nif ($input.all().length > 0) {\n  const firstItem = $input.all()[0];\n  isQuarryFirst = firstItem.json.hasOwnProperty('full_quarry_work');\n}\n\nlet index = 1;\nfor (const item of $input.all()) {\n  if (item.json.hasOwnProperty('transportations')) {\n    const transportation = item.json.transportations;\n    const sender = transportation.sender[1];\n    const partner = transportation.partner[1];\n    const route = transportation.display_name.substring(11);\n    const material = transportation.material[1];\n    const comment = transportation.comment;\n    const endCondition = transportation.end_condition;\n    const requiredCubicMetre = transportation.required_cubic_metre;\n    const round_quantity_for_car = transportation.round_quantity_for_car;\n    const required_ton = transportation.required_ton;\n    const currentCubicMetre = transportation.current_cubic_metre;\n\n    let message = `<b>${index}.</b> Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\") {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre - currentCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n      message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\") {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n    }\n\n    if (index === 1) {\n      message = `<i><b>${index}. Отправитель - ${sender}\\nПолучатель - ${partner}\\nМаршрут - ${route}\\nМатериал - ${material}`;\n      if (comment !== false) {\n        message += `\\nКомментарий - <i>${comment}</i>`;\n      }\n      if (endCondition === \"По перевезенным кубометрам\") {\n        message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre - currentCubicMetre}</b>`;\n      }\n      if (endCondition === \"Количество рейсов для каждого автомобиля\") {\n        message += `\\nТребуемое количество рейсов по перевозке - <b>${round_quantity_for_car}</b>`;\n      }\n      if (endCondition === \"По перевезенным тоннам\") {\n        message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n      }\n      message += `</b></i>\\n\\n`;\n    } else {\n      message += `\\n\\n`;\n    }\n\n    combinedMessages += message;\n\n  } else if (item.json.hasOwnProperty('full_quarry_work')) {\n    const quarryWorks = item.json.full_quarry_work;\n    const quarryName = quarryWorks.quarry[1];\n    const date = quarryWorks.date;\n    const comment = quarryWorks.comment;\n    const endCondition = quarryWorks.end_condition;\n    const requiredHours = quarryWorks.required_hours;\n\n    let message = `<b>${index}.</b> Карьер - <b>${quarryName}</b>\\nДата - <b>${date}</b>`;\n\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"В течении смены\") {\n      message += `\\nТребуемое количество часов по работе - <b>${requiredHours}</b>`;\n    }\n\n    if (index === 1) {\n      message = `<i><b>${index}. Карьер - ${quarryName}\\nДата - ${date}`;\n      if (comment !== false) {\n        message += `\\nКомментарий - <i>${comment}</i>`;\n      }\n      if (endCondition === \"В течении смены\") {\n        message += `\\nТребуемое количество часов по работе - <b>${requiredHours}</b>`;\n      }\n      message += `</b></i>\\n\\n`;\n    } else {\n      message += `\\n\\n`;\n    }\n\n    combinedMessages += message;\n  }\n\n  index++;\n}\n\n// Возвращаем результат\nreturn [{ json: { combinedMessages: combinedMessages.trim(), isQuarryFirst: isQuarryFirst } }];\n"
      },
      "id": "f4e5ebfc-74a6-4754-8eba-db9e96790bfc",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a3b02257-8da4-446a-84c3-f560bcdf74b6",
              "leftValue": "={{ $json.isQuarryFirst }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "93b91104-c876-4637-b440-b37c512caae5",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1020,
        1600
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к первой работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "796d7c2b-ecd5-42ca-aa83-69eb0f7552f1",
      "name": "Вывод перевозок на день1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1220,
        1460
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a22d8717-31bf-4c08-bdcc-48ad1d7f83bd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "other_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "7f1e6da3-3b03-4e0a-9ba1-8d6f17bd404f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2260,
        11060
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "08a921fb-d077-4405-8d8c-a4d97a306a2b",
      "name": "поиск текущего авто2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1460,
        11680
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "content": "## Работы в карьере",
        "height": 1128.1889295296114,
        "width": 3053.4219888044854,
        "color": 6
      },
      "id": "1c48e00e-c599-4467-bd3a-f30ede75b247",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2660,
        11500
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "aa38eb18-4137-4b4e-9b94-b1077a645d9c",
      "name": "поиск текущего авто3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1840,
        12040
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "4f38539a-cc1e-4c6f-86ff-e3edbf087ba0",
      "name": "получение перевозок6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1320,
        12040
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "6b5bb8e5-92f3-4733-aa12-74c5807873fe",
      "name": "Получение введенных часов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2040,
        12040
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "Введите количество карьер-часов. Пример: \"8\"",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "36a26d58-0142-4162-8e54-2d301745a8dd",
      "name": "Ввод часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1980,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "input_quarry_hours",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "6157840e-7872-455f-a609-9610e32b430a",
      "name": "Смена статуса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1520,
        11860
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "57c4d9fd-d9e0-4155-b8e7-d9fa4b0a7570",
      "name": "Перевозки на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2120,
        11720
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "54ca7967-a75b-45f4-968f-a4ff8daa5436",
      "name": "Начало работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1640,
        11680
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "перевозки",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "fb9a1b1c-a489-41b3-a81d-8e83aab4ad83",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "проверить перевозки",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3dad179e-4b22-42ae-9873-573697d85994",
      "name": "вывод перевозок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1120,
        3240
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "7605b2d8-55a3-4e76-b7b5-134c7a6d872e",
      "name": "Начало работы в карьере1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2020,
        12260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('поиск текущего авто3').item.json.id }},\n  \"hours\": {{ $('Получение введенных часов').item.json.current_quarry_hours }}\n}     ",
        "options": {}
      },
      "id": "79fa792a-4fcb-454f-853e-a1ef64e24ed1",
      "name": "завершение карьерных работ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        80,
        11880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "2046f6d3-6db8-46a1-bfb0-b6ece6be5695",
      "name": "поиск текущего авто4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -1980,
        12440
      ],
      "credentials": {
        "odooApi": {
          "id": "QXqc61yRCfgVSB3C",
          "name": "new Odoo Алексей"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"hours\": {{ $('Получение введенных часов1').item.json.current_quarry_hours }}\n}       ",
        "options": {}
      },
      "id": "3d297e34-7cea-41f9-a314-626b813b59ab",
      "name": "завершение карьерных работ1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1740,
        12440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "34271eb7-2d84-4827-95ed-eeddedb999a5",
      "name": "Получение введенных часов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2180,
        12420
      ],
      "credentials": {
        "postgres": {
          "id": "Q4ZHMkPf1vzJmsuw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": \"{{ $('поиск текущего авто2').item.json.number_car }}\",\n  \"driver_id\": {{ $('поиск текущего авто2').item.json.driver_id[0] }}\n}  ",
        "options": {}
      },
      "id": "b74446ae-ee1c-4015-aff6-2931b8a7d474",
      "name": "accept_order",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1260,
        11680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept_quarry",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c9613d4-cb1a-4598-9a01-875cff830f42",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a045e192-717d-46b0-bc5e-cfd48bda407a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "d922ac87-5b93-41cf-8429-3279f3798557",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "95b4736f-c6f3-45f9-bfd7-e82230f3eadd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_quarry_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "0c1ccbba-f73b-4639-9b0f-ebe3a3d79465",
      "name": "Работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2340,
        11740
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "Вы выполнили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "af6bce9d-8450-482f-98a6-542c81dbc562",
      "name": "Выполнена работа в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -160,
        11880
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Условие по часам не выполнено! Осталось ещё {{ $('Проверка часов').item.json.required_hours - $('Получение введенных часов').item.json.current_quarry_hours }}. Вы уверены, что хотите завершить работу?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "finish_quarry_work"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "94448c20-ac28-4da7-bf3c-82f5c61e9f82",
      "name": "Недостаточное кол-во часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -100,
        12080
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "Вы выполнили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "проверить перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bbf2962c-fe8b-4c12-8bcf-2ae03540b820",
      "name": "Работа в карьере выполнена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1460,
        12400
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите количество карьер-часов. Пример: \"8\"",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "e87dae02-9912-434c-9e55-8c573fe7f91c",
      "name": "Ввод часов1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1760,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "4d0299f0-50bd-47fb-b2c0-dedcfb4efa8a",
      "name": "Начало работы в карьере2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1800,
        12260
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выполнили работу в карьере!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "752686ba-90e1-49d1-84c9-d695c44157ba",
      "name": "Работа в карьере выполнена1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1240,
        12400
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item\n.json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1b3d0ecf-4932-49f2-b493-96ba1dc758cb",
      "name": "убираем кнопку у перевозки на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1900,
        11700
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "aa1367c5-2aaf-4683-9896-fcc7e701b369",
      "name": "Telegram5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1620,
        12040
      ],
      "credentials": {
        "telegramApi": {
          "id": "ThC2kf8ZCBAO0FBa",
          "name": "Main Everest"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "d85f8c5c-b015-46e1-acf4-a2f0c7b55ac8",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -980,
        11980
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "56225e23-4760-4782-a53f-32c967d5aef9",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -760,
        11980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f1c26ea0-98da-4685-83a4-979d32f63755",
              "leftValue": "={{ $('Получение введенных часов').item.json.current_quarry_hours }}",
              "rightValue": "={{ $json.required_hours }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "19e75511-adbd-4dc2-8c41-ea77f109a6d6",
      "name": "Проверка часов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -520,
        11980
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 547393780,
          "callback_query": {
            "id": "3435691470527374797",
            "from": {
              "id": 799934256,
              "is_bot": false,
              "first_name": "Александр",
              "username": "saniochek_22",
              "language_code": "ru"
            },
            "message": {
              "message_id": 7157,
              "from": {
                "id": 7105496422,
                "is_bot": true,
                "first_name": "testbotn8n MAIN",
                "username": "n8ntestbotbot"
              },
              "chat": {
                "id": 799934256,
                "first_name": "Александр",
                "username": "saniochek_22",
                "type": "private"
              },
              "date": 1724918772,
              "text": "Вы ввели карьер-часы (7)",
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "Продолжить",
                      "callback_data": "check_quarry_hours"
                    },
                    {
                      "text": "Ввести заново",
                      "callback_data": "quarry_hours"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "-6700804144154028071",
            "data": "check_quarry_hours"
          },
          "tg_id": "799934256",
          "odoo_id": 14,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": 0,
          "materials_photo": false,
          "end_request_hours": 0,
          "car_id_while_inputing": 20,
          "fuel_liters": 0,
          "weight_measure": "Тонны",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": 0,
          "count_weight_photo": 0,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 7,
          "cookie": "session_id=c03357d229968dc92d984b67343c91b5fa6f7eb2; Expires=Fri, 29 Aug 2025 08:06:35 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-07-22T15:48:01.194Z",
      "updatedAt": "2024-07-22T15:48:01.194Z",
      "id": "2T8KQNPUzVZTTvUc",
      "name": "alexandr"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-08-29T09:56:42.000Z",
  "versionId": "14d18ee4-1762-4de2-8fc5-0788db6e5043"
}