{
  "active": false,
  "connections": {
    "оповестить по перевозке?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад1": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "действительно оповестить всех?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "оповестить по водителю?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад2": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статусов и генерация единого сообщения": {
      "main": [
        [
          {
            "node": "Вывод свободных машин",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "включены ли уведомления": {
      "main": [
        [
          {
            "node": "отключить уведомления о рейсах",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "включить уведомления о рейсах",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта1": {
      "main": [
        [
          {
            "node": "Приветственное сообщений",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка кнопок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Уточнение по созданию перевозки": {
      "main": [
        [
          {
            "node": "Статус создания перевозки false1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус создания перевозки false1": {
      "main": [
        [
          {
            "node": "Сохранение текста заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Уточнение по созданию перевозки1": {
      "main": [
        [
          {
            "node": "Статус создания перевозки false2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус создания перевозки false2": {
      "main": [
        [
          {
            "node": "Сохранение текста заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сохранение текста заявки": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          },
          {
            "node": "инлайн запрос?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка кнопок": {
      "main": [
        [
          {
            "node": "берем данные машин",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопка оповещения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "включены ли уведомления",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "тип создания",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "включены ли уведомления не взятия смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "включены ли уведомления не взятия смены": {
      "main": [
        [
          {
            "node": "отключить уведомления об опозданиях",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "включить уведомления об опозданиях",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инлайн запрос?": {
      "main": [
        [
          {
            "node": "статус?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нажатие на команду инлайна?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "карьеры1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "места": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "места1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "места1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "карьеры": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "карьеры1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получатели": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "получатели1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "материал": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "материал1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получатели1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "материал1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нажатие на команду инлайна?": {
      "main": [
        [
          {
            "node": "какой шаг?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "колбек?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 1 закончен": {
      "main": [
        [
          {
            "node": "задаём карьер",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 2 закончен": {
      "main": [
        [
          {
            "node": "задаём место доставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 3 закончен": {
      "main": [
        [
          {
            "node": "задаём получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём карьер": {
      "main": [
        [
          {
            "node": "обновляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём место доставки": {
      "main": [
        [
          {
            "node": "обновляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём получателя": {
      "main": [
        [
          {
            "node": "обновляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 4 закончен": {
      "main": [
        [
          {
            "node": "задаём материал",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём материал": {
      "main": [
        [
          {
            "node": "обновляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса": {
      "main": [
        [
          {
            "node": "действительно оповестить всех?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "оповестить по перевозке?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "оповестить по водителю?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление прошлого сообщения",
            "type": "main",
            "index": 0
          },
          {
            "node": "Уточнение по созданию перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Уточнение по созданию перевозки1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Удаление прошлого сообщения1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "статусы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели количество": {
      "main": [
        [
          {
            "node": "задаём вес",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём вес": {
      "main": [
        [
          {
            "node": "записываем вес",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем вес": {
      "main": [
        [
          {
            "node": "убираем кнопку назад4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число2": {
      "main": [
        [
          {
            "node": "вы ввели количество",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "колбек?": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка старта1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели комментарий": {
      "main": [
        [
          {
            "node": "задаём комментарий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём комментарий": {
      "main": [
        [
          {
            "node": "записываем комментарий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем комментарий": {
      "main": [
        [
          {
            "node": "убираем кнопку назад5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "авто1 компании",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто выбран": {
      "main": [
        [
          {
            "node": "добавляем авто в массив",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавляем авто в массив": {
      "main": [
        [
          {
            "node": "обновляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число1": {
      "main": [
        [
          {
            "node": "вы ввели ставку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели ставку1": {
      "main": [
        [
          {
            "node": "задаём ставку1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём ставку1": {
      "main": [
        [
          {
            "node": "записываем ставку1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем ставку1": {
      "main": [
        [
          {
            "node": "убираем кнопку назад5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число": {
      "main": [
        [
          {
            "node": "вы ввели доставку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели доставку": {
      "main": [
        [
          {
            "node": "задаём доставку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём доставку": {
      "main": [
        [
          {
            "node": "записываем доставку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число3": {
      "main": [
        [
          {
            "node": "вы ввели ставку за рейс",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели ставку за рейс": {
      "main": [
        [
          {
            "node": "задаём ставку1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1 компании": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Поиск": {
      "main": [
        [
          {
            "node": "карьеры",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "места",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получатели",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "материал",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем авто2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем авто3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удалим лишнее",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate7": {
      "main": [
        [
          {
            "node": "авто1 наёмные",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1 наёмные": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка": {
      "main": [
        [
          {
            "node": "корректно?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "корректно?": {
      "main": [
        [
          {
            "node": "вы ввели дату",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "неверная дата",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели дату": {
      "main": [
        [
          {
            "node": "задаём дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём дату": {
      "main": [
        [
          {
            "node": "записываем дату1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем дату1": {
      "main": [
        [
          {
            "node": "убираем кнопку назад5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статусы": {
      "main": [
        [
          {
            "node": "проверка на число2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вы ввели комментарий",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: вы ввели комментарий": {
      "main": [
        [
          {
            "node": "задаём комментарий1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём комментарий1": {
      "main": [
        [
          {
            "node": "записываем комментарий2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем комментарий2": {
      "main": [
        [
          {
            "node": "убираем кнопку назад6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса1": {
      "main": [
        [
          {
            "node": "obj: вы ввели комментарий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: объекты": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объекты": {
      "main": [
        [
          {
            "node": "Aggregate8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус?": {
      "main": [
        [
          {
            "node": "Поиск1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Поиск",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "объекты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate8": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate9": {
      "main": [
        [
          {
            "node": "авто1 компании1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1 компании1": {
      "main": [
        [
          {
            "node": "Aggregate8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Поиск1": {
      "main": [
        [
          {
            "node": "obj: объекты",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удалим лишнее1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate10": {
      "main": [
        [
          {
            "node": "авто1 наёмные1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1 наёмные1": {
      "main": [
        [
          {
            "node": "Aggregate8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "какой шаг?": {
      "main": [
        [
          {
            "node": "шаг 1 закончен",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 2 закончен",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 3 закончен",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 4 закончен",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "авто выбран",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "какой шаг?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: объект выбран": {
      "main": [
        [
          {
            "node": "задаём объект",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём объект": {
      "main": [
        [
          {
            "node": "обновляем2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: авто выбран": {
      "main": [
        [
          {
            "node": "добавляем авто в массив1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавляем авто в массив1": {
      "main": [
        [
          {
            "node": "обновляем2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "какой шаг?1": {
      "main": [
        [
          {
            "node": "obj: объект выбран",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj: авто выбран",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "берем данные машин": {
      "main": [
        [
          {
            "node": "проверка статусов и генерация единого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем авто": {
      "main": [
        [
          {
            "node": "авто компании1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто компании1": {
      "main": [
        [
          {
            "node": "Aggregate9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем авто1": {
      "main": [
        [
          {
            "node": "авто наёмные1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто наёмные1": {
      "main": [
        [
          {
            "node": "Aggregate10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем авто2": {
      "main": [
        [
          {
            "node": "авто компании",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто компании": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем авто3": {
      "main": [
        [
          {
            "node": "авто наёмные",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто наёмные": {
      "main": [
        [
          {
            "node": "Aggregate7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-10T08:58:49.299Z",
  "id": "ds7biG1x1j2A0bLl",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "logist",
  "nodes": [
    {
      "parameters": {
        "content": "## Блок сценария для логиста",
        "height": 862.4168334078684,
        "width": 1437.5425755046085
      },
      "id": "94dfcad1-12fe-4186-a930-c9da863cf854",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2240,
        360
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Здравствуй, дорогой логист, приступим к работе?",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Просмотреть свободные машины",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповещение",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Уведомления",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создание заявки на перевозку",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начали смену?",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "2590d965-28dc-4356-8025-3406ec42a8bf",
      "name": "Приветственное сообщений",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2360,
        553
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "={{ $('проверка статусов и генерация единого сообщения').item.json.combinedMessages }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b60d879f-5225-4fd6-b423-0f5441cb8f88",
      "name": "Вывод свободных машин",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        533
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод свободных машин",
        "height": 265.6502317011321,
        "width": 807.4624422818633,
        "color": 5
      },
      "id": "22e5c37b-5d95-43cc-bdfd-d477cf2c3302",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        480
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Выберите вариант оповещения водителей:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить всех",
                    "additionalFields": {
                      "callback_data": "logist_alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить по выбранному получателю",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить конкретный автомобиль",
                    "additionalFields": {
                      "callback_data": "logist_alert_auto"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "47dd44df-2d8d-417a-a5fe-2b85c610ac59",
      "name": "кнопка оповещения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3260,
        793
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "85a69bfe-0d62-4368-952d-0bd7fca519f8",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        460,
        2540
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "logist_alert_text": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "6af60b27-6af8-4de8-8808-e22ce99117ba",
      "name": "сохраним текст логиста",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5340,
        1000
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить всех водителей по выбранному получателю?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "1450a03c-1770-4300-98fd-87ba05cc8858",
      "name": "оповестить по перевозке?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4860,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Сокращения\nAT - alert transportation - оповещение по получателю\nCT - Choise Transportation - оповещение по конкретному авто\nAA - Alert Auto - оповещение по конкретному авто",
        "width": 385.0592683521705,
        "color": 4
      },
      "id": "c46dfad1-e3de-4627-90ea-6689399ab70c",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}",
        "text": "Введите текст сообщения для всех водителей:",
        "additionalFields": {}
      },
      "id": "63eadf49-215f-46dd-9fdf-6f4ffb971356",
      "name": "убираем кнопку назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5080,
        800
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}",
        "text": "=Вы выбрали получателя <b>{{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}</b>. Введите текст сообщения для водителей:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "7cc27774-03f1-45c2-84a6-6fdec1e83215",
      "name": "убираем кнопку назад1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5080,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить всех водителей?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e258a2e8-57c5-4aad-9367-28d767cfeb54",
      "name": "действительно оповестить всех?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4860,
        800
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить водителя?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "91823a01-440f-463b-8f41-6653ebce6e54",
      "name": "оповестить по водителю?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4860,
        1220
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}"
      },
      "id": "cab7451c-507f-4de6-b305-ce3485fd6bb0",
      "name": "убираем кнопку назад2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5080,
        1220
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "let combinedMessagesFree = \"\";\nlet combinedMessagesNoDriver = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n  const driver = data.driver_id ? data.driver_id[1] : null;\n  const number_car = data.number_car;\n  const status = data.status;\n\n  if (driver && status === \"Нет груза\") {\n    if (!combinedMessagesFree) {\n      combinedMessagesFree = \"Сейчас свободны следующие автомобили:\\n\\n\";\n    }\n    combinedMessagesFree += `<b>${number_car}, ${driver}</b>\\n`;\n  } else if (!driver && status === \"Нет водителя\") {\n    if (!combinedMessagesNoDriver) {\n      combinedMessagesNoDriver = \"Текущие автомобили без водителя:\\n\\n\";\n    }\n    combinedMessagesNoDriver += `<b>${number_car}</b>\\n`;\n  }\n}\n\nlet finalMessage = (combinedMessagesFree + \"\\n\" + combinedMessagesNoDriver).trim();\n\nif (!finalMessage) {\n  finalMessage = \"На данный момент нет свободных автомобилей и автомобилей без водителей\";\n}\n\nreturn [{ json: { combinedMessages: finalMessage } }];\n"
      },
      "id": "80c75e1c-734f-4721-a91b-c23e3862bc10",
      "name": "проверка статусов и генерация единого сообщения",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2960,
        533
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Уведомления о начале рейсов водителями в данный момент отключены.\nЖелаете их включить?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Включить",
                    "additionalFields": {
                      "callback_data": "notifications_on"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_notifications"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "00054cf0-1066-4242-ad02-c7e39b0bcdf0",
      "name": "включить уведомления о рейсах",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4360,
        713
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f99fda3c-ab71-44a1-8dc4-3e20c4cae590",
              "leftValue": "={{ $json.logist_notifications }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "589cf4fd-efb7-486a-88cf-0c88fa664e18",
      "name": "включены ли уведомления",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        653
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Уведомления о начале рейсов водителями в данный момент включены.\nЖелаете их выключить?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выключить",
                    "additionalFields": {
                      "callback_data": "notifications_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_notifications"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ebae1c14-84be-4872-844b-3f1ec440f07d",
      "name": "отключить уведомления о рейсах",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4360,
        533
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Проверка текущего статуса в постгрес: включены уведомления или нет. Вывод соответствующего сообщения",
        "height": 511.31898124328325,
        "width": 564.9288230278254
      },
      "id": "b488e4c0-22db-4dc7-bc51-19197f90a3ae",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4020,
        440
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ \"/start\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "07ce51f6-5d39-4e99-9486-e0d3cd2cc742",
      "name": "Проверка старта1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2240,
        953
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.from.id }}",
        "text": "Вы подтверждаете заявку?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "send_to_dispetcher"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Изменить",
                    "additionalFields": {
                      "callback_data": "pattern_delete_user_message"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9be42c36-1e4d-4c0d-9b02-4bde245b9417",
      "name": "Уточнение по созданию перевозки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5000,
        1540
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ef2ea681-e05b-4ea6-8d42-98ee65e035eb",
      "name": "Статус создания перевозки false1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5260,
        1540
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.from.id }}",
        "text": "Вы подтверждаете заявку?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "send_to_dispetcher"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Изменить",
                    "additionalFields": {
                      "callback_data": "no_pattern_delete_user_message"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d20e21f2-aa2a-442c-9d6d-0deac032c6f0",
      "name": "Уточнение по созданию перевозки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5020,
        1980
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "23e3d395-8734-4ff4-8751-1e5b8ee22ff6",
      "name": "Статус создания перевозки false2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5280,
        1980
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.message.from.id }}",
        "messageId": "={{ $json.message.message_id-1 }}"
      },
      "id": "ae9384f1-2873-4828-babd-8500d5f33057",
      "name": "Удаление прошлого сообщения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5040,
        2180
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Отправка/изменение текста перевозки по шаблону",
        "height": 397.48232415398485,
        "width": 867.4090832936757
      },
      "id": "336847b9-272b-4240-9c53-c718a9cf72fa",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4980,
        1460
      ]
    },
    {
      "parameters": {
        "content": "## Отправка/изменение текста перевозки без шаблона",
        "height": 397.48232415398485,
        "width": 867.4090832936757
      },
      "id": "17284f8a-e14e-4f15-85ac-1c7bdfaa2024",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.tg_id }}",
            "creating_transportation": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "dd453114-3e85-43fd-84f9-d3d243324c23",
      "name": "Сохранение текста заявки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5480,
        1540
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.tg_id }}",
            "creating_transportation": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e2d5fcfb-921e-4d0f-bd18-1f462ee52ef6",
      "name": "Сохранение текста заявки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5500,
        1980
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.message.from.id }}",
        "messageId": "={{ $json.message.message_id-1 }}"
      },
      "id": "a9563b73-5c58-46d8-a901-d3c6b48d74d8",
      "name": "Удаление прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5020,
        1740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "id": "65fb5b48-7e4e-420d-b07d-1915bd1f6bd3",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        100,
        2380
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}",
        "text": "=Шаблон для перевозки:\nНомера машин;\nМатериал, количество ед.измерения;\nОт - До, Компания-получатель;\nКомментарий\n\n\nКомментарии к шаблону:\nНомера машин перечисляются через запятую без пробела. Материал, От, До и Компанию-получателя необходимо указывать, так как они указаны в Odoo в именительном падеже. Комментарий не может занимать несколько строк. Единицы измерения указываются как т и м3. Комментарий может быть не указан.",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "7988f125-bea0-4705-80e8-cd7cf664192f",
      "name": "убираем кнопку назад3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5680,
        1540
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.from.id }}",
        "text": "Выберите способ создания:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Без шаблона",
                    "additionalFields": {
                      "callback_data": "no_template"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "По шаблону",
                    "additionalFields": {
                      "callback_data": "by_template"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать работу на объекте",
                    "additionalFields": {
                      "callback_data": "start_creating_obj_template"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "eb052773-0f89-4150-83d3-18602cecff1a",
      "name": "тип создания",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3080,
        1033
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Просмотреть свободные машины",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "34002e05-61b0-40d3-884d-45ed94368732",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Оповещение",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "affa57f2-e467-4364-acd1-0958890ca867",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Уведомления",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a8333af1-46a5-41d3-858f-fbbe3be1dd4c",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Создание заявки на перевозку",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8a9a1031-99f7-4833-9c5e-c429630ae4d2",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Начали смену?",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b883ca09-3d07-4bf4-b243-cd1bb6f48ea3",
      "name": "Проверка кнопок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2480,
        973
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f99fda3c-ab71-44a1-8dc4-3e20c4cae590",
              "leftValue": "={{ $json.no_taking_shift_logist_notify }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d012b43b-ba90-45a0-9a57-e39039137d45",
      "name": "включены ли уведомления не взятия смены",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3500,
        1313
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Уведомления об опоздании в данный момент включены.\nЖелаете их выключить?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выключить",
                    "additionalFields": {
                      "callback_data": "no_taking_notifications_off"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_notifications"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9b691c83-ed30-4dee-9639-5d99d01d0156",
      "name": "отключить уведомления об опозданиях",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3780,
        1240
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Уведомления об опоздании в данный момент отключены.\nЖелаете их включить?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Включить",
                    "additionalFields": {
                      "callback_data": "no_taking_notifications_on"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_notifications"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e1308e95-86fd-42a6-bdde-0edcc8b24c7e",
      "name": "включить уведомления об опозданиях",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3780,
        1400
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Статус уведомлений об опоздании",
        "height": 314.53101950616116,
        "width": 536.3608593268845,
        "color": 6
      },
      "id": "be6742a6-5ee8-4574-814d-04f0336d60b7",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3440,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "81e7f051-76ab-4844-9731-46801fe35bbd",
              "leftValue": "={{ $json.inline_query.query }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "18f55789-39d3-49e7-bf24-f3c28969ad41",
      "name": "инлайн запрос?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        860,
        2240
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "operation": "answerInlineQuery",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.inline_query.id }}",
        "results": "={{ $json.data[0].isEmpty() ? null : $json.data }}",
        "additionalFields": {}
      },
      "id": "8485151c-0b4c-4e66-80d2-7c54db6d9d2d",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3780,
        2180
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "10d0b5cb-d419-475b-8a9e-d4a6d9df8f4c",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3620,
        2180
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "name"
            }
          ]
        },
        "options": {}
      },
      "id": "bbbd68e7-a5e7-4569-914c-301f88efb8d3",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2960,
        1820
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "operation": "answerInlineQuery",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.inline_query.id }}",
        "results": "={{ null }}",
        "additionalFields": {}
      },
      "id": "247b9794-aaea-4814-9138-5582926ba4af",
      "name": "удалим лишнее",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2380,
        2560
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.place",
        "operation": "getAll",
        "returnAll": true,
        "options": {}
      },
      "id": "0ba36151-9a7c-46b7-ac1b-8bfa6d7d42f5",
      "name": "места",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2740,
        2000
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "name"
            }
          ]
        },
        "options": {}
      },
      "id": "04e3f826-c15e-4346-88d9-fce6962e1e1c",
      "name": "Aggregate3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2960,
        2000
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"места доставки\".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "ee163a07-26d3-4f60-aa05-b0f0460cdd58",
      "name": "места1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3180,
        2000
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=quarry.quarry",
        "operation": "getAll",
        "returnAll": true,
        "options": {}
      },
      "id": "7eed5ff2-53c0-424c-bd0e-e729eebfd3a5",
      "name": "карьеры",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2740,
        1820
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const careers = $('Aggregate1').all()[0].json.name;\n\n// Получаем текст запроса от пользователя\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"карьер\".length).trim() || \"\"; // Измените \"получатель\" на нужную команду, если требуется\n\n// Фильтруем карьеры на основе введенного текста\nconst filteredCareers = careers.filter(career => career.toLowerCase().includes(query.toLowerCase()));\n\n// Возвращаем отфильтрованные результаты\nreturn filteredCareers.map((career, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: career,\n  input_message_content: {\n    message_text: `${career}`\n  }\n}));"
      },
      "id": "3ca81a9b-ff60-4a87-9263-0bf526a694eb",
      "name": "карьеры1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3160,
        1820
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.rates",
        "operation": "getAll",
        "returnAll": true,
        "options": {}
      },
      "id": "b1dec146-014b-49dc-ae97-0d582adc3ae6",
      "name": "получатели",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2740,
        2180
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "company[1]",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "19e0795c-6d2b-4611-bbfb-2b6ac017043e",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3180,
        2180
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "company[1]",
        "options": {}
      },
      "id": "8d5866e9-33fc-4aa9-b1a8-00614dd2ac0e",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        2960,
        2180
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.material",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "quarry",
              "value": "={{ $json.logist_template['quarry.quarry'] }}"
            }
          ]
        }
      },
      "id": "0c2f4c17-273b-4d4a-96d6-5fee1a17a072",
      "name": "материал",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2740,
        2360
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "material_name",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "3ff1edaa-ec60-4623-8f4e-a086cb596afb",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2960,
        2360
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"получатель\".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "80b1e0ef-63dc-4607-bb54-c0d55670110b",
      "name": "получатели1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        2180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"материал\".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "ff95916d-1c82-44cc-befa-943a35e5b28f",
      "name": "материал1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3180,
        2360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Поиск и вывод айтемов в поле ввода\n",
        "height": 909.4678257134915,
        "width": 1623.6329090095232,
        "color": 6
      },
      "id": "769b0b58-148c-40ed-80dc-c1115406bc28",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2440,
        1760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b039a98c-ffba-4f82-9df1-06938ce12b91",
              "leftValue": "={{ $json.message.via_bot }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "06707c50-44bb-41cb-bf47-33b49fbcafe8",
      "name": "нажатие на команду инлайна?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1120,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали карьер <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_2"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_1"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d1b9b920-1539-486e-a0a4-4c0b39c0fa29",
      "name": "шаг 1 закончен",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3649,
        2780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали место доставки <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_3"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_2"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "11d59325-5c28-4043-a072-f49274a02284",
      "name": "шаг 2 закончен",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3649,
        2940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали получателя <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_4"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_3"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "99948413-570e-40fb-8911-471af0b151df",
      "name": "шаг 3 закончен",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3649,
        3100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['quarry.quarry'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "e7604aec-4ae1-4d7e-879d-ecbc60c5773b",
      "name": "задаём карьер",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3829,
        2780
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "logist_template": "={{ $json.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "26caeb96-9bf9-4dbe-aeee-343f0150814e",
      "name": "обновляем",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4049,
        3040
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['transportation.place'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "8aae2e78-866f-40cf-a011-3e0e7ee19d01",
      "name": "задаём место доставки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3829,
        2940
      ]
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['transportation.rates'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "6dc111e4-b793-4ca8-a96d-2db0fbe137cb",
      "name": "задаём получателя",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3829,
        3100
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали материал <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_5"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_4"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "485e9129-3f25-459d-82f9-b4a2c101165e",
      "name": "шаг 4 закончен",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3649,
        3280
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['transportation.material'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "feec4dec-d631-444d-8cae-dfede78fb7be",
      "name": "задаём материал",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3829,
        3280
      ]
    },
    {
      "parameters": {
        "content": "## Сообщения после выбора\n",
        "height": 865.1767476573134,
        "width": 832.9855324326527,
        "color": 6
      },
      "id": "45f51124-2760-46f2-afd8-3069c9385ed6",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3400,
        2720
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "14da08f2-eaa2-4a05-a2ec-e02fa0ec245d",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "63789235-8337-4a36-b64f-d3c931980c3d",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b3c7c65c-b5fe-43c4-9622-2df61b85a34e",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "create_transportation_pattern",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "028a24cc-b3d7-4ba2-a04a-6e15ce920299",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "create_transportation_no_pattern",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "45198183-9d5b-4623-bc25-f6361681b553",
      "name": "проверка статуса",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4100,
        1680
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели количество материала {{ $json.logist_template['transportation.material'] }} - {{ $json.message.text }} {{ $json.logist_template.measure }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_4"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a0c6cbc3-7a64-44ab-bdf2-965304f97111",
      "name": "вы ввели количество",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5412.8895517861265,
        2716.381765210518
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['weight'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "ac0e7728-de11-4ee8-a32e-cf84250ead80",
      "name": "задаём вес",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5632.8895517861265,
        2716.381765210518
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "db3bafe1-16ec-461b-b97c-93267f733f59",
      "name": "записываем вес",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5832.8895517861265,
        2716.381765210518
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9a1eba82-8d29-4d6c-b6fa-bcd766b47195",
      "name": "проверка на число2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5232.8895517861265,
        2816.381765210518
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Число введено неверно, попробуйте снова",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "db6ae3f1-24e8-43c2-af4b-a920558af6fd",
      "name": "не число",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5520,
        3060
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id - 1 }}",
        "text": "=Введите количество материала в {{ $('Execute Workflow Trigger').item.json.logist_template.measure === \"м3\" ? \"м3\" : \"тоннах\"; }}:",
        "additionalFields": {}
      },
      "id": "4ff575e8-c6ca-4872-95d4-dd5f76829e62",
      "name": "убираем кнопку назад4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        6052.8895517861265,
        2716.381765210518
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод данных из текста\n",
        "height": 2008.6207918661214,
        "width": 1056.5464363336664,
        "color": 6
      },
      "id": "b68ea9c8-2fdd-4f4e-8929-09616861c0c0",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5180,
        2640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a18f2808-839a-41e7-a5b2-19427e4e6b30",
              "leftValue": "={{ $json.callback_query.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "41a7e225-fddf-4b98-8b6b-91bdbf03e648",
      "name": "колбек?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        780,
        2580
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели комментарий: <i>{{ $json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_input_cars"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ac934655-f694-4b74-9a99-99223bb8a319",
      "name": "вы ввели комментарий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5220,
        3420
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "f2ba45f6-09bb-47c3-9290-0e64c99ed570",
      "name": "задаём комментарий",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5720,
        3420
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "51b0c8b1-17bf-42fa-81f8-211d30f30295",
      "name": "записываем комментарий",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5920,
        3420
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "number_car",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "82c3dfac-30d2-40a5-bec3-b7f4ca4e95e2",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2960,
        2520
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали автомобиль <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто перевозчика",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к дате",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "cancel_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "48ce0d50-ab8f-4cac-8fd3-6fcc2c9036f5",
      "name": "авто выбран",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3640,
        3460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['cars'].push($('Execute Workflow Trigger').all()[0].json.message.text);\nreturn {\"data\": res};"
      },
      "id": "b7218409-6726-4462-ad8c-a4e6ba4f6d3c",
      "name": "добавляем авто в массив",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3840,
        3460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c8782b00-0196-4c79-a1c4-8533938be413",
      "name": "проверка на число1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5200,
        3800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели ставку за {{ $json.status == \"input_round_rate\" ? \"рейс\" : ($json.status == \"input_cost_per_cubic_metre\" ? \"кубометр\" : \"тонну\") }}: {{ $json.message.text  }} руб.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "={{ $('Execute Workflow Trigger').all()[0].json.status == \"input_cost_per_cubic_metre\" ? \"delivery_cost_per_cubic_metre\" : ($('Execute Workflow Trigger').item.json.status == \"input_cost_per_tonne\" ? \"delivery_cost_per_tonne\" : \"continue_to_comment\") }}"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "4c65c5bc-8cdf-4a4e-b964-a124c13f3aec",
      "name": "вы ввели ставку1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5500,
        3820
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\n\nvar status = $('Execute Workflow Trigger').all()[0].json.status;\nvar measure = \"\";\nconsole.log(status);\nif (status == \"input_round_rate\") {\n  measure = \"round_rate\";\n}\nif (status == \"input_cost_per_cubic_metre\") {\n  measure = \"cost_per_cubic_metre\";\n}\n if (status == \"input_cost_per_tonne\") {\n  measure = \"cost_per_tonne\";\n} \n\nres[measure] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "0a960cf1-96ea-4ebe-a5a9-59ebe2c8216f",
      "name": "задаём ставку1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5713,
        3816
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "23e058c0-c739-4f1e-bf58-03745ae26fb8",
      "name": "записываем ставку1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5913,
        3816
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.last_message_text.parseJson().result.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.last_message_text.parseJson().result.text }}",
        "additionalFields": {}
      },
      "id": "df49651d-ace1-4ce3-915f-dacf2a6bf715",
      "name": "убираем кнопку назад5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        6160,
        3820
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5f08c817-96fe-4480-b220-14ae9d711917",
      "name": "проверка на число",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5200,
        4000
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели стоимость доставки за {{ $json.status == \"delivery_cost_per_cubic_metre\" ? \"кубометр\" : \"тонну\" }}: {{ $json.message.text  }} руб.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к комментарию",
                    "additionalFields": {
                      "callback_data": "=continue_to_comment"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести другие ставки",
                    "additionalFields": {
                      "callback_data": "=inpute_rate"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ $('Execute Workflow Trigger').all()[0].json.status }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3471b682-68f2-48da-825e-506cf388c382",
      "name": "вы ввели доставку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5480,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\n\nvar status = $('Execute Workflow Trigger').all()[0].json.status;\nres[status] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "0642b0a7-2c00-490a-b1e7-8fcc4ba43b9d",
      "name": "задаём доставку",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5700,
        3980
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "55f808ad-1ac2-4c5a-a429-f9b1455ab1bc",
      "name": "записываем доставку",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5900,
        3980
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f81fe0a5-024c-4a5a-a5d1-be8ab2ee9b38",
      "name": "проверка на число3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5220,
        3600
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели ставку за {{ $json.status == \"input_round_rate\" ? \"рейс\" : ($json.status == \"input_cost_per_cubic_metre\" ? \"кубометр\" : \"тонну\") }}: {{ $json.message.text  }} руб.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к комментарию",
                    "additionalFields": {
                      "callback_data": "=continue_to_comment"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести ещё ставку",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a586c845-bb0b-4ffe-b9e0-a0b0fee71a66",
      "name": "вы ввели ставку за рейс",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5480,
        3640
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"авто компании \".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "74d23389-325e-4659-87be-3361e9fe7902",
      "name": "авто1 компании",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3180,
        2520
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "карьер",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ab6f88c3-5b83-4f9d-b8fa-483805cf2cfb",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "место доставки",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2ba6b180-3946-47fb-93e9-b2f53c267adb",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "получатель",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6f0ee47d-477e-42f8-aaf8-5fd903f603d3",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "материал",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d6f7530-66da-4583-9c8c-695f0b00ecf1",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "авто компании",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a5cdb4df-98fb-47d8-bd7d-94296144ff4f",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "авто перевозчиков",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "03a58c42-a119-4b05-bdd3-443664d430f7",
      "name": "Поиск",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2200,
        2080
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "number_car",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "920475c2-2494-41b9-a0a4-a78c6f3bb1e7",
      "name": "Aggregate7",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2960,
        2700
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"авто перевозчиков \".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "31053d1b-e0c6-4167-a0af-feb7ae78e215",
      "name": "авто1 наёмные",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3180,
        2700
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const isValidFullDate = (dateString) => {\n    const regex = /^(0[1-9]|[12][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(\\d{4})$/;\n    if (!regex.test(dateString)) return false;\n\n    const [day, month, year] = dateString.split('.').map(Number);\n    const date = new Date(year, month - 1, day);\n    \n    return date.getFullYear() === year && date.getMonth() === month - 1 && date.getDate() === day;\n};\n\nreturn {\"res\": isValidFullDate($('Execute Workflow Trigger').all()[0].json.message.text)}"
      },
      "id": "775e218b-bf22-40df-96bd-d581fb05dda1",
      "name": "проверка",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        4360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c7a4e683-cb95-468b-9a93-df03818cfb5c",
              "leftValue": "={{ $json.res }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a94933a8-8c35-4646-99de-6a1017d943de",
      "name": "корректно?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5460,
        4360
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дата введена неверно, попробуйте снова",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выбрать дату",
                    "additionalFields": {
                      "callback_data": "input_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "2fb1660e-9540-40c0-ab21-5e262a09a349",
      "name": "неверная дата",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5680,
        4500
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=Вы ввели дату: {{ $('Execute Workflow Trigger').all()[0].json.message.text; }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать перевозку",
                    "additionalFields": {
                      "callback_data": "=continue_to_check"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "input_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d6ec11a2-f889-4e89-9928-d7493aa8f9c2",
      "name": "вы ввели дату",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5600,
        4180
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres[\"date\"] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "4efa038f-3baf-4c11-a6c2-77a431c4b91a",
      "name": "задаём дату",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5820,
        4180
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1431d895-3961-4d84-a8c2-4a1872aeae5d",
      "name": "записываем дату1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        6020,
        4180
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "5_input_measure",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "58534dbe-402b-4cbc-becd-89ba8e28e142",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8b07fcd9-f31f-4e46-98c8-c5443041314d",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_round_rate",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1227a23b-51aa-48e3-81f8-56b8251d58d5",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_cost_per_cubic_metre",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "70b4000d-6325-4413-9070-5eb944510602",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_cost_per_tonne",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "07347ddf-b8a1-4521-8114-1e65b4e9f048",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "delivery_cost_per_cubic_metre",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5cc95ad7-2401-49d2-adb0-62a2605b7850",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "delivery_cost_per_tonne",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca77e853-90f5-4332-b587-ecaf11250c80",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_date",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "5e72997c-2e01-4398-9de7-5e0f0b1eb265",
      "name": "статусы",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4740,
        3940
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели комментарий: <i>{{ $json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_check"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3e207b59-f238-432b-b414-427cad768282",
      "name": "obj: вы ввели комментарий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5380,
        4900
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "2337f1db-aacd-47db-8b32-abff2d79cace",
      "name": "задаём комментарий1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5880,
        4900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b4e34046-cab3-436c-9f80-40f9073791a7",
      "name": "записываем комментарий2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        6080,
        4900
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.last_message_text.parseJson().result.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.last_message_text.parseJson().result.text }}",
        "additionalFields": {}
      },
      "id": "6b6684e0-77c4-415e-8b8a-4b029383f624",
      "name": "убираем кнопку назад6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        6320,
        5100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "obj_input_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "de27ad6d-1485-462b-adb8-0459750f6151",
      "name": "проверка статуса1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        5040,
        5100
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=quarry.quarry",
        "operation": "getAll",
        "returnAll": true,
        "options": {}
      },
      "id": "0e983e3a-101f-426e-9d93-d60181c7d67a",
      "name": "obj: объекты",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        400,
        240
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const careers = $('Aggregate2').all()[0].json.name;\n\nvar word = $('Execute Workflow Trigger').all()[0].json.inline_query.query;\n\n// Получаем текст запроса от пользователя\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(word.length).trim() || \"\"; // Измените \"получатель\" на нужную команду, если требуется\n\n// Фильтруем карьеры на основе введенного текста\nconst filteredCareers = careers.filter(career => career.toLowerCase().includes(query.toLowerCase()));\n\n// Возвращаем отфильтрованные результаты\nreturn filteredCareers.map((career, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: career,\n  input_message_content: {\n    message_text: `${career}`\n  }\n}));"
      },
      "id": "2d5ab903-356b-4f70-83b9-50302f22a066",
      "name": "объекты",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "obj",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "ff05c346-8970-4123-9195-e6ac9b6d5d1d",
      "name": "статус?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -300,
        1060
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "operation": "answerInlineQuery",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.inline_query.id }}",
        "results": "={{ null }}",
        "additionalFields": {}
      },
      "id": "819aaa05-db8d-42f1-8c5d-c8de01e66e80",
      "name": "удалим лишнее1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        280,
        880
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "name"
            }
          ]
        },
        "options": {}
      },
      "id": "bb4cacac-09bb-4537-8140-b190932bc4ab",
      "name": "Aggregate2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        580,
        240
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "1c7ce6b0-a8ac-4aff-8d2d-a959fe690484",
      "name": "Aggregate8",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        980,
        420
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "operation": "answerInlineQuery",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.inline_query.id }}",
        "results": "={{ $json.data[0].isEmpty() ? null : $json.data }}",
        "additionalFields": {}
      },
      "id": "f492bae8-fdf1-48da-8921-12ee0ef59d62",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1140,
        420
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "number_car",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "0ed9881f-3838-42fe-845d-5d36a5bda2bc",
      "name": "Aggregate9",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        580,
        420
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"авто компании \".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "4552dc96-39db-4c87-b5fd-f5aca5d069b6",
      "name": "авто1 компании1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        420
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "объект",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22929fe6-b7c0-45c5-94a1-089188604afb",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "авто компании",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6bc29361-edf3-4e34-b507-8d6007394dcf",
                    "leftValue": "={{ $json.inline_query.query.toLowerCase() }}",
                    "rightValue": "авто перевозчиков",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "ebdfc725-24e9-4496-9c16-ae265ddb9cc0",
      "name": "Поиск1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        60,
        480
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "number_car",
              "renameField": true,
              "outputFieldName": "name"
            }
          ]
        },
        "options": {
          "keepMissing": false
        }
      },
      "id": "48777074-c087-4812-930f-20fad230971c",
      "name": "Aggregate10",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        620,
        620
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all()[0].json.name;\n\nconst query = $('Execute Workflow Trigger').all()[0].json.inline_query.query.substring(\"авто перевозчиков \".length).trim() || \"\";\n\nconst filteredItems = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));\n\nreturn filteredItems.map((item, index) => ({\n  type: 'article',\n  id: index.toString(),\n  title: item,\n  input_message_content: {\n    message_text: `${item}`\n  }\n}));"
      },
      "id": "2ca726e8-9365-4699-995a-965f2be9cd3c",
      "name": "авто1 наёмные1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        620
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "1_input_from",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9be4e1e4-5579-4c60-aeea-afedabb3cdda",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "=2_input_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f87ad75a-47ef-4de8-a9d3-516dcd1c7fb3",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "3_input_partner",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2cfaa949-920d-46a2-81fc-88a24d15fc5b",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "4_input_material",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c8e2e69d-f02a-4498-a503-8796cda11b2a",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "d768b52c-27bd-4f40-8447-05418d1a8a85",
      "name": "какой шаг?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3409,
        3060
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали объект: <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "obj_input_cars"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "start_creating_obj_template"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3a14a913-33a5-4e35-a19a-76bf7e382a63",
      "name": "obj: объект выбран",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3780,
        3680
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['quarry.quarry'] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "7be9579b-72c5-44d8-a99c-5db4ac68b92b",
      "name": "задаём объект",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        3680
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы выбрали автомобиль <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто перевозчика",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к комментарию",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_comment"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "obj_cancel_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3aecc1f2-5e93-4c71-8bbf-c744d758b59a",
      "name": "obj: авто выбран",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3780,
        3900
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "logist_template": "={{ $json.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e3796952-bb83-4e00-8a39-1a5f910cff0f",
      "name": "обновляем2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4160,
        3680
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['cars'].push($('Execute Workflow Trigger').all()[0].json.message.text);\nreturn {\"data\": res};"
      },
      "id": "b890327c-1d1d-465d-8b2c-149171f71561",
      "name": "добавляем авто в массив1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3980,
        3900
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "obj_input_object",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9b465b48-80f8-4c80-8f88-913095dd701f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "obj_input_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "7dc17677-1e8e-480c-b233-fb20f1e61ac6",
      "name": "какой шаг?1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3600,
        3880
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b2fce16e-21de-4f40-ab46-7429d77a583e",
      "name": "берем данные машин",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        560
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "FQ3Oo6qdUEnGnzGK",
          "mode": "id"
        },
        "options": {}
      },
      "id": "bbace04e-297b-4b08-844a-bc8ae159e963",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        1140,
        2520
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "821c2b74-d28b-4151-b580-32ef10dae13b",
      "name": "получаем авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e4607808-737e-4609-8ffd-59e325bb60e4",
      "name": "авто компании1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        440,
        420
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a4ef226c-45c5-4d4a-8267-64248a5778d4",
      "name": "получаем авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "799915ca-fe6d-4e9e-817e-afa73260c020",
      "name": "авто наёмные1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        440,
        620
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1ce6801f-6e51-4deb-9a7b-c05520af8a90",
      "name": "получаем авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        2520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "df241534-69fe-4778-b5e2-b6387a01d6f8",
      "name": "авто компании",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2820,
        2520
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "147d8f30-2317-4a4c-8a94-834b7fa88a3d",
      "name": "получаем авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        2700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "abf641f0-ddfe-40ca-b78a-45ccecbfac48",
      "name": "авто наёмные",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2820,
        2700
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100640898,
          "inline_query": {
            "id": "2782501070347729483",
            "from": {
              "id": 7090302459,
              "is_bot": false,
              "first_name": "Al",
              "last_name": "Go",
              "language_code": "ru"
            },
            "chat_type": "sender",
            "query": "Авто компании 1",
            "offset": ""
          },
          "tg_id": "7090302459",
          "odoo_id": 19,
          "status": "obj_input_cars",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": 634,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 40,
          "fuel_liters": null,
          "weight_measure": "2 м3 ",
          "logist_alert_text": "123",
          "logist_recipient_name": "1",
          "transportation_for_certificate": null,
          "count_weight_photo": null,
          "count_weight_photo_sent": null,
          "current_quarry_hours": 10,
          "end_round_message_id": 29716,
          "last_message_text": "{\"ok\":true,\"result\":{\"message_id\":32542,\"from\":{\"id\":7063451965,\"is_bot\":true,\"first_name\":\"Everest n8n\",\"username\":\"myn8nbotbot\"},\"chat\":{\"id\":7090302459,\"first_name\":\"Al\",\"last_name\":\"Go\",\"type\":\"private\"},\"date\":1733735220,\"text\":\"Введите комментарий:\",\"reply_markup\":{\"inline_keyboard\":[[{\"text\":\"Пропустить комментарий\",\"callback_data\":\"skip_comment\"}]]}}}",
          "logist_notifications": false,
          "creating_transportation": "459;\nПесок, 100м3;\nКарьер Ключевое - Карьер Ключевое, компания_тест;",
          "round_active_msg_id": null,
          "no_taking_shift_logist_notify": true,
          "logist_template": {
            "quarry.quarry": "Карьер Ключевое",
            "comment": "",
            "cars": []
          },
          "current_maintenance": null,
          "expected_time_maintenance": null,
          "assigned_locksmiths": null,
          "mechanic_template": null,
          "cookie": "session_id=c796331e350e13d96dba76a8f0c8d688e27f098f; Expires=Wed, 10 Dec 2025 02:05:11 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:03:49.624Z",
      "updatedAt": "2024-08-26T14:03:49.624Z",
      "id": "sYBV4z8jwrWgz2Cc",
      "name": "aleksey"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-12-10T09:07:10.528Z",
  "versionId": "c9051bc9-fda5-43b6-9ac0-ccf77ebafc2a"
}