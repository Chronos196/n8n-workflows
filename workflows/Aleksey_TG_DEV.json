{
  "active": true,
  "connections": {
    "добавляет пользователя, если не существует": {
      "main": [
        [
          {
            "node": "получаем первый статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли статус": {
      "main": [
        [
          {
            "node": "актуальный статус",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем первый статус": {
      "main": [
        [
          {
            "node": "есть ли статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус": {
      "main": [
        [
          {
            "node": "получаем первый статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный статус": {
      "main": [
        [
          {
            "node": "проверка статуса авторизации1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус1": {
      "main": [
        [
          {
            "node": "отправляем кнопку контакта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка нажатия кнопки контакта": {
      "main": [
        [
          {
            "node": "номер телефона",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не ввели контакт",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id по mobile_phone": {
      "main": [
        [
          {
            "node": "проверяем наличие",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем наличие": {
      "main": [
        [
          {
            "node": "меняем статус на \"авторизован\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "пишем, что номера нет",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка типа входных данных": {
      "main": [
        [
          {
            "node": "Проверка медиа",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "воркфлоу ВОДИТЕЛЬ_ИНЛАЙН",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус на \"авторизован\"": {
      "main": [
        [
          {
            "node": "проверка роли после авторизации",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер телефона": {
      "main": [
        [
          {
            "node": "получаем id по mobile_phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авторизация": {
      "main": [
        [
          {
            "node": "добавляет пользователя, если не существует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса авторизации1": {
      "main": [
        [
          {
            "node": "меняем статус1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка нажатия кнопки контакта",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем роль",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеиваем данные": {
      "main": [
        [
          {
            "node": "ветки для ролей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка медиа": {
      "main": [
        [
          {
            "node": "воркфлоу ВОДИТЕЛЬ МЕДИА",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "воркфлоу ВОДИТЕЛЬ_РЕПЛАЙ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "дата через неделю1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через неделю1": {
      "main": [
        [
          {
            "node": "документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем1": {
      "main": [
        [
          {
            "node": "склеиваем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "округляем1": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разница в днях1": {
      "main": [
        [
          {
            "node": "округляем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем доки+дата с разницей во времени1": {
      "main": [
        [
          {
            "node": "склоняем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеиваем1": {
      "main": [
        [
          {
            "node": "объединяем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем1": {
      "main": [
        [
          {
            "node": "поиск механиков4",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск диспетчера1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителя1": {
      "main": [
        [
          {
            "node": "пересылаем, чтобы получить текст прошлого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим карточки очереди1": {
      "main": [
        [
          {
            "node": "авторизация1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сегодняшняя дата2": {
      "main": [
        [
          {
            "node": "если не пустой2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не пустой2": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "сегодняшняя дата1": {
      "main": [
        [
          {
            "node": "если не пустой1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не пустой1": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger1": {
      "main": [
        [
          {
            "node": "авторизация",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди диспетчеров+механиков": {
      "main": [
        [
          {
            "node": "отправка сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди последнего сообщения": {
      "main": [
        [
          {
            "node": "Убираем кнопки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пересылаем, чтобы получить текст прошлого сообщения": {
      "main": [
        [
          {
            "node": "удаляем прошлое",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "айди водителя1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работа первая?": {
      "main": [
        [
          {
            "node": "работы в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первое=работа в карьере": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "уже начатая перевозка": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "не начатая перевозка": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Убираем кнопки": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое": {
      "main": [
        [
          {
            "node": "работа первая?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем тг1": {
      "main": [
        [
          {
            "node": "Вывод статуса карточки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "только готовые уведомляем": {
      "main": [
        [
          {
            "node": "водитель текущего авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка роли после авторизации": {
      "main": [
        [
          {
            "node": "логист",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "механик",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "диспетчер",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "наёмник",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет роли",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителя": {
      "main": [
        [
          {
            "node": "текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст": {
      "main": [
        [
          {
            "node": "отправка уведомления",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем роль": {
      "main": [
        [
          {
            "node": "склеиваем данные",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные перевозок2": {
      "main": [
        [
          {
            "node": "сегодняшняя дата2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные перевозки": {
      "main": [
        [
          {
            "node": "разделяем рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы": {
      "main": [
        [
          {
            "node": "рейсы определённого авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы определённого авто": {
      "main": [
        [
          {
            "node": "всего рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первый рейс выполняется?": {
      "main": [
        [
          {
            "node": "без кнопок",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "один рейс?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "всего рейсов": {
      "main": [
        [
          {
            "node": "первый рейс выполняется?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "один рейс?": {
      "main": [
        [
          {
            "node": "не начатая перевозка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "уже начатая перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные работ": {
      "main": [
        [
          {
            "node": "сегодняшняя дата1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть выполняющиеся?": {
      "main": [
        [
          {
            "node": "карьер без кнопок",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "первое=работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "всего рейсов1": {
      "main": [
        [
          {
            "node": "есть выполняющиеся?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ветки для ролей": {
      "main": [
        [
          {
            "node": "воркфлоу ЛОГИСТ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "воркфлоу МЕХАНИК",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка типа входных данных",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "воркфлоу ДИСПЕТЧЕР",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка типа входных данных",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "воркфлоу СЛЕСАРЬ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет роли",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не равно нулю": {
      "main": [
        [
          {
            "node": "группируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "группируем": {
      "main": [
        [
          {
            "node": "данные водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "отправим сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "итоговое кол-во": {
      "main": [
        [
          {
            "node": "если не равно нулю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные водителя": {
      "main": [
        [
          {
            "node": "очередь поменялась?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "очередь поменялась?": {
      "main": [
        [
          {
            "node": "сохраним текст",
            "type": "main",
            "index": 0
          },
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "график на завтра": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работы на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "работы": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "работы на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "итоговое кол-во",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          },
          {
            "node": "работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "авто с завершённой сменой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "смена статуса заявки": {
      "main": [
        [
          {
            "node": "только готовые уведомляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель текущего авто": {
      "main": [
        [
          {
            "node": "Получаем тг1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком1": {
      "main": [
        [
          {
            "node": "разница в днях1",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки+дата с разницей во времени1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "айди диспетчеров+механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков4": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск диспетчера1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "данные карточек1": {
      "main": [
        [
          {
            "node": "данные перевозок2",
            "type": "main",
            "index": 0
          },
          {
            "node": "данные работ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авторизация1": {
      "main": [
        [
          {
            "node": "данные карточек1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "поиск текущего авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто1": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1 dev1": {
      "main": [
        [
          {
            "node": "получим карточки очереди1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "только выполняющиеся": {
      "main": [
        [
          {
            "node": "всего рейсов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работа в карьере": {
      "main": [
        [
          {
            "node": "только выполняющиеся",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "изменение данных в перевозке": {
      "main": [
        [
          {
            "node": "авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работы в карьере": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто": {
      "main": [
        [
          {
            "node": "айди водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "история взятия": {
      "main": [
        [
          {
            "node": "график на завтра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто с завершённой сменой": {
      "main": [
        [
          {
            "node": "история взятия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-30T12:51:51.781Z",
  "id": "wOHDv2zflbcV6KhB",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Aleksey_TG_DEV",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO tg_users (tg_id) VALUES ($1) ON CONFLICT (tg_id) DO NOTHING;",
        "options": {
          "queryReplacement": "={{ \n  $('Telegram Trigger1').item.json.message?.from.id !== undefined \n  ? $('Telegram Trigger1').item.json.message.from.id \n  : $('Telegram Trigger1').item.json.callback_query.from.id \n}}"
        }
      },
      "id": "ea7daceb-a4f2-4b70-b07f-e18c0fd7e105",
      "name": "добавляет пользователя, если не существует",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2380,
        1480
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3f1dd178-652c-4e81-8cb6-91df77dfe097",
              "leftValue": "={{ $json.status }}",
              "rightValue": "unauthorized",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fe0b080a-d70a-492c-86b0-a03d1a3bc008",
      "name": "есть ли статус",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1980,
        1480
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ \n  $('Telegram Trigger1').item.json.message?.from.id !== undefined \n  ? $('Telegram Trigger1').item.json.message.from.id \n  : $('Telegram Trigger1').item.json.callback_query.from.id \n}}"
            }
          ]
        },
        "options": {}
      },
      "id": "251ba341-d4f5-4285-b202-ac674a9b831c",
      "name": "получаем первый статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2180,
        1480
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('есть ли статус').item.json.tg_id }}",
            "status": "unauthorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "ecde015e-79c2-4441-be1a-8ba7288e5161",
      "name": "меняем статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1780,
        1600
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ \n  $('Telegram Trigger1').item.json.message?.from.id !== undefined \n  ? $('Telegram Trigger1').item.json.message.from.id \n  : $('Telegram Trigger1').item.json.callback_query.from.id \n}}"
            }
          ]
        },
        "options": {}
      },
      "id": "75d4ab3b-6257-41c8-868b-5857df5604a1",
      "name": "актуальный статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1540,
        1460
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.tg_id }}",
            "status": "input_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b75f99ff-8de5-4bbf-a290-7c924366cd41",
      "name": "меняем статус1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -880,
        600
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "Чтобы войти, поделитесь контактом",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Поделиться контактом",
                    "additionalFields": {
                      "request_contact": true
                    }
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "6805ce42-b136-4ded-ae1b-be4a1c325ad4",
      "name": "отправляем кнопку контакта",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -620,
        600
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d79f0bd-02e2-413a-b219-bfc80a34c855",
              "leftValue": "={{ $('Telegram Trigger1').item.json.message.contact.phone_number }}",
              "rightValue": "Вы не нажали кнопку \"поделиться контактом\"",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c7c1bc74-4fdd-4696-88f0-847751cd343d",
      "name": "проверка нажатия кнопки контакта",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -875,
        800
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "mobile_phone",
              "value": "={{  $json.str.startsWith('+') ? $json.str : '+' + $json.str; }}"
            }
          ]
        }
      },
      "id": "386559bd-939b-41c1-9ef6-102b20f62a3a",
      "name": "получаем id по mobile_phone",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -455,
        800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "9b905cb5-83c4-4cdb-b1df-7e7f94e2a734",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "341a2e98-53cf-409f-922c-e8994d25031b",
      "name": "проверяем наличие",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -275,
        800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "Такого сотрудника ещё нет в Odoo.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "5b8b856c-d49a-4354-8500-7d64425b66f9",
      "name": "пишем, что номера нет",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -35,
        920
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('актуальный статус').item.json.tg_id }}",
            "odoo_id": "={{ $('проверяем наличие').item.json.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "771b99fd-e250-4a7c-8a34-9ee5ee9d51e1",
      "name": "меняем статус на \"авторизован\"",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -20,
        700
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "content": "## Блок авторизации\n",
        "height": 683.4771536589792,
        "width": 1591.8393730343007,
        "color": 6
      },
      "id": "ef07710b-7582-4302-92ce-9b74c8e0c86e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -920,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "11c45e0d-196b-47f1-821e-bee57c9f070b",
              "leftValue": "={{ $('Telegram Trigger1').item.json.hasField(\"message\") }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7d80da61-f60a-4e67-b080-349d3b90d13e",
      "name": "Проверка типа входных данных",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        480,
        1820
      ]
    },
    {
      "parameters": {
        "content": "## Проверка ролей\n",
        "height": 309.07650486512966,
        "width": 727.3089586054689,
        "color": 6
      },
      "id": "198f96cc-0400-47f3-b723-bfdff3f6c37e",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        1560
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Вы авторизовались как логист, <b>{{ $('получаем id по mobile_phone').item.json.name }}</b>",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Просмотреть свободные машины",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповещение",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Уведомления",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e18942f3-42ed-44de-bc43-7c5ddd0bce65",
      "name": "логист",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        400
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Вы авторизовались как водитель, <b>{{ $('получаем id по mobile_phone').item.json.name }}</b>",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Срочно",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Моя статистика",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заявки по авто",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Мой график",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d493a6e0-889f-4c88-9034-3762ffcb8c3e",
      "name": "водитель",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        540,
        600
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Вы авторизовались как механик, <b>{{ $('получаем id по mobile_phone').item.json.name }}</b>",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Клавиатура механика",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "07c334f3-a188-4df6-9240-d075caceed50",
      "name": "механик",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        640,
        460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Добавление записи в бд при первом запуске",
        "height": 400.90037255076527,
        "width": 857.69326295068,
        "color": 6
      },
      "id": "c4b8070c-4802-4a86-a091-6a2028b124c9",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2440,
        1400
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "Вы не нажали кнопку \"поделиться контактом\"",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Поделиться контактом",
                    "additionalFields": {
                      "request_contact": true
                    }
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "98b5df15-f512-40da-88e6-677622b771ed",
      "name": "не ввели контакт",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -620,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger1').item.json.message.chat.id }}",
        "text": "=Роль не указана",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "cd040514-1322-4f24-9fda-b70fb75c2da3",
      "name": "Нет роли",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        0,
        2140
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c7a2f2e-c8b7-431a-8a0b-5dc40efd8909",
              "name": "str",
              "value": "={{ $('Telegram Trigger1').item.json.message.contact.phone_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f653f65b-968a-48bd-ac33-47735c2f4dc2",
      "name": "номер телефона",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -615,
        800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "Вы авторизовались, но у вас не указана роль в Odoo",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "81fdf87a-015d-4c61-b03e-91a87c237fc6",
      "name": "нет роли",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        340,
        1060
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/web/session/authenticate",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"call\",\n    \"params\": {\n        \"db\": \"db\",\n        \"login\": \"lamart-admin\",\n        \"password\": \"lamarlemur\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "152479e0-4637-4da8-807a-6b017f819362",
      "name": "авторизация",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2640,
        1480
      ],
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "01SSIC4l6mPMBgOB",
        "options": {}
      },
      "id": "c7b02095-04c1-4cc6-b06b-9afc8364d595",
      "name": "воркфлоу ЛОГИСТ",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        360,
        1360
      ]
    },
    {
      "parameters": {
        "workflowId": "UlJ5IGXFqHCDYcwB",
        "options": {}
      },
      "id": "93d625e9-c68e-49cf-b8a7-389dd8fbc24c",
      "name": "воркфлоу МЕХАНИК",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        360,
        1540
      ]
    },
    {
      "parameters": {
        "workflowId": "2TGpCHKZuyMp9oF0",
        "options": {}
      },
      "id": "771da9b3-8151-4ca0-8763-3f1b4fb25873",
      "name": "воркфлоу ВОДИТЕЛЬ_РЕПЛАЙ",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1040,
        2380
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "77fe838f-5f60-44cc-a654-5adcbbebf8bb",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "unauthorized",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "7dc92754-779a-4427-ba34-e7c6a59cb5c6",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "277cdb31-37a8-433d-9aba-26dca1685bc4",
      "name": "проверка статуса авторизации1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1240,
        1460
      ]
    },
    {
      "parameters": {
        "workflowId": "6wteHiVCwezCWPRg",
        "options": {}
      },
      "id": "66a3efd4-49b9-4fbb-9ee8-9e0014df8714",
      "name": "воркфлоу ВОДИТЕЛЬ_ИНЛАЙН",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        760,
        1980
      ]
    },
    {
      "parameters": {
        "content": "## Водитель\nу водителя много нод, поэтому они вынесены в отдельные воркфлоу",
        "height": 469.99969888850467,
        "width": 991.3552023907823,
        "color": 6
      },
      "id": "18005a8d-b535-4f22-8c57-065e8845c4fc",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        1720
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar res = {};\n\nfor (const item of $input.all()) {\n  Object.assign(res, $('Telegram Trigger1').item.json);\n  Object.assign(res, $('актуальный статус').item.json);\n  Object.assign(res, { cookie: 'session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/' });\n}\n\nreturn res;"
      },
      "id": "3d67466c-6eca-4c33-9cbd-702dca59406d",
      "name": "склеиваем данные",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -520,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2bd61e7b-a58d-4c5d-81d2-ec5f92c0ee0d",
              "leftValue": "={{ $json.message.photo[0].file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "beb896d6-88c5-4a2c-8278-489d76a2eca6",
              "leftValue": "={{ $json.message.voice.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "0228f7b6-101d-46f6-98b3-0fa3b02263be",
              "leftValue": "={{ $json.message.video_note.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "0bd83324-348f-4eae-aa8b-5f00ce5638ee",
              "leftValue": "={{ $json.message.video.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "760b1bc7-ee39-42fd-b947-b8076c094182",
      "name": "Проверка медиа",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        1820
      ]
    },
    {
      "parameters": {
        "workflowId": "387x7yotvUrQgMyX",
        "options": {}
      },
      "id": "702255b5-e8a1-4fbd-a6f1-f469c041cb4d",
      "name": "воркфлоу ВОДИТЕЛЬ МЕДИА",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1120,
        1800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Вы авторизовались как диспетчер, <b>{{ $('получаем id по mobile_phone').item.json.name }}</b>",
        "replyMarkup": "replyKeyboardRemove",
        "replyKeyboardRemove": {
          "remove_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "8d3fee2d-6b88-4e46-8a33-7ffc4c77b79a",
      "name": "диспетчер",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        720,
        660
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "XBB8U2KwQ5g39pyw",
        "options": {}
      },
      "id": "5e1bc160-e265-459f-983c-edec74e26d1d",
      "name": "воркфлоу ДИСПЕТЧЕР",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        140,
        1860
      ]
    },
    {
      "parameters": {
        "content": "## Проверка состояния карточек и отправка статуса водителю",
        "height": 369.4704439473635,
        "width": 1212.5764986840902,
        "color": 6
      },
      "id": "e07fb91e-077a-4cd2-9c2e-ad244ec1cfc4",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4400,
        1960
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 18
            }
          ]
        }
      },
      "id": "790d1857-5129-46d9-ae71-4c84ce374c78",
      "name": "Schedule Trigger3",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -4420,
        2520
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 7,
        "options": {}
      },
      "id": "47244f95-9534-449c-a634-f9a54f9b4d9a",
      "name": "дата через неделю1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -4260,
        2520
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n    days = abs(item.json.timeDifference)\n    if days % 100 // 10 == 1:\n        item.json.sklonenie = \"дней\"\n    elif days % 10 == 1:\n        item.json.sklonenie = \"день\"\n    elif days % 10 in [2, 3, 4]:\n        item.json.sklonenie = \"дня\"\n    else:\n        item.json.sklonenie = \"дней\"\nreturn _input.all()"
      },
      "id": "5786591f-98f0-4dde-bbae-c587c8b598d7",
      "name": "склоняем1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3140,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0bd3f1ff-9963-406f-b40f-8c9e47ba7e30",
              "name": "timeDifference",
              "value": "={{ $json.timeDifference.days.round() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "b441b030-1338-4cdc-ad68-3eefe2090148",
      "name": "округляем1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3500,
        2520
      ]
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $today }}",
        "endDate": "={{ $json.expiration_date }}",
        "options": {}
      },
      "id": "5d951a7f-16e5-49da-ba17-7c8c022a66e2",
      "name": "разница в днях1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3740,
        2520
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "dedeedef-3765-44c7-a15d-d340f787ad13",
      "name": "объединяем доки+дата с разницей во времени1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -3340,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "386f4fe1-4858-4421-a50e-867e5ca497fc",
              "name": "message",
              "value": "=⚠️Через {{ $json.timeDifference }} {{ $json.sklonenie }} истекает срок документа <b>{{ $json.display_name }}</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3348e361-7964-4c24-9463-6d6844b7c299",
      "name": "склеиваем1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2920,
        2680
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "message",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "b8486897-8fde-4995-9538-ce66f40bfac9",
      "name": "объединяем1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -2700,
        2680
      ]
    },
    {
      "parameters": {
        "content": "## Проверка срока документов механик + диспетчер\n",
        "height": 460.7511085684256,
        "width": 2525.6327042306157,
        "color": 6
      },
      "id": "0bf13322-ddb4-449e-ab00-d1f4770e2286",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4420,
        2400
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "={{ $('объединяем1').item.json.concatenated_message }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "83b73bfd-539f-4902-8913-513fb48bd2a4",
      "name": "отправка сообщения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -2040,
        2680
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').item.json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number_car",
              "value": "={{ $json.number_car }}"
            }
          ]
        },
        "options": {}
      },
      "id": "24bba5d6-8f9b-432d-acea-9e57a2600271",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2380,
        3160
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "2c55e321-2fb0-4598-b785-aaffe8dd899f",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2100,
        3160
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "580a6282-31cb-4711-842f-b57d1b7b4b91",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1880,
        3160
      ]
    },
    {
      "parameters": {},
      "id": "b4188732-21f7-4f39-8cb8-93d052b33ce8",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -2780,
        3160
      ]
    },
    {
      "parameters": {},
      "id": "eba8fd90-3b28-4f61-a99b-2766ebc76152",
      "name": "объединяем в один список",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -2980,
        3160
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $('поиск текущего авто1').all()[0].json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "17880667-d34e-4317-9e02-b79d38b86f1c",
      "name": "айди водителя1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1420,
        3140
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.resequenced_data",
        "options": {}
      },
      "id": "10ab3fb8-ecb3-4ca9-86ef-06044ef6070d",
      "name": "получим карточки очереди1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -4300,
        3180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "a9d8f664-deb0-47c2-b8f1-bea1a09d8139",
              "leftValue": "={{ $json.transportation[0].date }}",
              "rightValue": "={{ $today.format('yyyy-MM-dd') }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0cd26933-1748-42b0-b8a3-5fdc7d43fccb",
      "name": "сегодняшняя дата2",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        -3440,
        3240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d9aa25a-ccec-4bbd-9e1f-e90cc391fdc0",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bdaaf7ed-9911-4217-ad89-02ac07edbd9f",
      "name": "если не пустой2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3240,
        3240
      ]
    },
    {
      "parameters": {
        "content": "## Проверка: изменена очередь на сегодня или нет.",
        "height": 394.06284454438725,
        "width": 1522.0410589173039
      },
      "id": "a244f387-77b3-4c4c-a7f3-6b769844f90e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4180,
        3020
      ]
    },
    {
      "parameters": {
        "content": "## Вывод очереди водителю",
        "height": 389.6622559205192,
        "width": 1389.3708193435414,
        "color": 5
      },
      "id": "e4524fc8-69ee-4fd9-b65a-2bdb1417a4db",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2640,
        3020
      ]
    },
    {
      "parameters": {
        "content": "## Изменение номера в очереди перевозок",
        "height": 476.4075860221335,
        "width": 3314.408122191204,
        "color": 6
      },
      "id": "6e94297f-d3b9-4775-b2b2-b0bba49d7754",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4542.069450478657,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a9d8f664-deb0-47c2-b8f1-bea1a09d8139",
              "leftValue": "={{ $json.date }}",
              "rightValue": "={{ $today.format('yyyy-MM-dd') }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b1f9959-069a-4efc-98b2-8d4254ccf266",
      "name": "сегодняшняя дата1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        -3440,
        3100
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d9aa25a-ccec-4bbd-9e1f-e90cc391fdc0",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "18c2847f-f964-49c6-894a-4c026ae310b6",
      "name": "если не пустой1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3240,
        3100
      ]
    },
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {}
      },
      "id": "c4eff37d-9ebd-4b7f-90bd-c531a67386a5",
      "name": "Telegram Trigger1",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -3160,
        1480
      ],
      "webhookId": "98cc3ab9-68d6-4a2f-85f1-4ae02662246d",
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0a174f9f-1322-494e-80bc-26dc6d56583c",
      "name": "айди диспетчеров+механиков",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2160,
        2460
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('айди водителя1').item.json.tg_id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "15579250-95a7-42d6-8a21-57e77dec76d7",
      "name": "айди последнего сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        800,
        2760
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "messageId": "={{ $('айди водителя1').item.json.end_round_message_id }}",
        "text": "={{ $('пересылаем, чтобы получить текст прошлого сообщения').item.json.result.reply_to_message.text }}",
        "additionalFields": {}
      },
      "id": "48746079-ff8b-44dd-ac60-ec1caab92cef",
      "name": "Убираем кнопки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1000,
        2760
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=.",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": true,
          "parse_mode": "HTML",
          "reply_to_message_id": "={{ $json.end_round_message_id }}"
        }
      },
      "id": "03435508-f767-470d-8e5d-e17bcb628dd2",
      "name": "пересылаем, чтобы получить текст прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1091,
        3111
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material =data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre || 0;\n    const requiredTon = data.required_ton || 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    if (endCondition === \"Количество рейсов для каждого автомобиля\" && data.round_quantity_for_car > 0) {\n      message += `\\nКоличество рейсов для каждого автомобиля - <b>${data.round_quantity_for_car}</b>`;\n    }\n\n    message += (item.json.concatenated_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "53b9822a-e005-4cc5-b84b-d86e9902416a",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1640,
        3140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "df43e591-4040-4e44-9556-05c0a141bb03",
              "leftValue": "={{ $('есть ли перевозка1').all()[0].json.quarry_works }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "68890bab-4965-465a-b5d2-30c0cc17ddae",
      "name": "работа первая?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -731,
        3111
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "text": "={{ \"Изменился порядок перевозок на сегодня:\\n\\n\" + $('в единое сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать работу в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "20bfe314-8fb0-4d28-9d00-0c9c350f8987",
      "name": "первое=работа в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        160,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "text": "={{ \"Изменился порядок перевозок на сегодня:\\n\\n\" + $('в единое сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2614bb37-4a56-4567-af7c-4398600c200c",
      "name": "уже начатая перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        660,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "text": "={{ \"Изменился порядок перевозок на сегодня:\\n\\n\" + $('в единое сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс в новой перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "4095d498-0279-4159-b2a1-c0a68d177f80",
      "name": "не начатая перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        600,
        2980
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Смена текста начала рейса при смене очереди",
        "height": 506.9884164964226,
        "width": 1775.1807115607076,
        "color": 6
      },
      "id": "6fa3a0b7-038f-4a1a-98e1-ca87924eb7d6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        2940
      ]
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "5831143e-f6ef-46e0-ad1c-c21ed29083fd",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1240,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id }}"
      },
      "id": "fb33f1ac-afac-485e-8006-ccde84cfe28d",
      "name": "удаляем прошлое",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -911,
        3111
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "={{ $('водитель текущего авто').item.json[\"driver_id\"][1] }}\nВаше обращение перенесено в статус <b>{{ $('смена статуса заявки').item.json.body.status }}</b>\n\nТекст вашего обращения:\n<i>{{ $('смена статуса заявки').item.json.body.description_of_maintenance }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2cce114a-af5d-4f10-a043-0f2c3a7791e0",
      "name": "Вывод статуса карточки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -3380,
        2040
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4606e394-5575-4882-a8b6-2f9adba6298a",
      "name": "Получаем тг1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -3600,
        2040
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ca93c242-ca4e-4d06-8b64-91a75e30caa7",
              "leftValue": "={{ $json.body.status }}",
              "rightValue": "Готово",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4548eb5-b868-4345-bbd2-039f60dc4c1c",
      "name": "только готовые уведомляем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -4080,
        2120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('получаем id по mobile_phone').item.json.job_id[1] }}",
                    "rightValue": "Логист",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "15e1453e-b597-4713-8d5b-6f12cf95cdfe",
                    "leftValue": "={{ $('получаем id по mobile_phone').item.json.job_id[1] }}",
                    "rightValue": "Механик",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c007a326-23d6-4d7f-84ee-af7fc0aead66",
                    "leftValue": "={{ $('получаем id по mobile_phone').item.json.job_id[1] }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a0b1b44d-6624-404a-9edc-b87f2556e916",
                    "leftValue": "={{ $('получаем id по mobile_phone').item.json.job_id[1] }}",
                    "rightValue": "Диспетчер",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ecc22b35-435d-4659-a3dc-72b3bcfae75b",
                    "leftValue": "={{ $('получаем id по mobile_phone').item.json.job_id[1] }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4f9e6b0d-7d31-4c81-a3de-1474025f9c90",
      "name": "проверка роли после авторизации",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        180,
        700
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Вы авторизовались как наёмник, <b>{{ $('получаем id по mobile_phone').item.json.name }}</b>",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "647eee8e-b41f-42b2-bf53-b75c82403514",
      "name": "наёмник",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        520,
        840
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "75a840c6-19b2-47ef-8d5f-e92cd1503c71",
      "name": "айди водителя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4080,
        3600
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Пример функции для краткого форматирования даты в формате число.месяц.год\nfunction formatDate(date) {\n  if (!date) return date;  // Если дата отсутствует, возвращаем пустую строку\n  return new Date(date).toLocaleDateString('ru-RU');  // Форматируем дату в формате дд.мм.гггг\n}\n\nconst oldValues = $('изменение данных в перевозке').all()[0].json.body.old_values;\nconst newValues = $('изменение данных в перевозке').all()[0].json.body.updated;\n\nlet output = 'Произошли изменения в перевозке <b>' + oldValues.place_from + ' - ' + oldValues.place_to + '</b>:\\n\\n';\n\nfunction createLine(oldValue, newValue, label, isDate = false) {\n  // Если нужно форматировать дату\n  if (isDate) {\n    oldValue = formatDate(oldValue);\n    newValue = formatDate(newValue);\n  }\n  \n  // Проверяем, если значение изменилось и новое значение не undefined\n  if (newValue !== undefined && oldValue !== newValue) {\n    return `${label}: <s>${oldValue}</s> - ${newValue}\\n`;\n  }\n  return '';\n}\n\n// Проверяем только изменённые поля, исключая undefined значения\noutput += createLine(oldValues.date, newValues.date, 'Дата', true);  // true указывает на форматирование даты\noutput += createLine(oldValues.place_from, newValues.place_from, 'От');\noutput += createLine(oldValues.place_to, newValues.place_to, 'До');\noutput += createLine(oldValues.sender, newValues.sender, 'Отправитель');\noutput += createLine(oldValues.partner, newValues.partner, 'Получатель');\noutput += createLine(oldValues.carrier, newValues.carrier, 'Перевозчик');\noutput += createLine(oldValues.type, newValues.type, 'Тип');\noutput += createLine(oldValues.end_condition, newValues.end_condition, 'Условие завершения');\n\n// Возвращаем итоговую строку\nreturn {\n  output\n};\n"
      },
      "id": "68940e9b-1de4-4f93-8b10-242200c861f5",
      "name": "текст",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3860,
        3600
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя').item.json.tg_id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "356f2d77-0967-4bea-8a29-aeeac48d84d5",
      "name": "отправка уведомления",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3640,
        3600
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка изменений",
        "height": 280.1188505499391,
        "width": 1018.060178588168,
        "color": 6
      },
      "id": "5787c436-6ebb-4dcc-bb8b-17230ba11cba",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4540,
        3520
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2a9b0724-003a-4b03-b04e-4a898afb67f7",
      "name": "получаем роль",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -860,
        1660
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').item.json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "transportation_id",
              "value": "={{ $json.car_queue_transportation_rel[0].transportation[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "eaa2e76b-25ec-4e6f-be17-d7ff9e6b2dae",
      "name": "данные перевозок2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3660,
        3260
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').all()[0].json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "transportation_id",
              "value": "={{ $('есть ли перевозка1').all()[0].json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a8dd9182-96ee-45ee-a798-9d41b57b6799",
      "name": "данные перевозки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -600,
        3320
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "3bd81424-1806-474c-9f6d-9c3cacf6f6ee",
      "name": "разделяем рейсы",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -360,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b3aa7ed1-6303-47fb-b809-ba6de3b31013",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('поиск текущего авто1').all()[0].json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1d3a0c1d-572e-4e34-a437-7ca7360db7ad",
      "name": "рейсы определённого авто",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -180,
        3320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "text": "={{ \"Изменился порядок перевозок на сегодня:\\n\\n\" + $('в единое сообщение').item.json.combinedMessages }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "524a58c8-e732-4a63-9962-b30737490635",
      "name": "без кнопок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        400,
        3160
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "61ebb6c3-eae3-4025-b851-d268efcb22c5",
              "leftValue": "={{ $('рейсы определённого авто').all()[0].json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a98899f1-f559-4111-afba-eb118033b978",
      "name": "первый рейс выполняется?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        240,
        3320
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "c27e0913-0b3d-4566-9894-24cea5248a59",
      "name": "всего рейсов",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        40,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cb2040a1-7342-42fa-a94f-96b6d7b881e0",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "749213bc-fde2-4db2-9230-214b1a042086",
      "name": "один рейс?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        3320
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_full_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').item.json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "full_quarry_work_id",
              "value": "={{ $json.quarry_work[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7fd6827d-123d-4f78-9444-a77755030df9",
      "name": "данные работ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3660,
        3100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d416c370-c4bf-4545-a03b-180013468e4f",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4af5ee4c-7e50-4b72-bed7-159dd7bd6054",
      "name": "есть выполняющиеся?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        2940
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителя1').item.json.tg_id }}",
        "text": "={{ \"Изменился порядок перевозок на сегодня:\\n\\n\" + $('в единое сообщение').item.json.combinedMessages }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "66c053ab-d267-435d-8cb2-b63d01dcf332",
      "name": "карьер без кнопок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        260,
        2920
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Куки менять в нодах:\n- получаем роль и склеиваем данные в \"получаем роль\"\n- проверка состояния карточки\n",
        "height": 434.3417957083881,
        "width": 676.2295720009513,
        "color": 3
      },
      "id": "c640729e-b9d3-4b80-8b14-8a0366e0864c",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        1940
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "1d7806e9-ec1f-4003-8af0-e2e4351d3e0e",
      "name": "всего рейсов1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -100,
        3120
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "workflowId": "tVImH1eHjZ0c82bP",
        "options": {}
      },
      "id": "a8750309-9a94-4619-a225-14356b8746b7",
      "name": "воркфлоу СЛЕСАРЬ",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        360,
        2220
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "Логист",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8c711320-cf09-453c-9f7f-dd3e02d0d308",
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "Механик",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a06fb869-7c18-4036-9ca4-f2f7fa9005d8",
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "62c1396b-c91f-4fe9-968e-63fad325a2da",
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "Диспетчер",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "06f8996e-e8af-4163-ac0f-4fe4b0bcc7c5",
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "=Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "9a58554b-ec06-407c-b8c5-ca804170d9f0",
                    "leftValue": "={{ $('получаем роль').item.json.job_id[1] }}",
                    "rightValue": "Слесарь",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "2aa5831d-2b90-4f61-b7a8-62a0d753a49d",
      "name": "ветки для ролей",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -160,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "308060bc-fb9d-4379-af49-994a6c61365b",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "d8cd196a-394b-4169-aadf-fd3499170c52",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f023634d-d1c4-4ea8-b760-44850dc5748d",
      "name": "если не равно нулю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2840,
        4014
      ]
    },
    {
      "parameters": {
        "jsCode": "const groupedFlights = {};\n\n$('Loop Over Items').all().forEach(it => {\n  var entry = it.json;\n  const carName = entry.car[1]; // Извлекаем название автомобиля\n  const flightInfo = entry.transportation !== undefined ? entry.transportation[1].substring(11) : entry.shift[1].substring(11); // Извлекаем информацию о рейсе\n\n  if (!groupedFlights[carName]) {\n    groupedFlights[carName] = [];\n  }\n\n  groupedFlights[carName].push(flightInfo);\n});\n\n// Формирование итоговой строки\nlet result = '';\n\nfor (const [car, flights] of Object.entries(groupedFlights)) {\n  result += `${car}:\\n`;\n  result += flights.join('\\n') + '\\n\\n';\n}\n\n// Вывод результата\nreturn {res: result};"
      },
      "id": "f53d793e-267a-467b-9526-75652573229c",
      "name": "группируем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2620,
        3994
      ]
    },
    {
      "parameters": {
        "jsCode": "function getTransportationWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  let transportationWord;\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    transportationWord = \"перевозка\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    transportationWord = \"перевозки\";\n  } else {\n    transportationWord = \"перевозок\";\n  }\n\n  return `${count} ${transportationWord}`;\n}\n\n// Функция для склонения слова \"запланировано\"\nfunction getPlannedWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    return \"запланирована\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    return \"запланированы\";\n  } else {\n    return \"запланированы\";\n  }\n}\nvar count = $('итоговое кол-во').all()[0].json.count_id;\nvar ans = getPlannedWord(count) + ' ' + getTransportationWord(count);\nreturn {'trans': ans}"
      },
      "id": "8628f07d-b9e4-4014-a0b0-a0f9fed70ad7",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2040,
        4054
      ]
    },
    {
      "parameters": {
        "content": "## Вывод на завтра",
        "height": 902.7271656633407,
        "width": 2960.4673426000354,
        "color": 6
      },
      "id": "53bcb057-e666-4064-83be-b0308a0167e8",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4364.9483716860495,
        3880
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "ead0624e-8f1a-48d0-8a68-0a84a39eece7",
      "name": "итоговое кол-во",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -3040,
        4034
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.tg_id }}",
            "last_message_text": "={{ $('группируем').item.json.res }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "31eeff28-4ccd-400d-9f9b-13b90735a4b1",
      "name": "сохраним текст",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2040,
        3894
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('данные водителя').item.json.tg_id }}",
        "text": "=<b>Изменение перевозок</b>\n\nНа завтра у вас {{ $json.trans }}!\n\n{{ $('группируем').item.json.res }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "5686f51c-38c3-4ee0-8bc1-9b34050ededb",
      "name": "отправим сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1860,
        4054
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $('история взятия').all()[0].json.employee[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8c08a087-8003-4b5b-863b-4626b9994184",
      "name": "данные водителя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2440,
        3994
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "de602108-41b5-4245-810b-0f3b96f0a60d",
              "leftValue": "={{ $json.last_message_text }}",
              "rightValue": "={{ $('группируем').item.json.res }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "beed4c37-f96b-4bac-be1c-490a00fb2eff",
      "name": "очередь поменялась?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2260,
        3994
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "=session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.employee[0] }}"
            },
            {
              "name": "start_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d74533d0-1f90-4d77-bde8-f9fce7e61ae1",
      "name": "график на завтра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3660,
        4414
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "=session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e4aab9d0-5549-47c2-a7bb-3f19812a9664",
      "name": "рейсы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2780,
        4294
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "dd312afe-6b52-42bf-aefc-8b208768d6b9",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2560,
        4274
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d43dbc66-2b4b-4df6-b25a-2c1fd1a22f32",
              "leftValue": "={{ $json.transportation[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3f507f58-b2ba-4eb6-985a-d116adf3f810",
      "name": "на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2340,
        4274
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c53394e2-1089-482a-a9bc-66194a5588b8",
              "leftValue": "={{ $json.shift[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "655546e7-0ae5-4636-b584-0c27b01bbe27",
      "name": "работы на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2340,
        4514
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_quarry_work_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "=session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ed91735b-d6d7-45ae-9b96-d23f15f85237",
      "name": "работы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2780,
        4534
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "quarry_works",
        "options": {}
      },
      "id": "1ddea75b-b9bb-4901-bec8-fc82e6ebd6c0",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2560,
        4514
      ]
    },
    {
      "parameters": {},
      "id": "9f4ddc2f-c778-4c96-afad-a3e75aba8716",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1960,
        4414
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "735e7978-5582-41ef-9c8a-8b5d5d76c073",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3340,
        4294
      ]
    },
    {
      "parameters": {},
      "id": "1059bfe0-640f-4fc1-bdb8-b3f9c737c5e7",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3020,
        4414
      ]
    },
    {
      "parameters": {},
      "id": "7ab5356e-01a7-465e-806e-827ed4d890ec",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1740,
        4554
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 7-23/2 * * *"
            }
          ]
        }
      },
      "id": "960f833a-e799-4ea6-8e52-ff05f853af36",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4300,
        4414
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dev/change_maintenance",
        "authentication": "basicAuth",
        "options": {}
      },
      "id": "12f0742e-e137-4cd7-aefe-e8524fc4c586",
      "name": "смена статуса заявки",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4300,
        2120
      ],
      "webhookId": "152d7c74-b120-4c93-8437-4209442ecc9a",
      "credentials": {
        "httpBasicAuth": {
          "id": "uHcFMSp9IXmPMRB4",
          "name": "queue webhook"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_car_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.body.car_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "419e2e90-e239-4a9b-9929-c4bcf55063d5",
      "name": "водитель текущего авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3840,
        2040
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1a96d47b-6329-437f-aa6b-a6b3fb2b58c8",
              "leftValue": "={{ $json.expiration_date }}",
              "rightValue": "={{ $('дата через неделю1').item.json.newDate }}",
              "operator": {
                "type": "dateTime",
                "operation": "beforeOrEquals"
              }
            },
            {
              "id": "2475d05c-b23f-449d-aa7f-b1887ca105de",
              "leftValue": "={{ $json.expiration_date }}",
              "rightValue": "={{ $today }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ea4837a8-331c-4d47-9924-733869f688d3",
      "name": "документы с истекающим сроком1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -3940,
        2520
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "0d9f3378-3ee2-41a8-9459-9bfc9290253b",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -2320,
        2660
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_documents",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "82458aa0-6a20-4a62-a039-e6bc560e696d",
      "name": "документы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4100,
        2680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "11bed17f-8c70-41ed-8cda-477f926f945a",
      "name": "поиск механиков4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2540,
        2560
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_dispatchers",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "66ef9ff7-c9fc-42db-9008-0e620d82f3a3",
      "name": "поиск диспетчера1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2540,
        2740
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_queue_rel_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').item.json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "rel_id",
              "value": "={{ $('получим карточки очереди1').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ace3b2d-fc64-4770-a5eb-d110a7580801",
      "name": "данные карточек1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3860,
        3180
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n  {\n    \"headers\": {\n      \"set-cookie\": [\n        \"session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/\"\n      ]\n    }\n  }\n",
        "options": {}
      },
      "id": "d5b2974a-5bfa-4cd5-8950-8f34febc615d",
      "name": "авторизация1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4080,
        3100
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_car_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=b9c645092bc728c977a98c4be377c7c2ac0a2e9e; Expires=Mon, 03 Nov 2025 14:04:36 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('Webhook1 dev1').all()[0].json.body.resequenced_data[0].car_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ea6ccf95-4572-4317-b9de-df5e5d2e0edd",
      "name": "поиск текущего авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2580,
        3160
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dev/queue",
        "authentication": "basicAuth",
        "options": {}
      },
      "id": "4068bbcc-b220-4d6a-86db-bd4a8ee18617",
      "name": "Webhook1 dev1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4500,
        3180
      ],
      "webhookId": "e6a5dcca-6f85-49f3-96b8-8dbeb67aa115",
      "credentials": {
        "httpBasicAuth": {
          "id": "uHcFMSp9IXmPMRB4",
          "name": "queue webhook"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "quarry_works",
        "options": {}
      },
      "id": "b24c8ec0-3583-4a33-9db6-6ec2736d37f4",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -500,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5f1ce84c-6a03-4a03-9646-a4f438302c46",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняются",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4934a56f-9709-43e2-aba0-fe001814744d",
      "name": "только выполняющиеся",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -220,
        2920
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ce1a33e-bccc-4f6a-b58f-1486ebda1507",
              "leftValue": "={{ $json.start_time }}",
              "rightValue": "={{ $today }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c3c0ae8e-d9e4-4838-8cae-1355581d8243",
      "name": "работа в карьере",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -360,
        2920
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dev/update_transportation",
        "authentication": "basicAuth",
        "options": {}
      },
      "id": "9912cc6c-84e6-4882-9f39-afc8e0e9e0fc",
      "name": "изменение данных в перевозке",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4500,
        3600
      ],
      "webhookId": "90df170f-5431-43ec-a6ac-2fd2aa42683b",
      "credentials": {
        "httpBasicAuth": {
          "id": "uHcFMSp9IXmPMRB4",
          "name": "queue webhook"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_quarry_work_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('авторизация1').all()[0].json.headers['set-cookie'][0] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('поиск текущего авто1').all()[0].json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6f7d3da3-5506-43cb-8329-dbbbbad5b975",
      "name": "работы в карьере",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -480,
        3120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_car_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.body.car_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "337c65fe-52e2-439e-80d6-55571421f3b3",
      "name": "авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4300,
        3600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "story.car",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.story_for_car[0] }}"
            }
          ]
        }
      },
      "id": "fdabf856-6f79-40bf-9a67-e0c32f488acf",
      "name": "история взятия",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -3880,
        4414
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "finish_status",
              "operator": "notEqual",
              "value": "Не завершали"
            }
          ]
        }
      },
      "id": "3ccf50aa-160f-4bd6-bb2e-68dce6098dfa",
      "name": "авто с завершённой сменой",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -4100,
        4414
      ],
      "credentials": {
        "odooApi": {
          "id": "ITgOrhO4Hf2QcDtf",
          "name": "odoo dev"
        }
      }
    }
  ],
  "pinData": {
    "смена статуса заявки": [
      {
        "json": {
          "headers": {
            "host": "n8n.everest.lamart.site",
            "x-real-ip": "193.107.238.124",
            "x-forwarded-for": "193.107.238.124",
            "x-forwarded-proto": "https",
            "connection": "close",
            "content-length": "541",
            "user-agent": "python-requests/2.25.1",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "authorization": "Basic dXNlcjp6TmJiQU5FYzBpbFA=",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "id": 638,
            "date": "2024-11-05",
            "date_of_start_work": "2024-11-05",
            "date_of_end_work": false,
            "tech_maintenance": false,
            "hours_for_maintenance": 6,
            "cost": 1,
            "description_of_maintenance": "123",
            "car_id": 18,
            "sent": false,
            "status": "Готово",
            "image_of_breakage": false,
            "image_of_repaired": false,
            "performer": null,
            "created_by": 2,
            "completed_by": 2,
            "schedule_date_start": "2024-11-05",
            "schedule_date_end": "2024-11-06",
            "rate_for_hour": 0,
            "completed_by_is_driver": true,
            "driver_salary": 0
          },
          "webhookUrl": "https://n8n.everest.lamart.site/webhook/dev/change_maintenance",
          "executionMode": "production"
        }
      }
    ],
    "Webhook1 dev1": [
      {
        "json": {
          "headers": {
            "host": "n8n.everest.lamart.site",
            "x-real-ip": "193.107.238.124",
            "x-forwarded-for": "193.107.238.124",
            "x-forwarded-proto": "https",
            "connection": "close",
            "content-length": "160",
            "user-agent": "python-requests/2.25.1",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "authorization": "Basic dXNlcjp6TmJiQU5FYzBpbFA=",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "resequenced_data": [
              {
                "id": 943,
                "car_id": 18,
                "new_sequence": 0
              },
              {
                "id": 942,
                "car_id": 18,
                "new_sequence": 1
              },
              {
                "id": 941,
                "car_id": 18,
                "new_sequence": 2
              }
            ]
          },
          "webhookUrl": "https://n8n.everest.lamart.site/webhook/dev/queue",
          "executionMode": "production"
        }
      }
    ],
    "изменение данных в перевозке": [
      {
        "json": {
          "headers": {
            "host": "n8n.everest.lamart.site",
            "x-real-ip": "193.107.238.124",
            "x-forwarded-for": "193.107.238.124",
            "x-forwarded-proto": "https",
            "connection": "close",
            "content-length": "813",
            "user-agent": "python-requests/2.25.1",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "authorization": "Basic dXNlcjp6TmJiQU5FYzBpbFA=",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "car_id": 18,
            "transportation_id": 1121,
            "updated": {
              "place_from": "улица Энгельса, 31А"
            },
            "old_values": {
              "date": "2024-11-06",
              "end_condition": "В течении смены",
              "sender": "Эверест",
              "place_from": "Карьер Ключевое",
              "type": "Запланированная",
              "partner": "Новая компания",
              "carrier": "Эверест",
              "place_to": "Карьер Ключевое"
            }
          },
          "webhookUrl": "https://n8n.everest.lamart.site/webhook/dev/update_transportation",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "timezone": "Asia/Vladivostok"
  },
  "staticData": {
    "node:Schedule Trigger3": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-08-26T14:03:49.624Z",
      "updatedAt": "2024-08-26T14:03:49.624Z",
      "id": "sYBV4z8jwrWgz2Cc",
      "name": "aleksey"
    }
  ],
  "triggerCount": 6,
  "updatedAt": "2024-11-11T06:58:52.453Z",
  "versionId": "6508d6c0-e7de-4cc7-a541-66661402f7a7"
}