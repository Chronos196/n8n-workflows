{
  "active": false,
  "connections": {
    "статус=ввод комментария": {
      "main": [
        [
          {
            "node": "отклонение заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "новое сообщение": {
      "main": [
        [
          {
            "node": "удаляем старое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем старое сообщение": {
      "main": [
        [
          {
            "node": "статус=ввод комментария",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер заявки": {
      "main": [
        [
          {
            "node": "актуальный статус заявки",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный статус заявки": {
      "main": [
        [
          {
            "node": "можно ли изменить статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "можно ли изменить статус": {
      "main": [
        [
          {
            "node": "есть ли изображение",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "уже обработана",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли изображение": {
      "main": [
        [
          {
            "node": "новое сообщение",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод комментария",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод комментария": {
      "main": [
        [
          {
            "node": "статус=ввод комментария",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "комментарий отправлен": {
      "main": [
        [
          {
            "node": "поиск водителя по заявке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск водителя по заявке": {
      "main": [
        [
          {
            "node": "поиск айди водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск айди водителя": {
      "main": [
        [
          {
            "node": "отправка водителю комментария",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "новое сообщение1": {
      "main": [
        [
          {
            "node": "удаляем старое сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем старое сообщение1": {
      "main": [
        [
          {
            "node": "принятие заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер заявки1": {
      "main": [
        [
          {
            "node": "актуальный статус заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный статус заявки1": {
      "main": [
        [
          {
            "node": "можно ли изменить статус1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "можно ли изменить статус1": {
      "main": [
        [
          {
            "node": "есть ли изображение1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "уже обработана1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли изображение1": {
      "main": [
        [
          {
            "node": "новое сообщение1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод комментария1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод комментария1": {
      "main": [
        [
          {
            "node": "принятие заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "проверка типа сообщения",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка типа сообщения": {
      "main": [
        [
          {
            "node": "статус механика",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "инлайн-кнопки для механика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка водителю комментария": {
      "main": [
        [
          {
            "node": "возвращаем дефолтный статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через неделю": {
      "main": [
        [
          {
            "node": "дата и время 23:59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разница в днях": {
      "main": [
        [
          {
            "node": "округляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "округляем": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем доки+дата с разницей во времени": {
      "main": [
        [
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "сколько дней до окончания срока",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеиваем": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем": {
      "main": [
        [
          {
            "node": "отправка сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "разница в днях",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "если истекло": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список": {
      "main": [
        [
          {
            "node": "объединяем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:59": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:1": {
      "main": [
        [
          {
            "node": "дата через 14 дней",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:60": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "сколько дней до окончания срока": {
      "main": [
        [
          {
            "node": "если истекло",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "склеиваем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:2": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:3": {
      "main": [
        [
          {
            "node": "дата через 21 день",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата и время 23:61": {
      "main": [
        [
          {
            "node": "документы с истекающим сроком4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы с истекающим сроком4": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через 8 дней": {
      "main": [
        [
          {
            "node": "дата и время 23:1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через 14 дней": {
      "main": [
        [
          {
            "node": "дата и время 23:",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через 15 дней": {
      "main": [
        [
          {
            "node": "дата и время 23:3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата через 21 день": {
      "main": [
        [
          {
            "node": "дата и время 23:2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата сегодня": {
      "main": [
        [
          {
            "node": "дата и время 23:61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "дата сегодня1": {
      "main": [
        [
          {
            "node": "дата и время 23:60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус механика": {
      "main": [
        [
          {
            "node": "комментарий отправлен",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка старта1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта1": {
      "main": [
        [
          {
            "node": "Приветственное сообщений",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка кнопок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка кнопок": {
      "main": [
        [
          {
            "node": "выбор периода документов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "принятие заявки": {
      "main": [
        [
          {
            "node": "Odoo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инлайн-кнопки для механика": {
      "main": [
        [
          {
            "node": "номер заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "разделение на дни для документов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск слесарей": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск слесарей1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сборка списка слесарей": {
      "main": [
        [
          {
            "node": "Вывод списка слесарей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сборка списка слесарей1": {
      "main": [
        [
          {
            "node": "Вывод списка слесарей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск слесарей2": {
      "main": [
        [
          {
            "node": "Удаление прошлого сообщения",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "отправляем сообщение ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "отправляем сообщение 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск слесарей3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Удаление прошлого сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "отправляем сообщение 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выбор слесаря": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "поиск слесарей",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск слесарей1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск слесарей2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск слесарей3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выбор слесаря",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделение на дни для документов": {
      "main": [
        [
          {
            "node": "дата через неделю",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "дата через 8 дней",
            "type": "main",
            "index": 0
          },
          {
            "node": "дата сегодня1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "дата через 15 дней",
            "type": "main",
            "index": 0
          },
          {
            "node": "дата сегодня",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "возврат к выбору периода",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаления сообщения с выбором",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-13T18:02:25.062Z",
  "id": "oYXPzroLpvh71lL8",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "old_prod_mechanic",
  "nodes": [
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_reject_text",
            "end_request_id": "={{ $('номер заявки').item.json.TO_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "44f49c0f-5935-418e-9dfb-708e4c339e0c",
      "name": "статус=ввод комментария",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1680,
        1760
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "file": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.photo.reduce((largest, current) => current.file_size > largest.file_size ? current : largest).file_id; }}",
        "additionalFields": {
          "caption": "Напишите для водителя комментарий к заявке:"
        }
      },
      "id": "cd1bfa05-d129-4f6c-8426-35ee1c17ba83",
      "name": "новое сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        1640
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "6fd7a0d3-7890-4263-baac-5d34d089beea",
      "name": "удаляем старое сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1460,
        1640
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отклонение заявки",
        "height": 514.5918601391712,
        "width": 1635.0976739201933,
        "color": 6
      },
      "id": "e54b1f83-5977-40ba-ab16-c104f19c0ddb",
      "name": "Sticky Note41",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7157f53b-6dc0-408e-b176-20681be56507",
              "name": "TO_number",
              "value": "={{ $json.callback_query.message.reply_markup.inline_keyboard[0][0].callback_data.substring(10) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ce25641a-39d1-4b1b-8e85-65fcaacfe352",
      "name": "номер заявки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        420,
        1860
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.TO_number }}"
            }
          ]
        }
      },
      "id": "83b60713-5e6d-4693-adff-bd8da0810b39",
      "name": "актуальный статус заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        640,
        1860
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "233e5f21-81d4-45cd-95c3-4a90228acb88",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Требуется проверка",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "42f55733-a1e8-4b08-8b2a-c12ffdef72ed",
      "name": "можно ли изменить статус",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        1860
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Заявка уже была обработана"
        }
      },
      "id": "e4d4a76c-74fa-4280-a6f2-b2c6d2c8447e",
      "name": "уже обработана",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1080,
        1940
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8573591f-d67f-46fb-a1bc-d3a70cd9bc6c",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.photo.reduce((largest, current) => current.file_size > largest.file_size ? current : largest).file_id; }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "054ff4d0-489e-4437-bfd8-54d96e16608a",
      "name": "есть ли изображение",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1080,
        1760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Напишите для водителя комментарий к заявке:",
        "additionalFields": {}
      },
      "id": "525396b3-11a3-4efc-b5ec-be4394be3cd1",
      "name": "ввод комментария",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        1840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Комментарий отправлен водителю",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c3173167-a9d7-41cb-9ad1-8721f7457d20",
      "name": "комментарий отправлен",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        540,
        520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "get",
        "customResourceId": "={{ $('Execute Workflow Trigger').item.json.end_request_id }}",
        "options": {
          "fieldsList": []
        }
      },
      "id": "312208ff-9501-4c59-99cd-da05f594c35b",
      "name": "поиск водителя по заявке",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        760,
        520
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.created_by[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "445d05bc-44c3-454f-95b0-41bb4aaacd5d",
      "name": "поиск айди водителя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        980,
        520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка комментария водителю",
        "height": 242.01551900336753,
        "width": 1126.0213425732532,
        "color": 6
      },
      "id": "956b4698-bf97-4c2c-aba7-da3893b797c3",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "file": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.photo.reduce((largest, current) => current.file_size > largest.file_size ? current : largest).file_id; }}",
        "additionalFields": {
          "caption": "Заявка подтверждена, водитель получит уведомление"
        }
      },
      "id": "3d9acb79-92f9-481f-85ea-9984ed83c48e",
      "name": "новое сообщение1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        2200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "4224a106-108d-47f2-a998-107d1b715deb",
      "name": "удаляем старое сообщение1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1460,
        2200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Принятие заявки",
        "height": 514.5918601391712,
        "width": 1415.7294837541995,
        "color": 6
      },
      "id": "6cf37a88-f292-42e4-9c8c-5bc95aa10202",
      "name": "Sticky Note44",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        2160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7157f53b-6dc0-408e-b176-20681be56507",
              "name": "TO_number",
              "value": "={{ $json.callback_query.message.reply_markup.inline_keyboard[0][0].callback_data.substring(10) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c879416f-e3c5-4d42-aec9-1a3df52ca2e7",
      "name": "номер заявки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        420,
        2420
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.TO_number }}"
            }
          ]
        }
      },
      "id": "5f54948f-b67b-4e81-a68f-5d3f39a9fbd1",
      "name": "актуальный статус заявки1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        640,
        2420
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "233e5f21-81d4-45cd-95c3-4a90228acb88",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Требуется проверка",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6a55bea6-1cb4-4d2e-89cb-e9bd947374f3",
      "name": "можно ли изменить статус1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        2420
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Заявка уже была обработана"
        }
      },
      "id": "e9e0ca9c-c48b-4893-b921-cdd1284ca5f0",
      "name": "уже обработана1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1080,
        2500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8573591f-d67f-46fb-a1bc-d3a70cd9bc6c",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.photo.reduce((largest, current) => current.file_size > largest.file_size ? current : largest).file_id; }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0e05a2b7-43b2-43f9-80f4-64e00b925817",
      "name": "есть ли изображение1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1080,
        2320
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Заявка подтверждена, водитель получит уведомление",
        "additionalFields": {}
      },
      "id": "c9288ad5-e86f-401a-9dce-239379bcdacb",
      "name": "ввод комментария1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        2400
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "authorized",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ae9a0123-af54-4551-8db9-5301c073b384",
      "name": "возвращаем дефолтный статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1420,
        520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "047d6252-6239-4552-b7d1-0914e3f38b06",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -280,
        1840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "11c45e0d-196b-47f1-821e-bee57c9f070b",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "55893824-46a3-4035-82bd-0e12649eec84",
      "name": "проверка типа сообщения",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        60,
        1780
      ]
    },
    {
      "parameters": {
        "errorMessage": "3333"
      },
      "id": "f370ead7-3e45-4771-b59c-24af40221fa6",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -80,
        2080
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=<b>Работа не принята</b>\n\n<i>{{ $('поиск водителя по заявке').item.json.description_of_maintenance }}</i>\n\nКомментарий механика: {{ $('Execute Workflow Trigger').item.json.message.text }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "8edb76d7-3ca2-4a7d-8338-02e2dfad4d75",
      "name": "отправка водителю комментария",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1200,
        520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/reject_maintenance_by_mechanic",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"maintenance_id\": {{ $('номер заявки').item.json.TO_number }}\n}",
        "options": {}
      },
      "id": "e14647f2-53e9-43eb-99f6-35c2faf69634",
      "name": "отклонение заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1880,
        1760
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/accept_maintenance_by_mechanic",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"maintenance_id\": {{ $('номер заявки1').item.json.TO_number }}\n}",
        "options": {}
      },
      "id": "309ec1a1-b340-42fa-9e50-5b8381035139",
      "name": "принятие заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1680,
        2320
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 7,
        "options": {}
      },
      "id": "cb6bb827-cdbf-4bbd-a515-a3f300755b3f",
      "name": "дата через неделю",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        480,
        2840
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "expiration_date",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            }
          ]
        }
      },
      "id": "595a5ac5-4e9e-4730-970f-e5cdf4479f56",
      "name": "документы с истекающим сроком",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        860,
        2840
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $today }}",
        "endDate": "={{ $json.expiration_date }}",
        "options": {}
      },
      "id": "ff9ec2fc-64ba-4a25-8b8f-7e4974e76938",
      "name": "разница в днях",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1340,
        2840
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0bd3f1ff-9963-406f-b40f-8c9e47ba7e30",
              "name": "timeDifference",
              "value": "={{ $json.timeDifference.days.round() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "caa710e0-870c-443c-9c2e-7c787974d1c9",
      "name": "округляем",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1520,
        2840
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "f8c9cb76-9542-4253-a411-917a7becbe48",
      "name": "объединяем доки+дата с разницей во времени",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1680,
        2980
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n    days = abs(item.json.timeDifference)\n    if days % 100 // 10 == 1:\n        item.json.sklonenie = \"дней\"\n    elif days % 10 == 1:\n        item.json.sklonenie = \"день\"\n    elif days % 10 in [2, 3, 4]:\n        item.json.sklonenie = \"дня\"\n    else:\n        item.json.sklonenie = \"дней\"\nreturn _input.all()"
      },
      "id": "b9d6be77-d15b-4d74-90f7-99f392a39638",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        2980
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "386f4fe1-4858-4421-a50e-867e5ca497fc",
              "name": "message",
              "value": "=⚠️Через {{ $json.timeDifference }} {{ $json.sklonenie }} истекает срок документа <b>{{ $json.display_name }}</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "987a233e-50b8-4185-9732-399fde0c0eb7",
      "name": "склеиваем",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2380,
        3000
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "message",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "40cbe7dd-68aa-4768-9309-35e1a4e9aa89",
      "name": "объединяем",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2800,
        2980
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "expiration_date"
            }
          ]
        },
        "options": {}
      },
      "id": "bd547111-ac25-4e06-bf76-3dd11b6aa8e6",
      "name": "Sort",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1060,
        2840
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "message",
              "value": "=❗ {{ -$json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} назад истёк срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (был действителен до {{ $json.expiration_date }}) <b>({{ $json.car_id[1] }})</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "37e8796e-fc7c-4f21-ba8a-5114e7b6aecf",
      "name": "если истекло",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2380,
        2820
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "c279c4f7-24a7-46ae-a2c8-048152126560",
      "name": "объединяем в один список",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2600,
        2980
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('объединяем').item.json.concatenated_message }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "view_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2491edfd-864a-4ea7-a9b3-fd6075693c89",
      "name": "отправка сообщения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3000,
        2980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Истекшие документы и документы за 7 дней до истечения",
        "height": 369.39864609379947,
        "width": 2774.539456615861
      },
      "id": "df5e8e1d-e5ca-4ae4-9fe9-5a46cc4456c9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        2791
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.newDate }}",
        "format": "=yyyy-MM-dd, 23:59:59",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "a32382a9-2ae2-44ba-bdd0-fd0c90349b0c",
      "name": "дата и время 23:59",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        660,
        2840
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.newDate }}",
        "format": "=yyyy-MM-dd, 23:59:59",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "8eec7b85-61d6-4eca-8a10-c644619e4bef",
      "name": "дата и время 23:",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1020,
        3180
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "expiration_date",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            },
            {
              "fieldName": "expiration_date",
              "operator": "greaterOrEqual",
              "value": "={{ $('дата и время 23:1').item.json.newformattedDate1 }}"
            }
          ]
        }
      },
      "id": "ef3c1219-e52b-4bf9-85e6-0a42b78e3d50",
      "name": "документы с истекающим сроком1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1260,
        3180
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.newDate }}",
        "format": "=yyyy-MM-dd, 00:00:00",
        "outputFieldName": "newformattedDate1",
        "options": {}
      },
      "id": "ecb5abe2-0e4b-4c92-80ec-661f529c419f",
      "name": "дата и время 23:1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        660,
        3180
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "=yyyy-MM-dd, 00:00:00",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "14333c7f-c944-49f6-8f9b-ded77bcc0f8a",
      "name": "дата и время 23:60",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        680,
        3340
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "expiration_date",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            }
          ]
        }
      },
      "id": "e1dd6e9c-bb05-4a6d-81be-3afb059c533a",
      "name": "документы с истекающим сроком2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        880,
        3340
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4d8ac404-b74b-4df3-8919-0de5596a2e53",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 31,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "a9b1e2e2-566a-4174-a575-d34d9e93a2c3",
      "name": "сколько дней до окончания срока",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2060,
        2980
      ]
    },
    {
      "parameters": {},
      "id": "705ba1f0-4a9e-4203-8767-60f847b927b0",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1500,
        3280
      ]
    },
    {
      "parameters": {
        "content": "## Истекшие документы и документы за 8-14 дней до истечения",
        "height": 369.39864609379947,
        "width": 1215.0811098210288
      },
      "id": "6a703a3e-7220-42bd-8112-958854fdf05b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        3140
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.newDate }}",
        "format": "=yyyy-MM-dd, 23:59:59",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "6c316c93-2659-420a-8ab3-fceffc977036",
      "name": "дата и время 23:2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1020,
        3540
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "expiration_date",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            },
            {
              "fieldName": "expiration_date",
              "operator": "greaterOrEqual",
              "value": "={{ $('дата и время 23:3').item.json.newformattedDate1 }}"
            }
          ]
        }
      },
      "id": "09377689-45ca-433d-b184-9d2bf995eef2",
      "name": "документы с истекающим сроком3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1260,
        3540
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.newDate }}",
        "format": "=yyyy-MM-dd, 00:00:00",
        "outputFieldName": "newformattedDate1",
        "options": {}
      },
      "id": "af6d19d6-038b-45b7-98aa-b5d1f1198ecd",
      "name": "дата и время 23:3",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        660,
        3540
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "=yyyy-MM-dd, 00:00:00",
        "outputFieldName": "newformattedDate",
        "options": {}
      },
      "id": "ecfb548f-e68e-4806-925b-e63a4460645e",
      "name": "дата и время 23:61",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        680,
        3700
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "expiration_date",
              "operator": "lesserOrEqual",
              "value": "={{ $json.newformattedDate }}"
            }
          ]
        }
      },
      "id": "75e742b3-f819-4680-a26f-b331980f37c6",
      "name": "документы с истекающим сроком4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        880,
        3700
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "0b5ed8e2-1ca2-4315-b0e4-00b855683ed0",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1500,
        3640
      ]
    },
    {
      "parameters": {
        "content": "## Истекшие документы и документы за 15-21 дней до истечения",
        "height": 369.39864609379947,
        "width": 1215.0811098210288
      },
      "id": "d1ea052a-00ee-4a23-b999-cd5f6f56d987",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        3500
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 8,
        "options": {}
      },
      "id": "c8f68c7a-6711-48a1-8e5f-c7a0db1315ce",
      "name": "дата через 8 дней",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        500,
        3180
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 14,
        "options": {}
      },
      "id": "9f65d49a-4e72-4dc3-ba5a-3b63f4f9f9a8",
      "name": "дата через 14 дней",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        840,
        3180
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 15,
        "options": {}
      },
      "id": "f15877dc-2ad2-46d4-ad8a-bc7cf1650aaa",
      "name": "дата через 15 дней",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        500,
        3540
      ]
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $today }}",
        "duration": 21,
        "options": {}
      },
      "id": "dede4c86-7f89-4fa0-8c01-092efdadf718",
      "name": "дата через 21 день",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        840,
        3540
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "dd0088db-f90a-4af1-984e-2abc179f4d0e",
      "name": "дата сегодня",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        500,
        3700
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9bd7192b-ba10-47fa-9b5a-de2087c434c0",
      "name": "дата сегодня1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        500,
        3340
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите за какой период хотите проверить документы:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "1-7 дней",
                    "additionalFields": {
                      "callback_data": "7_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "8-14 дней",
                    "additionalFields": {
                      "callback_data": "14_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "15-21 день",
                    "additionalFields": {
                      "callback_data": "21_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "6d1cf742-3abe-4fe0-8ced-d91750c2b98e",
      "name": "возврат к выбору периода",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        480,
        3920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}"
      },
      "id": "f89792c7-b080-4529-aa59-b3939be72301",
      "name": "удаления сообщения с выбором",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        480,
        4100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Проверка сроков документов",
        "height": 1516.856820405149,
        "width": 2918.594993693928,
        "color": 5
      },
      "id": "27dac99a-c678-479e-9d13-7abe1cf3f400",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        180,
        2740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.status }}",
                    "rightValue": "inputing_reject_text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "edd0dd51-a2e0-43b8-94b3-102b684c1d7d",
      "name": "статус механика",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        380,
        1260
      ]
    },
    {
      "parameters": {
        "content": "## Блок сценария для механика",
        "height": 626.7989191511062,
        "width": 1267.9135979457083
      },
      "id": "dab2fc3f-38b7-4d3a-990c-955ced5a517e",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        760
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы авторизовались как механик",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Документы",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "648df508-ff95-4fea-b8f1-7c79fe5cf6f3",
      "name": "Приветственное сообщений",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        840,
        840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ \"/start\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "229c233b-989b-4c60-bf8e-68dc61c424dd",
      "name": "Проверка старта1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        740,
        1240
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Документы",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b564f06f-d287-4560-abcc-e4c4947be235",
      "name": "Проверка кнопок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1000,
        1200
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Выберите за какой период хотите проверить документы:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "1-7 дней",
                    "additionalFields": {
                      "callback_data": "7_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "8-14 дней",
                    "additionalFields": {
                      "callback_data": "14_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "15-21 день",
                    "additionalFields": {
                      "callback_data": "21_days"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a2b311f7-ac09-49a4-8a66-91bb26da27ed",
      "name": "выбор периода документов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=cars.cars",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "id"
          ]
        }
      },
      "id": "9f723b84-2720-4b89-a50a-0f25412fc929",
      "name": "Odoo",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1900,
        2320
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "reject_TO",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0dad3c43-0653-485e-bdde-074fb8ca6551",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "accept_TO",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "17eb9346-9ba1-41dd-94fa-3329106f4f7e",
      "name": "инлайн-кнопки для механика",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        180,
        2200
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "c2a85fc5-c5b4-4058-a9cf-585c848a28a8",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        1860
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "name"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Слесарь"
            }
          ]
        }
      },
      "id": "1aaf7fc6-2a7f-4611-ac09-6797be0b6283",
      "name": "поиск слесарей",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1140,
        4560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "name"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Слесарь"
            }
          ]
        }
      },
      "id": "ef237b58-db9d-48d7-8bd2-feef8083b02d",
      "name": "поиск слесарей1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1220,
        4780
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные\nconst jsonData = items.map(item => item.json); // Входные данные из предыдущей ноды\n\n// Если jsonData — это объект с массивом внутри, например { data: [...] }\nconst data = Array.isArray(jsonData) ? jsonData : jsonData.data || [];\n\n// Инициализируем переменную для формирования сообщения\nlet message = '';\n\n// Пробегаем по каждому объекту в массиве и добавляем нумерацию\ndata.forEach((item, index) => {\n  message += `${index + 1}. ${item.name} (ID: ${item.id})\\n`;  // Нумерация элементов и перенос строки\n});\n\n// Возвращаем результат\nreturn [{ json: { message: message } }];\n"
      },
      "id": "58c52682-9c3a-470a-873f-3dece884050c",
      "name": "Сборка списка слесарей",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2420,
        4460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные\nconst jsonData = items.map(item => item.json); // Входные данные из предыдущей ноды\n\n// Если jsonData — это объект с массивом внутри, например { data: [...] }\nconst data = Array.isArray(jsonData) ? jsonData : jsonData.data || [];\n\n// Инициализируем переменную для формирования сообщения\nlet message = '';\n\n// Пробегаем по каждому объекту в массиве и добавляем нумерацию\ndata.forEach((item, index) => {\n  message += `${index + 1}. ${item.name} (ID: ${item.id})\\n`;  // Нумерация элементов и перенос строки\n});\n\n// Возвращаем результат\nreturn [{ json: { message: message } }];"
      },
      "id": "ee260333-dac1-403c-a2eb-df8280f2967e",
      "name": "Сборка списка слесарей1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        4660
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Список слесарей:\n{{ $json.message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "54c34492-4886-4950-902a-3280a15f480e",
      "name": "Вывод списка слесарей",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2260,
        4420
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Список слесарей:\n{{ $json.message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bd62a97b-b063-4d37-beae-8fa2b113f3d1",
      "name": "Вывод списка слесарей1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2360,
        4820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Формируем массив кнопок с именами и ID\nconst buttons = items.map(item => ({\n    text: `${item.json.name}`, // Текст кнопки — имя\n    callback_data: `TS_${item.json.id}` // ID для каждой кнопки\n}));\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n        [{ text: \"Следующая страница\", callback_data: \"next_page\" }] // Последняя кнопка - завершение проверки\n    ]\n};\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id пользователя, который запустил workflow\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Выберите слесаря:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "6f36ee80-c319-4225-b06b-b5414f7abcfe",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        4560
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "c1f00f09-a0f4-4931-b817-bad7db63d24b",
      "name": "отправляем сообщение 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1740,
        4560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 5;\n\n// Определяем, сколько элементов будем выводить\nconst displayItems = items.slice(0, maxItemsPerPage); // Берем первые 5 элементов\n\n// Формируем массив кнопок с именами и ID, добавляем нумерацию элементов\nconst buttons = displayItems.map((item, index) => ({\n    text: `${index + 1}. ${item.json.name}`, // Добавляем нумерацию перед именем\n    callback_data: `${item.json.id}` // ID для каждой кнопки\n}));\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопку \"Следующая страница\", если элементов больше 5\nif (items.length > maxItemsPerPage) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Следующая страница\", callback_data: \"next_page\" }]);\n}\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id пользователя, который запустил workflow\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Выберите слесаря:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "c947f2a6-d105-4c71-ba88-e7b0e96f482c",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        4560
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "name"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Слесарь"
            }
          ]
        }
      },
      "id": "d4ad81e4-4027-4369-8655-59555fad6357",
      "name": "поиск слесарей2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1200,
        5000
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 5;\n\n// Определяем, сколько элементов будем выводить, начиная с 6-го элемента (индекс 5)\nconst displayItems = items.slice(maxItemsPerPage); // Берем элементы, начиная с 6-го\n\n// Формируем массив кнопок с именами и ID, добавляем нумерацию элементов, начиная с 6\nconst buttons = displayItems.map((item, index) => ({\n    text: `${maxItemsPerPage + index + 1}. ${item.json.name}`, // Добавляем нумерацию перед именем, начиная с 6\n    callback_data: `${item.json.id}` // ID для каждой кнопки\n}));\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопку \"Предыдущая страница\", если есть элементы на предыдущей странице\nif (items.length > maxItemsPerPage) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Предыдущая страница\", callback_data: \"first_page\" }]);\n}\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id пользователя, который запустил workflow\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Выберите слесаря:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "dbe4694d-a8f5-4e03-bb6a-ec3e749fccd0",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        5000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "9096cbe8-d413-4b73-9c3e-683c5f1df0fc",
      "name": "отправляем сообщение ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1720,
        5000
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "5ede58ad-569a-49bb-8cef-2b5926713c32",
      "name": "Удаление прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1440,
        5160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 5;\n\n// Определяем, сколько элементов будем выводить\nconst displayItems = items.slice(0, maxItemsPerPage); // Берем первые 5 элементов\n\n// Формируем массив кнопок с именами и ID, добавляем нумерацию элементов\nconst buttons = displayItems.map((item, index) => ({\n    text: `${index + 1}. ${item.json.name}`, // Добавляем нумерацию перед именем\n    callback_data: `${item.json.id}` // ID для каждой кнопки\n}));\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопку \"Следующая страница\", если элементов больше 5\nif (items.length > maxItemsPerPage) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Следующая страница\", callback_data: \"next_page\" }]);\n}\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id пользователя, который запустил workflow\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Выберите слесаря:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "ea0b9293-8fed-494f-8df3-7e89be9d321f",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        4780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "e4f86686-2536-4b02-9167-5e2691aac496",
      "name": "отправляем сообщение 3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1640,
        4780
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "name"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Слесарь"
            }
          ]
        }
      },
      "id": "bbd98265-25a4-438c-8971-521fcdc011aa",
      "name": "поиск слесарей3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        5380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 5;\n\n// Определяем, сколько элементов будем выводить\nconst displayItems = items.slice(0, maxItemsPerPage); // Берем первые 5 элементов\n\n// Формируем массив кнопок с именами и ID, добавляем нумерацию элементов\nconst buttons = displayItems.map((item, index) => ({\n    text: `${index + 1}. ${item.json.name}`, // Добавляем нумерацию перед именем\n    callback_data: `${item.json.id}` // ID для каждой кнопки\n}));\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопку \"Следующая страница\", если элементов больше 5\nif (items.length > maxItemsPerPage) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Следующая страница\", callback_data: \"next_page\" }]);\n}\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id пользователя, который запустил workflow\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Выберите слесаря:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "ef87545c-1a0a-47f1-8083-0b6f5d8cc90e",
      "name": "Code4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1400,
        5380
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "e34239dc-9744-4a8f-b119-e2e14070a66f",
      "name": "Удаление прошлого сообщения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1280,
        5540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "fdf8098e-645e-4e21-8ba1-cba3bd33c5ce",
      "name": "отправляем сообщение 4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1600,
        5380
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "name"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Слесарь"
            },
            {
              "fieldName": "id",
              "value": "={{ $json.callback_query.data }}"
            }
          ]
        }
      },
      "id": "e4a6bc64-91ad-4ac6-97a4-71ad6fa91e7a",
      "name": "Выбор слесаря",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        780,
        5960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Вы уверены, что хотите назначить работу слесарю {{ $json.name }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назначить",
                    "additionalFields": {
                      "callback_data": "give_work"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "first_page"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "f724a242-e74a-4ede-a906-3605381b3c34",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1040,
        5960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "=do_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3fc6507a-dbe4-408d-a18c-d24ce772b571",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "take_to_fix",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "501b491c-9e53-4a06-9131-ace4e5475acd",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "next_page",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8988c080-1e70-40e4-9c6b-8589fbcd5eb4",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "first_page",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "83dc5f20-fad0-4049-83de-82591dd2e8f1",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "give_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "37c21e0f-b4b7-4d75-8d0f-18b2837ca528",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        0,
        4700
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "7_days",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "29768801-6a74-4a14-be52-f00a8c557555",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "14_days",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ddb933c9-04c7-4d8e-b07e-779c610e9c46",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "21_days",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e674fd05-e952-48d5-b7aa-7cc405f40766",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "view_date",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c9f6d1ed-bbdf-43ea-9a3f-ad3ac67cc13d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "delete_date",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "7714c604-0e14-4fee-be28-0cd1c0dfecfe",
      "name": "разделение на дни для документов",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -80,
        3060
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "Слесарю назначена работа",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d6a622b4-a3e7-4086-bdea-fd418a22128d",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        860,
        5600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем все данные из предыдущего шага\nconst items = $input.all();\n\n// Создадим массив для хранения результатов\nconst results = [];\n\nitems.forEach(item => {\n    // Проверяем, что в item есть текстовое сообщение в правильном поле\n    const messageText = item.json.message?.text || ''; // Получаем текст из item.json.message\n\n    let resultMessage = '';\n\n    // Найдем индекс слова \"слесарю\" в тексте\n    const start = messageText.indexOf('слесарю');\n\n    if (start !== -1) {\n        // Обрезаем строку посимвольно, начиная с индекса после \"слесарю\"\n        let newStr = '';\n        for (let i = start + 'слесарю'.length; i < messageText.length; i++) {\n            newStr += messageText[i];\n        }\n        // Формируем итоговое сообщение\n        resultMessage = `На работу назначен ${newStr.trim()}.`;\n    } else {\n        // Если слово \"слесарю\" не найдено\n        resultMessage = 'Слово \"слесарю\" не найдено в тексте.';\n    }\n\n    // Добавляем результат в массив\n    results.push({ result: resultMessage });\n});\n\n// Возвращаем массив результатов\nreturn results;\n\n"
      },
      "id": "debfc569-faab-4824-9553-b888b731c3b6",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        5240
      ],
      "disabled": true
    }
  ],
  "pinData": {
    "принятие заявки": [
      {
        "json": {
          "id": 457,
          "date": "2024-09-10",
          "date_of_start_work": "2024-09-10 15:57:58",
          "date_of_end_work": "2024-09-10 15:58:52",
          "tech_maintenance": false,
          "hours_for_maintenance": 1,
          "cost": 1,
          "description_of_maintenance": "123",
          "car_id": [
            18,
            "А 459 ТЕ - SCANIA"
          ],
          "sent": false,
          "status": "Готово",
          "image_of_breakage": false,
          "link_of_image_of_breakage": false,
          "image_of_repaired": false,
          "link_of_image_of_repaired": false,
          "performer": false,
          "created_by": [
            2,
            "Алексей Горемыкин"
          ],
          "completed_by": [
            2,
            "Алексей Горемыкин"
          ],
          "schedule_date_start": "2024-09-10 15:57:58",
          "schedule_date_end": "2024-09-10 15:58:52",
          "rate_for_hour": 0,
          "completed_by_is_driver": true,
          "driver_salary": 0,
          "display_name": "А 459 ТЕ - SCANIA - Ремонт",
          "create_uid": [
            2,
            "Administrator"
          ],
          "create_date": "2024-09-09 15:35:05",
          "write_uid": [
            2,
            "Administrator"
          ],
          "write_date": "2024-09-10 15:58:52"
        }
      }
    ],
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100630480,
          "callback_query": {
            "id": "3435691469039577102",
            "from": {
              "id": 799934256,
              "is_bot": false,
              "first_name": "Александр",
              "username": "saniochek_22",
              "language_code": "ru"
            },
            "message": {
              "message_id": 22858,
              "from": {
                "id": 7063451965,
                "is_bot": true,
                "first_name": "Everest n8n",
                "username": "myn8nbotbot"
              },
              "chat": {
                "id": 799934256,
                "first_name": "Александр",
                "username": "saniochek_22",
                "type": "private"
              },
              "date": 1728642518,
              "text": "Вы уверены, что хотите назначить работу слесарю Сотрудник 1 в отделении 3",
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "Назначить",
                      "callback_data": "give_work"
                    }
                  ],
                  [
                    {
                      "text": "Назад",
                      "callback_data": "first_page"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "-5027017175737254521",
            "data": "give_work"
          },
          "tg_id": "799934256",
          "odoo_id": 14,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 29,
          "fuel_liters": 0,
          "weight_measure": "20 м3 ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": 0,
          "count_weight_photo": 0,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 4,
          "end_round_message_id": 22497,
          "last_message_text": "Отлично, вы завершили рейс, хотите начать следующий?\nКарьер Ключевое - Торг. порт\nЩебень (Карьер Ключевое)",
          "logist_notifications": true,
          "cookie": "session_id=9a400578c0ba92891f7e2814bb99ab069ecb1c7c; Expires=Sat, 11 Oct 2025 10:28:51 GMT; Max-Age=604800; HttpOnly; Path=/",
          "seconds": 1.631
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-10-20T12:47:06.606Z",
  "versionId": "a5d37c95-9bb9-405f-abbb-40dc4bed6d0e"
}