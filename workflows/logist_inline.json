{
  "active": false,
  "connections": {
    "введите текст для всех": {
      "main": [
        [
          {
            "node": "статус=ввод оповещения для всех",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопка оповещения1": {
      "main": [
        [
          {
            "node": "дефолтный статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей": {
      "main": [
        [
          {
            "node": "рассылка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную": {
      "main": [
        [
          {
            "node": "изменяем сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим получателей без дубликатов": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия перевозок": {
      "main": [
        [
          {
            "node": "получим получателей без дубликатов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки": {
      "main": [
        [
          {
            "node": "отправляем сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия перевозок1": {
      "main": [
        [
          {
            "node": "получим получателей без дубликатов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим получателей без дубликатов1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение1": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "колбек?": {
      "main": [
        [
          {
            "node": "инлайн кнопки для логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инлайн кнопки для логиста": {
      "main": [
        [
          {
            "node": "введите текст для всех",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопка оповещения1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все авто2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выбор получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки": {
      "main": [
        [
          {
            "node": "проверка наличия перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки1": {
      "main": [
        [
          {
            "node": "проверка наличия перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "колбек?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите текст для получателя": {
      "main": [
        [
          {
            "node": "статус=ввод сообщения для получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "название получателя": {
      "main": [
        [
          {
            "node": "введите текст для получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную1": {
      "main": [
        [
          {
            "node": "изменяем сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки2": {
      "main": [
        [
          {
            "node": "отправляем сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение2": {
      "main": [
        [
          {
            "node": "сохраним получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сохраним получателя": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Введите текст": {
      "main": [
        [
          {
            "node": "обновим статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка2": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную2": {
      "main": [
        [
          {
            "node": "изменяем сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "изменяем сообщение2": {
      "main": [
        [
          {
            "node": "очищаем лишнее",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор получателя": {
      "main": [
        [
          {
            "node": "название получателя",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "айди водителей2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "уведомления о начале рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка1": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы1": {
      "main": [
        [
          {
            "node": "все авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы": {
      "main": [
        [
          {
            "node": "все авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей1": {
      "main": [
        [
          {
            "node": "рассылка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "включаем уведомления": {
      "main": [
        [
          {
            "node": "уведомления включены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выключаем уведомления": {
      "main": [
        [
          {
            "node": "уведомления выключены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаление сообщения": {
      "main": [
        [
          {
            "node": "удаление сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Возврат к выбору типа заявки": {
      "main": [
        [
          {
            "node": "Статус создания перевозки false",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод заявки без шаблона": {
      "main": [
        [
          {
            "node": "Статус создания перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод заявки без шаблона1": {
      "main": [
        [
          {
            "node": "Статус создания перевозки3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем текст перевозки": {
      "main": [
        [
          {
            "node": "диспетчер",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод заявки по шаблону1": {
      "main": [
        [
          {
            "node": "Статус создания перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод заявки без шаблона3": {
      "main": [
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер": {
      "main": [
        [
          {
            "node": "Ввод заявки без шаблона2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод заявки без шаблона3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод заявки по шаблону": {
      "main": [
        [
          {
            "node": "Статус создания перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о создании перевозки": {
      "main": [
        [
          {
            "node": "Статус создания перевозки4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус создания перевозки false3": {
      "main": [
        [
          {
            "node": "тип создания1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Создание перевозки": {
      "main": [
        [
          {
            "node": "Статус создания перевозки false3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод заявки без шаблона",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Возврат к выбору типа заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаление сообщения пользователя",
            "type": "main",
            "index": 0
          },
          {
            "node": "Ввод заявки по шаблону1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод заявки без шаблона1",
            "type": "main",
            "index": 0
          },
          {
            "node": "удаление сообщения пользователя1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получаем текст перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение о создании перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "уведомления о начале рейса": {
      "main": [
        [
          {
            "node": "включаем уведомления",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выключаем уведомления",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаление сообщения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Создание перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "включаем уведомления1": {
      "main": [
        [
          {
            "node": "уведомления включены1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выключаем уведомления1": {
      "main": [
        [
          {
            "node": "уведомления выключены1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = 1": {
      "main": [
        [
          {
            "node": "убираем инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 1": {
      "main": [
        [
          {
            "node": "шаг = 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "шаг 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "уведомления о начале рейса1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "уведомления о начале рейса1": {
      "main": [
        [
          {
            "node": "включаем уведомления1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выключаем уведомления1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "колбеки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 2": {
      "main": [
        [
          {
            "node": "шаг = 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = 2": {
      "main": [
        [
          {
            "node": "удалим кнопки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вернуться к шагу 1": {
      "main": [
        [
          {
            "node": "вернуться к шагу = 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 3": {
      "main": [
        [
          {
            "node": "шаг = 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = 3": {
      "main": [
        [
          {
            "node": "удалим кнопки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вернуться к шагу 2": {
      "main": [
        [
          {
            "node": "вернуться к шагу = 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 4": {
      "main": [
        [
          {
            "node": "шаг = 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = 4": {
      "main": [
        [
          {
            "node": "удалим кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вернуться к шагу 3": {
      "main": [
        [
          {
            "node": "вернуться к шагу = 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг 5": {
      "main": [
        [
          {
            "node": "шаг = 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = 5": {
      "main": [
        [
          {
            "node": "удалим кнопки3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вернуться к шагу 4": {
      "main": [
        [
          {
            "node": "вернуться к шагу = 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите тонны": {
      "main": [
        [
          {
            "node": "задаём тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите м3": {
      "main": [
        [
          {
            "node": "задаём м3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём тонны": {
      "main": [
        [
          {
            "node": "записываем меру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём м3": {
      "main": [
        [
          {
            "node": "записываем меру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вы отменили": {
      "main": [
        [
          {
            "node": "статус дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку": {
      "main": [
        [
          {
            "node": "Вы отменили",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создать перевозку": {
      "main": [
        [
          {
            "node": "убираем кнопки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ошибка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ошибка": {
      "main": [
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку1": {
      "main": [
        [
          {
            "node": "Введите комментарий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Введите комментарий": {
      "main": [
        [
          {
            "node": "статус ввод комментария",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор авто": {
      "main": [
        [
          {
            "node": "шаг = выбор авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "шаг = выбор авто": {
      "main": [
        [
          {
            "node": "удалим кнопки4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто удалён": {
      "main": [
        [
          {
            "node": "удаляем авто в массиве",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопки": {
      "main": [
        [
          {
            "node": "вы создали",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы создали": {
      "main": [
        [
          {
            "node": "статус дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку2": {
      "main": [
        [
          {
            "node": "пустой комментарий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пустой комментарий": {
      "main": [
        [
          {
            "node": "записываем комментарий1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "колбеки": {
      "main": [
        [
          {
            "node": "шаг 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вернуться к шагу 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вернуться к шагу 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вернуться к шагу 3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "шаг 5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вернуться к шагу 4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "введите тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "введите м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "материал",
            "type": "main",
            "index": 0
          },
          {
            "node": "получатели",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вы собираетесь создать перевозку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "создать перевозку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выбор авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "авто удалён",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "задаём м",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "коллбеки ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кубометр": {
      "main": [
        [
          {
            "node": "шаг = ввод ставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейс": {
      "main": [
        [
          {
            "node": "шаг = ввод ставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "тонна": {
      "main": [
        [
          {
            "node": "шаг = ввод ставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "доставка м3": {
      "main": [
        [
          {
            "node": "шаг = ввод доставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "доставка тонны": {
      "main": [
        [
          {
            "node": "шаг = ввод доставки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку3": {
      "main": [
        [
          {
            "node": "пустой авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пустой авто": {
      "main": [
        [
          {
            "node": "записываем пустой авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем авто в массиве": {
      "main": [
        [
          {
            "node": "обновляем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сегодня": {
      "main": [
        [
          {
            "node": "форматируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пустой авто1": {
      "main": [
        [
          {
            "node": "записываем дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем": {
      "main": [
        [
          {
            "node": "пустой авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем1": {
      "main": [
        [
          {
            "node": "пустой авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завтра": {
      "main": [
        [
          {
            "node": "форматируем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод даты": {
      "main": [
        [
          {
            "node": "шаг = ввод даты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "коллбеки ": {
      "main": [
        [
          {
            "node": "убираем кнопку2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейс",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кубометр",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "тонна",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "доставка м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "доставка тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "дата",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завтра",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод даты",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "коллбеки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: выберите объект": {
      "main": [
        [
          {
            "node": "obj: шаг = выбор объекта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: шаг = выбор объекта": {
      "main": [
        [
          {
            "node": "убираем инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: выбор авто": {
      "main": [
        [
          {
            "node": "obj: шаг = выбор авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: шаг = выбор авто": {
      "main": [
        [
          {
            "node": "удалим кнопки5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj авто удалён": {
      "main": [
        [
          {
            "node": "удаляем авто в массиве1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj убираем кнопку1": {
      "main": [
        [
          {
            "node": "Введите комментарий1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj убираем кнопку2": {
      "main": [
        [
          {
            "node": "пустой комментарий1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obj: убираем кнопку": {
      "main": [
        [
          {
            "node": "Вы отменили1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "коллбеки": {
      "main": [
        [
          {
            "node": "obj: выберите объект",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj: выбор авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj авто удалён",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj убираем кнопку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj убираем кнопку2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj: вы собираетесь создать перевозку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "obj: убираем кнопку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "создать работу на объекте",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создать работу на объекте": {
      "main": [
        [
          {
            "node": "убираем кнопки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ошибка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем авто в массиве1": {
      "main": [
        [
          {
            "node": "обновляем3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Введите комментарий1": {
      "main": [
        [
          {
            "node": "статус ввод комментария1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пустой комментарий1": {
      "main": [
        [
          {
            "node": "записываем комментарий3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вы отменили1": {
      "main": [
        [
          {
            "node": "статус дефолтный1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопки1": {
      "main": [
        [
          {
            "node": "вы создали1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ошибка1": {
      "main": [
        [
          {
            "node": "Stop and Error3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы создали1": {
      "main": [
        [
          {
            "node": "статус дефолтный1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто": {
      "main": [
        [
          {
            "node": "номер телефона",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер телефона": {
      "main": [
        [
          {
            "node": "Введите текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей2": {
      "main": [
        [
          {
            "node": "данные логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные логиста": {
      "main": [
        [
          {
            "node": "рассылка2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки2": {
      "main": [
        [
          {
            "node": "перевозки по получателю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки по получателю": {
      "main": [
        [
          {
            "node": "все рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все авто": {
      "main": [
        [
          {
            "node": "автомобили по рейсу на смене",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "автомобили по рейсу на смене": {
      "main": [
        [
          {
            "node": "айди водителей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки3": {
      "main": [
        [
          {
            "node": "перевозки по получателю1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки по получателю1": {
      "main": [
        [
          {
            "node": "все рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все авто1": {
      "main": [
        [
          {
            "node": "автомобили по рейсу на смене1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "автомобили по рейсу на смене1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все авто2": {
      "main": [
        [
          {
            "node": "поиск машин на смене",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск машин на смене": {
      "main": [
        [
          {
            "node": "айди водителей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "материал": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получатели": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "есть данные?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём новые значения": {
      "main": [
        [
          {
            "node": "записываем ставки",
            "type": "main",
            "index": 0
          },
          {
            "node": "выберите ставку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть данные?": {
      "main": [
        [
          {
            "node": "задаём новые значения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выберите ставку1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статусов и генерация единого сообщения": {
      "main": [
        [
          {
            "node": "Вывод свободных машин",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "берем данные машин": {
      "main": [
        [
          {
            "node": "авто компании2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто компании2": {
      "main": [
        [
          {
            "node": "проверка статусов и генерация единого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "берем данные машин",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "берем данные машин1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статусов и генерация единого сообщения1": {
      "main": [
        [
          {
            "node": "Вывод свободных машин1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "берем данные машин1": {
      "main": [
        [
          {
            "node": "авто компании",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто компании": {
      "main": [
        [
          {
            "node": "проверка статусов и генерация единого сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку4": {
      "main": [
        [
          {
            "node": "пустой авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "пустой авто2": {
      "main": [
        [
          {
            "node": "записываем пустой авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вместо меры записываем -1": {
      "main": [
        [
          {
            "node": "выберите ставку4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём м": {
      "main": [
        [
          {
            "node": "Вместо меры записываем -1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-10T08:53:30.059Z",
  "id": "FQ3Oo6qdUEnGnzGK",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "logist_inline",
  "nodes": [
    {
      "parameters": {},
      "id": "b1545e39-d620-49d4-b551-78bd38c726da",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        620,
        240
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите текст сообщения для всех водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "061971a2-8194-4fd6-9fd1-714497f29cb2",
      "name": "введите текст для всех",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1340,
        820
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_alert_for_all"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "aeaa15f8-bbaf-4190-9385-87f6b20638c0",
      "name": "статус=ввод оповещения для всех",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1540,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите вариант оповещения водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить всех",
                    "additionalFields": {
                      "callback_data": "logist_alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить по выбранной перевозке",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить конкретный автомобиль",
                    "additionalFields": {
                      "callback_data": "logist_alert_auto"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "47090f6e-fff7-4fb3-b46a-ae50a50c2df5",
      "name": "кнопка оповещения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1340,
        1200
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b47f6916-5cfc-4a3c-a7d6-2439968a8790",
      "name": "айди водителей",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1580,
        1380
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей').item.json.tg_id }}",
        "text": "=Оповещение от логиста:\n<i>{{ $('Execute Workflow Trigger').item.json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2ab95420-b5c1-48b3-99d0-9fa61a3423dc",
      "name": "рассылка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1780,
        1380
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Оповещения для всех водителей на смене",
        "height": 799.4991199079257,
        "width": 1321.0782113186833,
        "color": 6
      },
      "id": "86142f78-696f-4ec2-abc6-d3afa8173c82",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1260,
        760
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "b77b1717-06e0-43ef-8e68-04323a7b6b07",
      "name": "преобразуем в 1 переменную",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2020,
        1380
      ]
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "partner[1]",
        "options": {}
      },
      "id": "622ce01b-079b-4dfa-adbe-18d04e7aa14b",
      "name": "получим получателей без дубликатов",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        1780,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "212b0082-afe8-42e0-875b-0f05d21f7383",
      "name": "проверка наличия перевозок",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1540,
        1020
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Перевозки на сегодня не найдены"
        }
      },
      "id": "2e095175-ab59-4155-a825-af589cc52e54",
      "name": "заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1780,
        1140
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.partner[1]}`,\n    callback_data: `AT_${item.json.partner[1]}` // AT - alert transportation\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на получателя\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "480d66dd-cf3f-4f1a-a84c-a3e057767559",
      "name": "создаём динамически инлайн кнопки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2000,
        960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "0b40f72a-3ff5-4fd6-b7c6-b6996942e80c",
      "name": "отправляем сообщение",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2220,
        960
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "faee4c24-3004-42da-8760-bf95df6734c2",
      "name": "удаляем прошлое сообщение с заявками",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2440,
        960
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.inline_chat_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "6c73aa70-02d3-4005-9295-7f8349aa9601",
      "name": "дефолтный статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1540,
        1200
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9fd61b43-f024-4210-b389-6aa1ca8c59d3",
      "name": "проверка наличия перевозок1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        1760
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Перевозки на сегодня не найдены"
        }
      },
      "id": "9387d22f-8d67-42f6-afcb-3609534813cf",
      "name": "заявки не найдены1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1800,
        1880
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "partner[1]",
        "options": {}
      },
      "id": "36ad321f-1897-426c-bfe7-8350cce115e2",
      "name": "получим получателей без дубликатов1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        1800,
        1700
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.partner[1]}`,\n    callback_data: `CT_${item.json.partner[1]}` // CT - Choise Transportation for auto alert\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Чтобы найти автомобиль, выберите получателя:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "815c07e8-9271-4ea1-9e03-85216f9ec27a",
      "name": "создаём динамически инлайн кнопки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        1700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "bf885fce-e2f0-46eb-901f-6d55fb7a3ab5",
      "name": "отправляем сообщение1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2240,
        1700
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "d285e749-0af3-453d-8010-5079b2307116",
      "name": "удаляем прошлое сообщение с заявками1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2460,
        1700
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Выбор получателя при оповещении конкретного авто",
        "height": 458.39652118337546,
        "width": 1328.4103837921157,
        "color": 6
      },
      "id": "70151877-4567-42ee-9eb1-d006fe3d358b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1280,
        1620
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено всем водителям на смене",
        "additionalFields": {}
      },
      "id": "b29e5e44-84d0-4259-9d65-8c23f1848e08",
      "name": "изменяем сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2240,
        1380
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a18f2808-839a-41e7-a5b2-19427e4e6b30",
              "leftValue": "={{ $json.callback_query.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c8fa6b27-ce03-4c48-9799-c51a2324b289",
      "name": "колбек?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1020,
        640
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "424c6e2a-a988-406f-9a0a-13a079991adb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "89372a57-be12-40be-9a51-4fa9938c8205",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_to_alert_menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "16d7aef0-6c20-4f44-a9ee-46c21e2a786f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5b842fea-b857-45e2-95ad-6e5dc9d17200",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3d40c76c-0f7f-458d-aaef-b7e7b2750587",
      "name": "инлайн кнопки для логиста",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1080,
        1100
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_transportation_by_date",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ $today }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2d8cd858-404c-4826-81b7-e08bff70fac6",
      "name": "все сегодняшние перевозки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        1020
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_transportation_by_date",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ $today }}"
            }
          ]
        },
        "options": {}
      },
      "id": "95516a40-79e3-4a45-8ca4-a714d48fb08f",
      "name": "все сегодняшние перевозки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        1780
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выбрали получателя <b>{{ $json[\"AT_name\"] }}</b>. Введите текст сообщения для водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "5f160a49-ba1e-440b-b0e9-0fe5848e468e",
      "name": "введите текст для получателя",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1980,
        2480
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "AT_name",
              "value": "={{ $json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "71a50844-733f-46bc-9e0f-a9e948f82063",
      "name": "название получателя",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1740,
        2480
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "inputing_alert_for_transportation",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "logist_recipient_name": "={{ $('название получателя').item.json.AT_name }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "309f8c57-d775-4d41-b72e-068a8db43824",
      "name": "статус=ввод сообщения для получателя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2200,
        2480
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "2aa64be4-a9ff-4151-bcbd-b425bb85a69a",
      "name": "преобразуем в 1 переменную1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2940,
        2720
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено всем водителям с выбранным получателем",
        "additionalFields": {}
      },
      "id": "7205eb97-3d06-4eb0-9ecb-a31a0b249769",
      "name": "изменяем сообщение1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3160,
        2720
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Оповещения по получателю",
        "height": 496.20554104438617,
        "width": 1722.0426037145492,
        "color": 6
      },
      "id": "d5fe4fd4-8360-4da2-8036-7afe7f31e8a7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1620,
        2440
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.number_car}`,\n    callback_data: `AA_${item.json.number_car}` // AA - Alert Auto\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7063451965:AAGARL6Eluwh3zgS84WnaZozqdz6-m0RLzg';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nvar partner = $('Execute Workflow Trigger').all()[0].json.callback_query.data.substring(3);\n\nconst message = {\n    chat_id: chatId,\n    text: \"Текущие автомобили на смене с получателем <b>\" + partner + \"</b>:\",\n    reply_markup: inlineKeyboard,\n    parse_mode: \"html\",\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message,\n        }\n    }\n];\n"
      },
      "id": "388d5ffe-9db2-4bf4-b1e7-ab8d13fc136b",
      "name": "создаём динамически инлайн кнопки2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2460,
        3089
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "824fb6d1-13a1-44a0-acec-bb3f88a98627",
      "name": "отправляем сообщение2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2680,
        3089
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "1f921945-cf01-4e35-b17c-8c1433009556",
      "name": "удаляем прошлое сообщение с заявками2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3080,
        3100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Выбор авто при оповещении конкретного авто",
        "height": 291.3280243517646,
        "width": 1583.8999452987441,
        "color": 6
      },
      "id": "980dc367-3bcb-4871-ac21-1ecf7769ff1c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1633.9363724649133,
        3000
      ]
    },
    {
      "parameters": {
        "content": "## Данные водителя",
        "height": 291.3280243517646,
        "width": 859.843468703775,
        "color": 6
      },
      "id": "d5da14ec-3158-4c94-977d-3397aa55f7ef",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        3320
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "logist_recipient_name": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ee72b0bf-dfd9-4876-a98e-96e9039f6467",
      "name": "сохраним получателя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2880,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Текущий водитель {{ $('данные авто').item.json.number_car }}:\n{{ $('данные авто').item.json.driver_id[1] }} <a href=\"tel:{{ $json.mobile_phone }}\">{{ $json.mobile_phone }}</a>\n\nВведите текст сообщения:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "19539331-4ac9-425a-a601-b12e25f38ff0",
      "name": "Введите текст",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2160,
        3380
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_alert_for_auto",
            "logist_recipient_name": "={{ $('данные авто').item.json.driver_id[0] }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "fbc808e4-c8b7-4df0-8f6b-65c7ed9f51c1",
      "name": "обновим статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2380,
        3380
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.logist_recipient_name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "46a19305-d59b-408c-bc63-4466ffc14c2a",
      "name": "айди водителей2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1720,
        3740
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей2').item.json.tg_id }}",
        "text": "=Оповещение от логиста {{ $json.display_name }}:\n<i>{{ $('Execute Workflow Trigger').all()[0].json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2fd073c6-d899-4c37-b996-7f9433e88d60",
      "name": "рассылка2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2160,
        3740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "441ffd51-6f94-402f-87c8-b9d6c8e9125b",
      "name": "преобразуем в 1 переменную2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2400,
        3740
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено водителю",
        "additionalFields": {}
      },
      "id": "bfd5e586-7514-4774-b8af-28bdbb00d4ae",
      "name": "изменяем сообщение2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2620,
        3740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "authorized",
            "logist_alert_text": "={{ null }}",
            "logist_recipient_name": "={{null}}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "2733ca82-6749-4191-ae3c-85742068d682",
      "name": "очищаем лишнее",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2820,
        3740
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "content": "## Рассылка конкретному водителю",
        "height": 291.3280243517646,
        "width": 1357.8959494683481,
        "color": 6
      },
      "id": "1020fed5-cc4c-40c1-abfa-1e3437d7abdd",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1680,
        3660
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"AT_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "954e80e5-89fc-4093-b0dc-fa39a23981d8",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a0342fdb-9d78-4568-a12f-78a834e4beb3",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"CT_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "46c02646-5c28-434d-9b36-e7122502fcd6",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"AA_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "4b24e9f4-fcd8-46b6-a853-71cb4b316917",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "fe12e643-d601-45a0-98e5-6af0f161c3c6",
      "name": "выбор получателя",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1240,
        2760
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей1').item.json.tg_id }}",
        "text": "=Оповещение от логиста:\n<i>{{ $('Execute Workflow Trigger').all()[0].json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6531bfa2-ed51-494f-abd6-b1c69b4f3d4c",
      "name": "рассылка1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2700,
        2720
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = [];\nfor (const item of $input.all()) {\n  for(const round of item.json.rounds) {\n    rounds.push(round);\n  }\n}\n\nreturn {\"rounds\": rounds};"
      },
      "id": "d1157a26-0ffa-43ca-929f-5ee5fe640a49",
      "name": "все рейсы1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1960,
        3089
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = [];\nfor (const item of $input.all()) {\n  for(const round of item.json.rounds) {\n    rounds.push(round);\n  }\n}\n\nreturn {\"rounds\": rounds};"
      },
      "id": "c33320dc-ac40-49c8-962d-b35725e74635",
      "name": "все рейсы",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        2720
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a0dcd02f-ccab-485b-9640-d6fbb6f4c459",
      "name": "айди водителей1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2480,
        2720
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "logist_notifications": "={{ true }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "1f587ac6-d368-4263-939e-fd51a2e53323",
      "name": "включаем уведомления",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1960,
        4100
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Уведомления о начале рейсов водителями <b>включены</b>!\nЧтобы их отключить, нажмите на кнопку \"Уведомления\"",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2b7fb5bc-75dc-4fac-b9a4-e8700d03194c",
      "name": "уведомления включены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2300,
        4100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "logist_notifications": "={{ false }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "2a55dd77-f3e7-4775-9e33-ed503a47dd54",
      "name": "выключаем уведомления",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1960,
        4300
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Уведомления о начале рейсов водителями <b>выключены</b>!\nЧтобы их включить, нажмите на кнопку \"Уведомления\"",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "9966338f-b150-4b4f-a8bb-3445eb900c31",
      "name": "уведомления выключены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2300,
        4300
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Включение или выключение уведомлений у логиста",
        "height": 419.5437434335208,
        "width": 612.083708994365
      },
      "id": "b720c017-122d-40c2-82af-c5ef552dfa99",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        4021
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "060bf381-c3e7-475a-8418-5ded8818e3a0",
      "name": "удаление сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1960,
        4560
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1}}"
      },
      "id": "20b15863-8046-40dc-8535-f41f1a656de5",
      "name": "удаление сообщения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2220,
        4560
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Удаление сообщения включения/отключения уведомлений",
        "height": 248.53603435626414,
        "width": 511.7850356982991
      },
      "id": "039068be-fe06-400b-b478-f87cb59dfd58",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1880,
        4481
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Выберите способ создания заявки:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "По шаблону",
                    "additionalFields": {
                      "callback_data": "pattern"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Без шаблона",
                    "additionalFields": {
                      "callback_data": "no_pattern"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "389f5e52-2546-496d-b7de-cfd5f052e2bf",
      "name": "Возврат к выбору типа заявки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2240,
        5160
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "create_transportation_pattern"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c6b7671d-f0df-4440-bd4b-38880b105945",
      "name": "Статус создания перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3040,
        5060
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отправьте текст для создания заявки на перевозку",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "pick_type"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "b1cea348-b68e-4845-84c7-17c542423100",
      "name": "Ввод заявки без шаблона",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2240,
        4960
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "create_transportation_no_pattern"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "78f546dd-0265-44b3-a59a-7eb4269f13e3",
      "name": "Статус создания перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2440,
        4960
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отправьте текст для создания заявки на перевозку",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "pick_type"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5c03f004-f7c2-4ba8-9125-6fb324ce01ac",
      "name": "Ввод заявки без шаблона1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2220,
        5640
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "create_transportation_no_pattern"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "3e9bcb5d-1dc9-419c-b6d2-aff6ff2f6577",
      "name": "Статус создания перевозки3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2500,
        5640
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id-1 }}"
      },
      "id": "aed78f8b-94a2-48af-bd66-3b8408960b86",
      "name": "удаление сообщения пользователя",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2280,
        5460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id-1 }}"
      },
      "id": "ec2ce974-d88d-4295-a6bf-1feff2197786",
      "name": "удаление сообщения пользователя1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2220,
        5820
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e5648e7d-fcfb-4431-bcef-e7a02173cbcf",
      "name": "Получаем тг id диспетчера",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3200,
        5360
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Создание перевозки').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6126c655-223b-4863-933c-2e3717e1fc0b",
      "name": "Получаем текст перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1940,
        6100
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Создание перевозки').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Создание перевозки').item.json.callback_query.message.message_id }}",
        "text": "Ваша заявка на создание перевозки доставлена диспетчеру",
        "additionalFields": {}
      },
      "id": "c477869b-5341-41ad-a816-314a2f0a0b72",
      "name": "Сообщение доставлено диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3100,
        5600
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Создание перевозки",
        "height": 1678.6555717337314,
        "width": 1843.9361657028544,
        "color": 6
      },
      "id": "3fa159ab-4e67-4b24-9d28-e5f0d7c40df2",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1500,
        4760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Шаблон для перевозки:\nНомера машин;\nМатериал, количество ед.измерения;\nОт - До, Компания-получатель;\nКомментарий\n\n\nКомментарии к шаблону:\nНомера машин перечисляются через запятую без пробела. Материал, От, До и Компанию-получателя необходимо указывать, так как они указаны в Odoo в именительном падеже. Комментарий не может занимать несколько строк. Единицы измерения указываются как т и м3. Комментарий может быть не указан.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "pick_type"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "7282b826-2100-48b4-9691-293bfb1415c9",
      "name": "Ввод заявки по шаблону1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2440,
        5360
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Перевозка <b>{{ $json.display_name }}</b> ожидает назначения в Odoo.",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "30e78808-a5bf-4262-a570-548573113393",
      "name": "Ввод заявки без шаблона2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2460,
        6040
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Перевозка не создана, попробуйте еще раз!",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "0a3e73c7-39d0-4837-a48f-be0a7d3524dc",
      "name": "Ввод заявки без шаблона3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2460,
        6240
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "1edfa250-0045-4e10-8586-090f37a7077b",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2660,
        6240
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/create_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"{{ $json.creating_transportation.replace(/[\\r\\n]+/g, '') }}\"\n} ",
        "options": {}
      },
      "id": "fe69d61c-18cb-464b-a3b2-0163124b9cd5",
      "name": "диспетчер",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2120,
        6100
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Шаблон для перевозки:\nНомера машин;\nМатериал, количество ед.измерения;\nОт - До, Компания-получатель;\nКомментарий\n\n\nКомментарии к шаблону:\nНомера машин перечисляются через запятую без пробела. Материал, От, До и Компанию-получателя необходимо указывать, так как они указаны в Odoo в именительном падеже. Комментарий не может занимать несколько строк. Единицы измерения указываются как т и м3. Комментарий может быть не указан.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "pick_type"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "4d9c1b9b-14db-418c-87ca-f86ca7ccbb6e",
      "name": "Ввод заявки по шаблону",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2720,
        5060
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "create_transportation_pattern"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1d826175-7662-4974-84d6-bada1a0122c7",
      "name": "Статус создания перевозки4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1860,
        5320
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.from.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Шаблон для перевозки:\nНомера машин;\nМатериал, количество ед.измерения;\nОт - До, Компания-получатель;\nКомментарий\n\n\nКомментарии к шаблону:\nНомера машин перечисляются через запятую без пробела. Материал, От, До и Компанию-получателя необходимо указывать, так как они указаны в Odoo в именительном падеже. Комментарий не может занимать несколько строк. Единицы измерения указываются как т и м3. Комментарий может быть не указан.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_create"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "d4e65b1e-02fa-498e-8efd-590a4e1535ae",
      "name": "Сообщение о создании перевозки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1760,
        5100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "create_transportation_pattern"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "75a07b1d-3ecf-48a7-aebe-f454580b1144",
      "name": "Статус создания перевозки2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2620,
        5360
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "715d2b9d-defb-43ac-91c7-fd788e36e667",
      "name": "Статус создания перевозки false",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2460,
        5160
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_create_transportation",
              "displayName": "logist_create_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "06e614e9-4884-4ef8-9e68-9a33eafbc314",
      "name": "Статус создания перевозки false3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2560,
        4800
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите способ создания:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Без шаблона",
                    "additionalFields": {
                      "callback_data": "no_template"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "По шаблону",
                    "additionalFields": {
                      "callback_data": "by_template"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "f0440ccb-19e8-4bf4-bb95-14b38466d658",
      "name": "тип создания1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2820,
        4800
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_create",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "420c75cf-0f6b-4c6a-8652-f46d12217ea7",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "no_pattern",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52f588c0-e27d-45cf-ac2b-fac6c2c80a1c",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "pick_type",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cbc9f514-874c-447c-b8f1-c79e76bbe89d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "pattern_delete_user_message",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2cf700ed-c3c8-4c2b-bf08-4026b691ed36",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "no_pattern_delete_user_message",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2f2cdac4-5159-4117-b48c-a9b0ef781277",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "send_to_dispetcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e774867e-5286-45e3-8184-cd19ec529116",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "no_template",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "ddb5ee96-2e83-4b63-9a1e-ca23d75251e9",
      "name": "Создание перевозки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1540,
        4820
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "notifications_on",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c1a0835a-7ea0-4374-893b-57e9d8bc6f2f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "notifications_off",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0a97d100-4edd-4fc0-a2d5-07746ec8048f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_notifications",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "e6dd3bdf-94f1-49bc-9be6-293ab156d895",
      "name": "уведомления о начале рейса",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1480,
        4200
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "no_taking_shift_logist_notify": "={{ true }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "29c44e97-d80a-4e44-aefb-44916176bfa4",
      "name": "включаем уведомления1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        740,
        6260
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Уведомления об опозданиях водителей <b>включены</b>!\nЧтобы их отключить, нажмите на кнопку \"Начали смену?\"",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1f9e231a-850d-40b8-b3de-3f7304e0930e",
      "name": "уведомления включены1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1000,
        6260
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "no_taking_shift_logist_notify": "={{ false }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1acbd939-59da-4500-ac35-72246e6fffd4",
      "name": "выключаем уведомления1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        740,
        6460
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Уведомления об опозданиях водителей <b>выключены</b>!\nЧтобы их включить, нажмите на кнопку \"Начали смену?\"",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1d13243f-3017-4821-9111-8444435ede37",
      "name": "уведомления выключены1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1000,
        6460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Уведомления об опоздании",
        "height": 427.9293546709152,
        "width": 545.5542994154315,
        "color": 6
      },
      "id": "b49378c4-9097-442c-8acc-f8ad5d4696de",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        6180
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "1_input_from",
            "logist_template": "={{\n{\n\"quarry.quarry\": \"\",\n\"transportation.place\": \"\",\n\"transportation.rates\": \"\",\n\"transportation.material\": \"\",\n\"measure\": \"\",\n\"weight\": \"\",\n\"cost_per_cubic_metre\": \"0\",\n\"cost_per_tonne\": \"0\",\n\"delivery_cost_per_cubic_metre\": \"0\",\n\"delivery_cost_per_tonne\": \"0\",\n\"round_rate\": \"0\",\n\"comment\": \"\",\n\"cars\": [],\n\"date\": \"\"\n}\n}}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "98dbbf75-0936-435c-a5b5-0c947c9283bd",
      "name": "шаг = 1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1940,
        6480
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "<b>Выберите, откуда будет выполняться перевозка</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список карьеров",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Карьер \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад к выбору шаблона",
                    "additionalFields": {
                      "callback_data": "back_create"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "815592c5-5378-4ec0-ae63-7397fd557d83",
      "name": "шаг 1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1760,
        6480
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "by_template",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3ec7a057-dc83-412a-9c1d-b00c4daaa037",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1520,
        6480
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Выберите способ создания:",
        "additionalFields": {}
      },
      "id": "64e5c958-2e70-41f5-9f61-9661b0952155",
      "name": "убираем инлайн кнопки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2140,
        6480
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "no_taking_notifications_on",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c1a0835a-7ea0-4374-893b-57e9d8bc6f2f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "no_taking_notifications_off",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "e6e65df1-906f-4f28-8129-a13b07ca4f0c",
      "name": "уведомления о начале рейса1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        460,
        6960
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "<b>Выберите, куда будут доставляться материалы</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список мест для доставки",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Место доставки \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "978562af-134d-4d50-a013-d615da260787",
      "name": "шаг 2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "2_input_to"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "8ac0452d-67f6-4ac4-96c9-5bb42ac53091",
      "name": "шаг = 2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4120,
        6160
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "da6cc831-140e-4ebb-9f6e-b3ec26fe7025",
      "name": "удалим кнопки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4340,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "<b>Выберите, откуда будет выполняться перевозка</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список карьеров",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Карьер \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "41987fe1-62e4-4f49-87ef-d7ffc8c9dd5c",
      "name": "Вернуться к шагу 1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6300
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "1_input_from"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "71c9e54f-612e-48e0-b8ec-b9b77ef8279b",
      "name": "вернуться к шагу = 1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4120,
        6300
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "cecb3cc7-2aee-40f4-ad28-65310528e27e",
      "name": "удалим кнопки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4320,
        6460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "<b>Выберите получателя</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список получателей",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Получатель \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "97406b04-5fd2-4c7c-b695-aa18f75bdb32",
      "name": "шаг 3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "3_input_partner"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "214f1e28-df97-4086-a568-d8177c0ec5cc",
      "name": "шаг = 3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        6460
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "<b>Выберите, куда будут доставляться материалы</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>\n",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список мест для доставки",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Место доставки \" }}\t"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "518887a4-5bf3-464e-9d52-dab09d18b712",
      "name": "Вернуться к шагу 2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6600
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "2_input_to"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "71ddfddf-c8c2-4f98-a572-25ce5dd2e544",
      "name": "вернуться к шагу = 2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        6600
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "b000c143-88f1-4c1a-815c-3810eba05713",
      "name": "удалим кнопки2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4320,
        6780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "<b>Выберите материал</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список материалов",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Материал \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c8f4fc8b-125f-4998-958a-f4c2509d61c7",
      "name": "шаг 4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "4_input_material"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "21d6a21f-5c10-4984-bca7-a2320e913ba1",
      "name": "шаг = 4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        6780
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "<b>Выберите получателя</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>\n",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список получателей",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Получатель \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "5ab7faa1-60dd-4d10-a6a4-5f435a19cbee",
      "name": "Вернуться к шагу 3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        6940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "3_input_partner"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "49b7e379-599d-4564-aef3-60fe0f413c68",
      "name": "вернуться к шагу = 3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        6940
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "031e0ae0-928d-4f96-abf7-66d47f6dd9bf",
      "name": "удалим кнопки3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4320,
        7120
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "Выберите условие завершения перевозки. При выборе “тонны” или “м3” следующим шагом будет выбор количества для завершения.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "тонны",
                    "additionalFields": {
                      "callback_data": "template_t"
                    }
                  },
                  {
                    "text": "м3",
                    "additionalFields": {
                      "callback_data": "template_m3"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "В течении смены",
                    "additionalFields": {
                      "callback_data": "without_material"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e351e7a4-c336-40bf-aecf-7a44ebef436d",
      "name": "шаг 5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        7120
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "5_input_measure"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "fa440dbb-fc6c-44d8-9276-7749c71b9dff",
      "name": "шаг = 5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        7120
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "<b>Выберите материал</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список материалов",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Материал \" }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "e2c5941d-cfa5-4f89-a16f-091e5aa5a9f0",
      "name": "Вернуться к шагу 4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        7280
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "4_input_material"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "278c8b13-68fd-4a1f-927a-bbcc799e55f5",
      "name": "вернуться к шагу = 4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        7280
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите количество материала в тоннах:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_5"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "00d1fd16-4e8b-44ff-84cc-51411c09ac2e",
      "name": "введите тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        7460
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите количество материала в м3:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_5"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "c61bbdbe-f8c0-42eb-bd26-bc3e4ee3c3aa",
      "name": "введите м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        7620
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['measure'] = \"т.\";\nreturn {\"data\": res};"
      },
      "id": "a1f8f687-ebcf-41a8-973f-a4e0fb3731e0",
      "name": "задаём тонны",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4100,
        7460
      ]
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['measure'] = \"м3\";\nreturn {\"data\": res};"
      },
      "id": "c26fe368-37ed-45f3-8f65-a1606d39ef67",
      "name": "задаём м3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4100,
        7620
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b0ae525d-8288-4302-9d64-697fe5df4164",
      "name": "записываем меру",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4320,
        7540
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы собираетесь создать перевозку:\n\nОт - <b>{{ $json.logist_template['quarry.quarry'] }}</b>\nДо - <b>{{ $json.logist_template['transportation.place'] }}</b>\nПолучатель - <b>{{ $json.logist_template['transportation.rates'] }}</b>\nМатериал - <b>{{ $json.logist_template['transportation.material'] }}</b>\nКоличество - <b>{{ $json.logist_template.weight }} {{ $json.logist_template.measure }}</b>\n\nСтоимость за кубометр - <b>{{ $json.logist_template.cost_per_cubic_metre }} руб.</b>\nСтоимость за тонну - <b>{{ $json.logist_template.cost_per_tonne }} руб.</b>\nСтоимость доставки за кубометр - <b>{{ $json.logist_template.delivery_cost_per_cubic_metre }} руб.</b>\nСтоимость доставки за тонну - <b>{{ $json.logist_template.delivery_cost_per_tonne }} руб.</b>\nСтавка за рейс - <b>{{ $json.logist_template.round_rate }} руб.</b>\n\nКомментарий - <i>{{ $json.logist_template.comment }}</i>\nАвтомобили - {{ $json.logist_template.cars.join(\", \") }}\nДата - <b>{{ $json.logist_template.date }}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать",
                    "additionalFields": {
                      "callback_data": "make_transportation"
                    }
                  },
                  {
                    "text": "Отменить",
                    "additionalFields": {
                      "callback_data": "cancel_template"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "79991472-f802-4327-9d18-e87b63a381d1",
      "name": "вы собираетесь создать перевозку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3860,
        8080
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Вы отменили создание перевозки",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "444ba6a7-f241-41f3-ae11-9280f576dd9c",
      "name": "Вы отменили",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        8200
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "869c334b-b7bb-4e3c-ac95-471c926d6992",
      "name": "убираем кнопку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3820,
        8240
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "e9afc0cb-3266-415d-b3cd-7ddca73f18c0",
      "name": "статус дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4500,
        8140
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/create_transportation_no_sample",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "cars",
              "value": "={{ $json.logist_template.cars }}"
            },
            {
              "name": "from",
              "value": "={{ $json.logist_template['quarry.quarry'] }}"
            },
            {
              "name": "to",
              "value": "={{ $json.logist_template['transportation.place'] }}"
            },
            {
              "name": "partner",
              "value": "={{ $json.logist_template['transportation.rates'] }}"
            },
            {
              "name": "material",
              "value": "={{ $json.logist_template['transportation.material'] }}"
            },
            {
              "name": "required",
              "value": "={{ $json.logist_template.weight.toNumber() }}"
            },
            {
              "name": "measure",
              "value": "={{ $json.logist_template.measure == \"т.\" ? \"т\" : ($json.logist_template.measure == \"м3\" ? \"м3\" : \"В течении смены\") }}"
            },
            {
              "name": "round_rate",
              "value": "={{ $json.logist_template.round_rate.toNumber() }}"
            },
            {
              "name": "comment",
              "value": "={{ $json.logist_template.comment }}"
            },
            {
              "name": "date",
              "value": "={{ $json.logist_template.date }}"
            },
            {
              "name": "cost_per_cubic_metre",
              "value": "={{ $json.logist_template.cost_per_cubic_metre.toNumber() }}"
            },
            {
              "name": "delivery_cost_per_cubic_metre",
              "value": "={{ $json.logist_template.delivery_cost_per_cubic_metre.toNumber() }}"
            },
            {
              "name": "=cost_per_tonne",
              "value": "={{ $json.logist_template.cost_per_tonne.toNumber() }}"
            },
            {
              "name": "delivery_cost_per_tonne",
              "value": "={{ $json.logist_template.delivery_cost_per_tonne.toNumber() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "72cac126-7946-4b92-9efd-e4ece06ef8bf",
      "name": "создать перевозку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3820,
        8420
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Что-то пошло не так, перевозка не создана",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "667b2276-c8a0-4aee-90e0-7b1c91d0e2d6",
      "name": "ошибка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4160,
        8520
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "content": "## Машина состояний (FSM)",
        "height": 5164.440225289508,
        "width": 913.4145564597231,
        "color": 6
      },
      "id": "aadd2f9a-48ab-4a16-91e9-76802b804795",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3780,
        6160
      ]
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "a5ddd86e-4298-4e5e-9e71-d9e52b2159f2",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4360,
        8520
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "a9c0c163-b7c5-4fc5-8d53-7ac494eca092",
      "name": "убираем кнопку1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3820,
        8740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Введите комментарий:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Пропустить комментарий",
                    "additionalFields": {
                      "callback_data": "skip_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "40e91e4a-9d5b-4042-8ae5-58db96183273",
      "name": "Введите комментарий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        8740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "input_comment",
            "last_message_text": "={{ $json }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "49589125-fabe-44c5-8da8-134101a2e886",
      "name": "статус ввод комментария",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4240,
        8740
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "<b>Выберите автомобили</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список авто перевозчиков",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать без автомобиля",
                    "additionalFields": {
                      "callback_data": "skip_cars"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "48820038-624e-4f8c-ae63-949d48988143",
      "name": "выбор авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3820,
        8940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "input_cars"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "e992c9ec-4fd9-47ec-b1f9-82f04279f159",
      "name": "шаг = выбор авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4020,
        8940
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "edd89c82-b0bf-435e-8362-6860c70a2e1e",
      "name": "удалим кнопки4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4220,
        8940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы <b>удалили</b> автомобиль <b>{{ $json.logist_template.cars.last()}}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто перевозчика",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к дате",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "cancel_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "f4930c5c-913d-4bae-ac08-c175558670f3",
      "name": "авто удалён",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3820,
        9120
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "logist_template": "={{ $json.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "c4d425c4-ea4c-4d55-bae2-f28f041a3062",
      "name": "обновляем1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4220,
        9120
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "55bfb1c5-e6de-43b1-8f4b-fc26a400d7c1",
      "name": "убираем кнопки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4160,
        8360
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Вы создали новую перевозку.\n<a href=\"https://dev.everest.lamart.site/web#id={{ $('создать перевозку').item.json.id }}&model=transportation.transportation&view_type=form\">Ссылка на перевозку в Odoo</a>",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "id": "c8df951c-233f-4037-9b69-87736fc124bb",
      "name": "вы создали",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4360,
        8360
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы пропустили ввод комментария",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_input_cars"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "49f226b9-e9d2-48b6-9ebb-e45cc7ee899a",
      "name": "убираем кнопку2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3880,
        9340
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "0cf79f35-7fe5-4c7a-b569-60903312df97",
      "name": "записываем комментарий1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4300,
        9340
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = \"\";\nreturn {\"data\": res};"
      },
      "id": "46687b0e-26ff-4a16-b93e-3b3f8d838277",
      "name": "пустой комментарий",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4100,
        9340
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "29955116-05c4-4615-8395-d1ff584d5f26",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "=back_to_1",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "266e7517-df29-40d9-b538-6cbcd3de49a3",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_3",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9182bb36-5d51-498f-b138-3f19d3854f43",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_to_2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8af68d06-bedb-48e0-b925-a8873bcdbbd4",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_4",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5f2dd65f-6904-402f-b6fb-9400e58314b7",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_to_3",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5489ffa7-ab44-4efd-a26f-47f05702197d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_5",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fb5e298d-fb33-426d-95d9-d5a84db45aea",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_to_4",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f706f37-3542-41e0-a9b1-010076b516f3",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "template_t",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3e1e3916-3ed0-4e9c-b6f1-7c89dc310aaa",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "template_m3",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c3e2ab43-3741-4db4-9ece-4b7a7fab754d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "inpute_rate",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "74723b41-1d67-40cc-960b-46264cd45ced",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_check",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1740a3d6-849d-4503-b60c-48d9387b7359",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "cancel_template",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "41fec7b5-951c-4230-9f2e-5d565e15c26a",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "make_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3017fd53-a040-42f8-9862-8e657df2cecf",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "00d25ffa-51e7-48a2-9a0f-0c03993a2718",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_input_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "22279e14-6dba-4f95-b998-e608aec08d58",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "cancel_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d4587f95-c5f6-4c8d-b97d-be7915e6cc55",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "without_material",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "5b42aa0d-c7f7-438c-83df-36bc00927e26",
      "name": "колбеки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3220,
        8520
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите <b>ставку за кубометр</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "f14a5ddb-f083-4e2d-a1c2-4aefd1d3887f",
      "name": "кубометр",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        9660
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите <b>ставку за рейс</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "c3dd7f04-689c-4866-a8d4-142049ab8fda",
      "name": "рейс",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        9500
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите <b>ставку за тонну</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "inpute_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "12841822-ff7a-4666-a7ee-f9473b15f739",
      "name": "тонна",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        9860
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
            "last_message_text": "={{ $json }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "24a20bf1-0585-4420-b91b-9d996c3757a5",
      "name": "шаг = ввод ставки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4280,
        9680
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "=Введите <b>стоимость доставки</b> за кубометр",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6ffae043-75df-498b-8b10-d21773dde91e",
      "name": "доставка м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        10040
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "=Введите <b>стоимость доставки</b> за тонну",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "f4362983-6f56-4db1-b908-3adb0324cfe2",
      "name": "доставка тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        10180
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "8a9e3931-291a-4714-a788-85dfee4003e9",
      "name": "шаг = ввод доставки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4280,
        10100
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы пропустили ввод автомобилей",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_input_cars"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "e63308cb-5f0e-4eda-afd8-34105ab49168",
      "name": "убираем кнопку3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4040,
        10360
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = \"\";\nreturn {\"data\": res};"
      },
      "id": "8c4e3684-edaf-47f4-9027-fc1d9ad1382a",
      "name": "пустой авто",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4260,
        10360
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "fd7f7fee-f7d8-4286-827d-442ac12c8944",
      "name": "записываем пустой авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4460,
        10360
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['cars'].pop();\nreturn {\"data\": res};"
      },
      "id": "7f81ef49-701a-4854-a4c6-7d872df699f0",
      "name": "удаляем авто в массиве",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4040,
        9120
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Выберите дату",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Сегодня",
                    "additionalFields": {
                      "callback_data": "set_today"
                    }
                  },
                  {
                    "text": "Завтра",
                    "additionalFields": {
                      "callback_data": "set_tomorrow"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Другая дата",
                    "additionalFields": {
                      "callback_data": "input_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "4cc4e15e-878b-48da-a231-754d7590eee0",
      "name": "дата",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4020,
        10540
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "=input_date",
            "last_message_text": "={{ $json }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "5b0619b2-ff8a-4a60-b067-01345b276d26",
      "name": "шаг = ввод даты",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4140,
        11100
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выбрали дату: {{ $today.format('dd.MM.yyyy') }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать перевозку",
                    "additionalFields": {
                      "callback_data": "continue_to_check"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "f65d9e27-e170-47aa-ba39-15ae539bd2fc",
      "name": "сегодня",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        10740
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['date'] = $input.all()[0].json.formattedDate;\nreturn {\"data\": res};"
      },
      "id": "70df16bb-3d8b-48ac-9f44-1c7b44a8cd89",
      "name": "пустой авто1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4260,
        10740
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $today }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "407cbaac-4fbe-46b3-8715-d23fe0bbd545",
      "name": "форматируем",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        4100,
        10740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "83077c15-6328-4d1e-8d3f-dc406e524fe7",
      "name": "записываем дату",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4440,
        10740
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $today.plus(1, \"days\") }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "84bb7fdc-0a4e-4e99-b9b8-df75a45da5fd",
      "name": "форматируем1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        4100,
        10920
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выбрали дату: {{ $today.plus(1, \"days\").format('dd.MM.yyyy') }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать перевозку",
                    "additionalFields": {
                      "callback_data": "continue_to_check"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "517e1e30-3762-4e7c-9d65-d82d7fd25143",
      "name": "завтра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        10920
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите дату в формате ДД.ММ.ГГГГ, например: 25.11.2024",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "continue_to_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ba4ef18d-3977-42ac-85f7-e7a3e76368f5",
      "name": "ввод даты",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3900,
        11100
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "skip_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "424106f2-805c-4cef-92a9-6771071e1f86",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "input_round_rate",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "19cde3c9-134a-434c-87b2-bd1618975bd9",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "input_cost_per_cubic_metre",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c7db1380-557d-47af-bc2e-801d1af51565",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "input_cost_per_tonne",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "140cfd22-e49d-4bd3-8fbb-446f87883545",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "=delivery_cost_per_cubic_metre",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2495febc-6f71-4d83-b916-2c81e647f1cd",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "delivery_cost_per_tonne",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a9ac77bf-9770-4992-8cc0-fb421d4f6bd2",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "skip_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f4e1243a-524c-4e5b-b878-e8cc1d0514f6",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "continue_to_date",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4611ae04-c405-43b6-b2f0-265b5dec159a",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "set_today",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a04b95f3-1017-4fd4-b3a6-88ef680084c7",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "set_tomorrow",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fa21dfc8-dcf9-499a-a76a-9e34c7ab0229",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "input_date",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b8f6235c-6604-4f75-9d7a-780629de2dbe",
      "name": "коллбеки ",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3580,
        10640
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "<b>Выберите объект</b>\n\n<i>Начните вводить текст, если список элементов не появляется</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список объектов",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Объект \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад к выбору шаблона",
                    "additionalFields": {
                      "callback_data": "back_create"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "99e72de0-69e1-4038-be5a-304e8ec13d4f",
      "name": "obj: выберите объект",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4980,
        10280
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "obj_input_object",
            "logist_template": "={{\n{\n\"quarry.quarry\": \"\",\n\"comment\": \"\",\n\"cars\": [],\n}\n}}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "aca46d8c-3664-492f-9f38-af7e7589f2f8",
      "name": "obj: шаг = выбор объекта",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5160,
        10280
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "text": "Выберите автомобили",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Список авто перевозчиков",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать без автомобиля",
                    "additionalFields": {
                      "callback_data": "obj_skip_cars"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "39e5d437-37a7-4b47-88f3-5b0b94e40035",
      "name": "obj: выбор авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4980,
        10520
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "obj_input_cars"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "3790d61d-9845-4ffe-8a3d-4b4f8cf723c2",
      "name": "obj: шаг = выбор авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5180,
        10520
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы <b>удалили</b> автомобиль <b>{{ $json.logist_template.cars.last()}}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто компании",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто компании \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить авто перевозчика",
                    "additionalFields": {
                      "switch_inline_query_current_chat": "={{ \"Авто перевозчиков \" }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к комментарию",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_comment"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "obj_cancel_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d456cbc7-4c19-4492-98ee-8ec77e1a9729",
      "name": "obj авто удалён",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5000,
        10780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "9cca3b39-95a8-4624-9140-3a52249d5f41",
      "name": "obj убираем кнопку1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5000,
        11000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы пропустили ввод комментария",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_check"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "2f64180f-cbfb-4669-9263-6c812be1d9c9",
      "name": "obj убираем кнопку2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5020,
        11200
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы собираетесь создать работу на объекте:\n\nОбъект - <b>{{ $json.logist_template['quarry.quarry'] }}</b>\nКомментарий - <i>{{ $json.logist_template.comment }}</i>\nАвтомобили - {{ $json.logist_template.cars.join(\", \") }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать",
                    "additionalFields": {
                      "callback_data": "obj_make_transportation"
                    }
                  },
                  {
                    "text": "Отменить",
                    "additionalFields": {
                      "callback_data": "obj_cancel_template"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "dfdee8c2-b03e-414a-968c-17fc81f9395b",
      "name": "obj: вы собираетесь создать перевозку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5020,
        11380
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "19db064e-7991-4a81-91f4-efd26a0248cc",
      "name": "obj: убираем кнопку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5020,
        11580
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "start_creating_obj_template",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "524c3ab0-ad00-4cba-98b2-79160c6143a6",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_input_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0e534c98-8ce3-42b2-acf8-9336a6cf8ae5",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_cancel_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "faa5bd59-3e19-4753-ad6c-43136aa45f1a",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_continue_to_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4e5cfce2-70b2-4077-9688-09b47c64a5ba",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_skip_comment",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cd5969e0-fba3-4d49-86ec-a8683a1839be",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_continue_to_check",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e5c59340-25e9-40c5-a5cf-092f525a779d",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_cancel_template",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0f120377-dba5-4b9e-9a60-1573f8d25e6b",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_make_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3b2ea611-ba07-4332-ae34-454a6467424b",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "obj_skip_cars",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "602ab8c1-be9c-4ce1-aecb-b31499c01229",
      "name": "коллбеки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4540,
        11600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://dev.everest.lamart.site/create_full_quarry_work_no_sample",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "cars",
              "value": "={{ $json.logist_template.cars }}"
            },
            {
              "name": "quarry",
              "value": "={{ $json.logist_template['quarry.quarry'] }}"
            },
            {
              "name": "comment",
              "value": "={{ $json.logist_template.comment }}"
            }
          ]
        },
        "options": {}
      },
      "id": "af5d2afa-d338-46b0-96db-b83a7ef2ace4",
      "name": "создать работу на объекте",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5000,
        11840
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Выберите способ создания:",
        "additionalFields": {}
      },
      "id": "f71b07dd-8cbe-4525-a5e2-dde8c1afa892",
      "name": "убираем инлайн кнопки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5360,
        10280
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "025cc453-e8de-4c41-8ef5-82392dd4513f",
      "name": "удалим кнопки5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5380,
        10520
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['cars'].pop();\nreturn {\"data\": res};"
      },
      "id": "e6dedd00-8b24-48d1-8c4b-c1a5beb56401",
      "name": "удаляем авто в массиве1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5220,
        10780
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "logist_template": "={{ $json.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "fdf83d20-bf4d-4884-b313-bde1af3fe09d",
      "name": "обновляем3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5400,
        10780
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Введите комментарий:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Пропустить комментарий",
                    "additionalFields": {
                      "callback_data": "obj_skip_comment"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "443c627a-60bb-4999-9d60-f9881739c280",
      "name": "Введите комментарий1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5220,
        11000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "obj_input_comment",
            "last_message_text": "={{ $json }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "44ead16b-84db-42d8-9c12-fb9f49ecfb56",
      "name": "статус ввод комментария1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5420,
        11000
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = \"\";\nreturn {\"data\": res};"
      },
      "id": "8bdec115-4664-48b7-8717-0c55e96c14f3",
      "name": "пустой комментарий1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        11200
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "94ff97af-18d3-4bbe-a2de-9512b75f6bf8",
      "name": "записываем комментарий3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5440,
        11200
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Вы отменили создание работы на объекте",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "22ef6f59-8b08-4e30-a8f1-c316a30f1bc3",
      "name": "Вы отменили1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5240,
        11580
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "20930338-ec1d-47da-9f30-a3db54ba3b1a",
      "name": "статус дефолтный1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5640,
        11580
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "8b109c68-e9b0-472a-92aa-9c6848d98c74",
      "name": "убираем кнопки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5340,
        11780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Что-то пошло не так, работа на объекте не создана",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "615f5296-1dc7-4fca-a626-b0b528c44418",
      "name": "ошибка1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5340,
        11940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "a3c472bf-a3e1-42e1-94d2-4fe2afcf3631",
      "name": "Stop and Error3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5540,
        11940
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Вы создали работу на объекте.\n<a href=\"https://dev.everest.lamart.site/web#id={{ $('создать работу на объекте').item.json.id }}&model=full.quarry.work&view_type=form\">Ссылка на работу в Odoo</a>",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "id": "bb77ca78-c35f-45cb-928a-17382665f191",
      "name": "вы создали1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5540,
        11780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_car_by_number",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number_car",
              "value": "={{ $json.callback_query.data.substring(3) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ee947a1-5c99-4265-9bc6-55f83b1ef2cb",
      "name": "данные авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1740,
        3400
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "512e3c3c-1892-4d4f-b247-669448b66c62",
      "name": "номер телефона",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        3400
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dcb30ccb-5531-4fac-b4d5-8f11f6690798",
      "name": "данные логиста",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1940,
        3740
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_transportation_by_date",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ $today }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f1f19c22-3a48-45d2-8561-41da0888d741",
      "name": "все сегодняшние перевозки2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1660,
        2720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2be9ce8a-31d2-44b2-a47f-66f9acefa0e0",
              "leftValue": "={{ $json.partner[1] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8cefaa13-f7c2-49de-bde1-bf870fb5dca9",
      "name": "перевозки по получателю",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1820,
        2720
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "ff92a1ee-1c2d-477e-a4de-33763769b0a0",
      "name": "все авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2180,
        2720
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = $('все рейсы').all()[0].json.rounds;\nvar res = [];\nfor (const item of $input.all()) {\n  for (const round of rounds) {\n    if (item.json.rounds.includes(round) && item.json.driver_id[0]) {\n      res.push(item)\n    }\n  }\n}\n\nreturn res;"
      },
      "id": "619afc01-da51-4895-9542-5ade256889bb",
      "name": "автомобили по рейсу на смене",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2320,
        2720
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_transportation_by_date",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ $today }}"
            }
          ]
        },
        "options": {}
      },
      "id": "071bfe51-94f4-4d51-bb9f-d35283ef857d",
      "name": "все сегодняшние перевозки3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        3080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2be9ce8a-31d2-44b2-a47f-66f9acefa0e0",
              "leftValue": "={{ $json.partner[1] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.data.substring(3) }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4df62544-37d6-4406-ac05-fe525b64c2ab",
      "name": "перевозки по получателю1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1800,
        3080
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "10c01efd-899a-4e97-9e89-aef5c9e6be26",
      "name": "все авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2140,
        3080
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = $('все рейсы1').all()[0].json.rounds;\nvar res = [];\nfor (const item of $input.all()) {\n  for (const round of rounds) {\n    if (item.json.rounds.includes(round) && item.json.driver_id[0]) {\n      res.push(item)\n    }\n  }\n}\n\nreturn res;"
      },
      "id": "f078adf5-62b1-4344-b5cc-1c8f6b6ae433",
      "name": "автомобили по рейсу на смене1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2280,
        3080
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "8fab68da-92f9-473d-b55b-811d789415e3",
      "name": "все авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        1380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0f6c9daf-f666-4a48-957a-f6cbc9ac6dc6",
              "leftValue": "={{ $json.driver_id[0] }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4d14f07a-df12-448d-b112-fd9aa3eccb84",
      "name": "поиск машин на смене",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1440,
        1380
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_materials_of_quarry",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "quarry",
              "value": "={{ $json.logist_template['quarry.quarry'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7a75ca68-84ff-4d14-b058-c25a8a7ba236",
      "name": "материал",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3880,
        7760
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a9761e09-f1e9-4009-a01a-6ce7f4c20380",
              "leftValue": "={{ $json.display_name.slice(0, $('Execute Workflow Trigger').item.json.logist_template['transportation.material'].length)}}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.logist_template['transportation.material'] }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4100,
        7760
      ],
      "id": "2447cc65-6100-464a-8f06-3bed11d61afb",
      "name": "Filter",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_rates",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3ad4c475-065b-48da-b7b7-e4beb5d233f1",
      "name": "получатели",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3880,
        7920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1b890fb3-9c99-4386-b865-d982772c715b",
              "leftValue": "={{ $json.company[1] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.logist_template['transportation.rates'] }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "fe03ffdd-9d95-44c6-a31f-b8420ec8f092",
              "leftValue": "={{ $json.place_from[1] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.logist_template['quarry.quarry'] }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "939d0a2e-be6c-461b-a992-8fb03e7ef648",
              "leftValue": "={{ $json.place_to[1] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.logist_template['transportation.place'] }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4100,
        7920
      ],
      "id": "262a1bd7-2cb2-46ef-8513-3ccf20b8d30c",
      "name": "Filter1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4340,
        7820
      ],
      "id": "77010f79-57fb-4302-b22a-3e57ca5d357e",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите, какую ставку вводить:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за кубометр/доставку ({{ $json.data.cost_per_cubic_metre }}р. / {{ $json.data.delivery_cost_per_cubic_metre }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_cubic_metre"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за тонну/доставку ({{ $json.data.cost_per_tonne }}р. / {{ $json.data.delivery_cost_per_tonne }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_tonne"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за рейс ({{ $('Execute Workflow Trigger').item.json.logist_template.round_rate }}р.)",
                    "additionalFields": {
                      "callback_data": "input_round_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "21090248-aaa4-4e27-b1f2-6219082a0230",
      "name": "выберите ставку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4940,
        7780
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\n\nvar cost_per_cubic_metre_odoo = $('Merge').all()[0].json.price_per_cubic_metre.toString();\nres['cost_per_cubic_metre'] = res['cost_per_cubic_metre'] == \"0\" ? cost_per_cubic_metre_odoo : res['cost_per_cubic_metre'];\n\nvar delivery_cost_per_cubic_metre_odoo = $('Merge').all()[0].json.delivery_price_for_cubic_meter.toString();\nres['delivery_cost_per_cubic_metre'] = res['delivery_cost_per_cubic_metre'] == \"0\" ?delivery_cost_per_cubic_metre_odoo : res['delivery_cost_per_cubic_metre'];\n\nvar cost_per_tonne_odoo = $('Merge').all()[0].json.price_per_tonne.toString();\nres['cost_per_tonne'] = res['cost_per_tonne'] == \"0\" ? cost_per_tonne_odoo : res['cost_per_tonne'];\n\nvar delivery_cost_per_tonne_odoo = $('Merge').all()[0].json.delivery_price_for_ton.toString();\nres['delivery_cost_per_tonne'] = res['delivery_cost_per_tonne'] == \"0\" ? delivery_cost_per_tonne_odoo : res['delivery_cost_per_tonne'];\n\nreturn {\"data\": res};"
      },
      "id": "907229d2-41e5-46ba-be35-39bd94b9415e",
      "name": "задаём новые значения",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        7740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "44a26e86-9067-4222-9779-a745f7f7cfaa",
      "name": "записываем ставки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4940,
        7600
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a65f2ddc-a17f-4d7c-8cba-25110de9fea1",
              "leftValue": "={{ $('Merge').all()[0].json.price_per_cubic_metre }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "7ed71760-d3cb-4485-bee4-d40602108d54",
              "leftValue": "={{ $('Merge').all()[0].json.delivery_price_for_cubic_meter }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "fef2c78a-ad81-4efb-8250-d387535217b7",
              "leftValue": "={{ $('Merge').all()[0].json.price_per_tonne }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "600d870f-086e-483e-988b-53dbad9405c1",
              "leftValue": "={{ $('Merge').all()[0].json.delivery_price_for_ton }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4560,
        7820
      ],
      "id": "8c96f264-d14f-4805-83d9-0e12865de2f8",
      "name": "есть данные?"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите, какую ставку вводить:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за кубометр ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_cubic_metre }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_cubic_metre"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за тонну ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_tonne }}р.) ",
                    "additionalFields": {
                      "callback_data": "input_cost_per_tonne"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за рейс ({{ $('Execute Workflow Trigger').item.json.logist_template.round_rate }}р.)",
                    "additionalFields": {
                      "callback_data": "input_round_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "2ff6a415-cb47-4aa8-bc97-beec8090b6c7",
      "name": "выберите ставку1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4940,
        8000
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "free_auto_carriers",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eb33e6ae-c9f3-4884-a9b4-0ff0e94d6aa7",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "free_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3440,
        12440
      ],
      "id": "93f28f8e-a6e4-498f-bab4-27bd39d1b5b7",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('проверка статусов и генерация единого сообщения').item.json.combinedMessages }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Автопарк компании",
                    "additionalFields": {
                      "callback_data": "free_auto"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "058cd533-f257-4635-8701-27eb4558c3a8",
      "name": "Вывод свободных машин",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4480,
        12280
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessagesFree = \"\";\nlet combinedMessagesNoDriver = \"\";\n\nconst freeCarsByCompany = {};\nconst noDriverCarsByCompany = {};\n\nfor (const item of $input.all()) {\n  const data = item.json;\n  const driver = data.driver_id ? data.driver_id[1] : null;\n  const number_car = data.number_car;\n  const status = data.status;\n  const company = data.company_owner ? data.company_owner[1] : \"Не указана\";\n\n  if (driver && status === \"Нет груза\") {\n    if (!freeCarsByCompany[company]) {\n      freeCarsByCompany[company] = [];\n    }\n    freeCarsByCompany[company].push(`<b>${number_car}, ${driver}</b>`);\n  } else if (!driver && status === \"Нет водителя\") {\n    if (!noDriverCarsByCompany[company]) {\n      noDriverCarsByCompany[company] = [];\n    }\n    noDriverCarsByCompany[company].push(`<b>${number_car}</b>`);\n  }\n}\n\nif (Object.keys(freeCarsByCompany).length > 0) {\n  combinedMessagesFree = \"Сейчас свободны следующие автомобили:\\n\\n\";\n  for (const [company, cars] of Object.entries(freeCarsByCompany)) {\n    combinedMessagesFree += `<b>${company}</b>: ${cars[0]}\\n`;\n    if (cars.length > 1) {\n      combinedMessagesFree += cars.slice(1).join(\"\\n\") + \"\\n\";\n    }\n    combinedMessagesFree += \"\\n\";\n  }\n}\n\nif (Object.keys(noDriverCarsByCompany).length > 0) {\n  combinedMessagesNoDriver = \"Текущие автомобили без водителя:\\n\\n\";\n  for (const [company, cars] of Object.entries(noDriverCarsByCompany)) {\n    combinedMessagesNoDriver += `<b>${company}</b>: ${cars[0]}\\n`;\n    if (cars.length > 1) {\n      combinedMessagesNoDriver += cars.slice(1).join(\"\\n\") + \"\\n\";\n    }\n    combinedMessagesNoDriver += \"\\n\";\n  }\n}\n\nlet finalMessage = (combinedMessagesFree + combinedMessagesNoDriver).trim();\n\nif (!finalMessage) {\n  finalMessage = \"На данный момент нет свободных автомобилей и автомобилей без водителей\";\n}\n\nreturn [{ json: { combinedMessages: finalMessage } }];\n"
      },
      "id": "a1f7ef5a-7629-4360-b4c2-f8b29d4ddc33",
      "name": "проверка статусов и генерация единого сообщения",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        12280
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "29b53e18-6581-4339-bf12-e3591636bf7d",
      "name": "берем данные машин",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3860,
        12300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1667d6b3-3311-48f1-81cf-372ee8fdd318",
      "name": "авто компании2",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4060,
        12300
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('проверка статусов и генерация единого сообщения1').item.json.combinedMessages }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Автопарк перевозчиков",
                    "additionalFields": {
                      "callback_data": "free_auto_carriers"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "4e1dbbae-ead3-4eb9-9dce-270315844017",
      "name": "Вывод свободных машин1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4480,
        12480
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessagesFree = \"\";\nlet combinedMessagesNoDriver = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n  const driver = data.driver_id ? data.driver_id[1] : null;\n  const number_car = data.number_car;\n  const status = data.status;\n\n  if (driver && status === \"Нет груза\") {\n    if (!combinedMessagesFree) {\n      combinedMessagesFree = 'Сейчас свободны следующие автомобили:\\n\\n';\n    }\n    combinedMessagesFree += `<b>${number_car}, ${driver}</b>\\n`;\n  } else if (!driver && status === \"Нет водителя\") {\n    if (!combinedMessagesNoDriver) {\n      combinedMessagesNoDriver = \"Текущие автомобили без водителя:\\n\\n\";\n    }\n    combinedMessagesNoDriver += `<b>${number_car}</b>\\n`;\n  }\n}\n\nlet finalMessage = (combinedMessagesFree + \"\\n\" + combinedMessagesNoDriver).trim();\n\nif (!finalMessage) {\n  finalMessage = \"На данный момент нет свободных автомобилей и автомобилей без водителей\";\n}\n\nreturn [{ json: { combinedMessages: finalMessage } }];\n"
      },
      "id": "6214c2b6-4a02-42fb-885f-3a57eca6f606",
      "name": "проверка статусов и генерация единого сообщения1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        12480
      ]
    },
    {
      "parameters": {
        "url": "https://dev.everest.lamart.site/get_all_cars",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6eb4dc78-1b36-40fa-93af-cc01a7cd1775",
      "name": "берем данные машин1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3860,
        12500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92f028a3-662a-403d-868e-bb252ae44de2",
              "leftValue": "={{ $json.company_owner[1] }}",
              "rightValue": "ООО \"ЭВЕРЕСТ\"",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "81819f20-3872-4fad-956d-ae75c6060477",
      "name": "авто компании",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4060,
        12500
      ]
    },
    {
      "parameters": {
        "content": "## Вывод свободных авто",
        "height": 480,
        "width": 900
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3760,
        12220
      ],
      "id": "ccbab5ac-0e48-49fc-9057-3f9efff186ca",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.callback_query.message.chat.id }}",
        "messageId": "={{ $json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы пропустили ввод автомобилей",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "obj_continue_to_comment"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "obj_input_cars"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "d8d28fcc-4456-47bf-9408-25af7b49ac39",
      "name": "убираем кнопку4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        5040,
        12140
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['comment'] = \"\";\nreturn {\"data\": res};"
      },
      "id": "ec7d1744-acdc-4ae5-b686-f15464a04613",
      "name": "пустой авто2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5260,
        12140
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1eb56a03-11af-4d30-9d0e-0c43abf6cf87",
      "name": "записываем пустой авто1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5460,
        12140
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "logist_template": "={{ $json.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "current_maintenance",
              "displayName": "current_maintenance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "expected_time_maintenance",
              "displayName": "expected_time_maintenance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "assigned_locksmiths",
              "displayName": "assigned_locksmiths",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mechanic_template",
              "displayName": "mechanic_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_rounds",
              "displayName": "current_quarry_rounds",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_company",
              "displayName": "fuel_company",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3500,
        9300
      ],
      "id": "85715516-a0c5-4149-b4e6-1a3c1005df89",
      "name": "Вместо меры записываем -1",
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите, какую ставку вводить:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за кубометр ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_cubic_metre }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_cubic_metre"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за тонну ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_tonne }}р.) ",
                    "additionalFields": {
                      "callback_data": "input_cost_per_tonne"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за рейс ({{ $('Execute Workflow Trigger').item.json.logist_template.round_rate }}р.)",
                    "additionalFields": {
                      "callback_data": "input_round_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "31696c58-7387-4632-bc57-4ee146b36a9e",
      "name": "выберите ставку2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите, какую ставку вводить:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за кубометр ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_cubic_metre }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_cubic_metre"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за тонну ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_tonne }}р.) ",
                    "additionalFields": {
                      "callback_data": "input_cost_per_tonne"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за рейс ({{ $('Execute Workflow Trigger').item.json.logist_template.round_rate }}р.)",
                    "additionalFields": {
                      "callback_data": "input_round_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "7928f320-47e8-406c-9b61-5a2613d47f0a",
      "name": "выберите ставку3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        80
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите, какую ставку вводить:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за кубометр ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_cubic_metre }}р.)",
                    "additionalFields": {
                      "callback_data": "input_cost_per_cubic_metre"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за тонну ({{ $('Execute Workflow Trigger').item.json.logist_template.cost_per_tonne }}р.) ",
                    "additionalFields": {
                      "callback_data": "input_cost_per_tonne"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Ставка за рейс ({{ $('Execute Workflow Trigger').item.json.logist_template.round_rate }}р.)",
                    "additionalFields": {
                      "callback_data": "input_round_rate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "0a1ecbc8-1836-47d2-85b8-50f5c563b18a",
      "name": "выберите ставку4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3660,
        9300
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres['measure'] = \"В течении смены\";\nreturn {\"data\": res};"
      },
      "id": "1f0d611c-4e9d-48c1-8c0f-cda5f840f576",
      "name": "задаём м",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        9300
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100643823,
          "callback_query": {
            "id": "2782501069630086204",
            "from": {
              "id": 7090302459,
              "is_bot": false,
              "first_name": "Al",
              "last_name": "Go",
              "language_code": "ru"
            },
            "message": {
              "message_id": 35290,
              "from": {
                "id": 7063451965,
                "is_bot": true,
                "first_name": "Everest n8n",
                "username": "myn8nbotbot"
              },
              "chat": {
                "id": 7090302459,
                "first_name": "Al",
                "last_name": "Go",
                "type": "private"
              },
              "date": 1736855133,
              "text": "Выберите автомобили",
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "Список авто компании",
                      "switch_inline_query_current_chat": "Авто компании "
                    }
                  ],
                  [
                    {
                      "text": "Список авто перевозчиков",
                      "switch_inline_query_current_chat": "Авто перевозчиков "
                    }
                  ],
                  [
                    {
                      "text": "Создать без автомобиля",
                      "callback_data": "obj_skip_cars"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "4841481297779052467",
            "data": "obj_skip_cars"
          },
          "tg_id": "7090302459",
          "odoo_id": 19,
          "status": "obj_input_comment",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": null,
          "fuel_liters": null,
          "weight_measure": null,
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": null,
          "count_weight_photo_sent": null,
          "current_quarry_hours": null,
          "end_round_message_id": null,
          "last_message_text": "{\"ok\":true,\"result\":{\"message_id\":35293,\"from\":{\"id\":7063451965,\"is_bot\":true,\"first_name\":\"Everest n8n\",\"username\":\"myn8nbotbot\"},\"chat\":{\"id\":7090302459,\"first_name\":\"Al\",\"last_name\":\"Go\",\"type\":\"private\"},\"date\":1736855279,\"text\":\"Введите комментарий:\",\"reply_markup\":{\"inline_keyboard\":[[{\"text\":\"Пропустить комментарий\",\"callback_data\":\"obj_skip_comment\"}]]}}}",
          "logist_notifications": false,
          "creating_transportation": null,
          "round_active_msg_id": null,
          "no_taking_shift_logist_notify": false,
          "logist_template": {
            "quarry.quarry": "а123",
            "comment": "",
            "cars": [
              "О 666 ОО"
            ]
          },
          "current_maintenance": null,
          "expected_time_maintenance": null,
          "assigned_locksmiths": null,
          "mechanic_template": null,
          "current_quarry_rounds": null,
          "fuel_company": null,
          "cookie": "session_id=284b10ec25e2f494881bf3e7be6f73736ad001e6; Expires=Wed, 14 Jan 2026 04:37:04 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:03:49.624Z",
      "updatedAt": "2024-08-26T14:03:49.624Z",
      "id": "sYBV4z8jwrWgz2Cc",
      "name": "aleksey"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-01-24T12:09:57.461Z",
  "versionId": "e1e3513b-cc8a-463d-bcfd-829eae08aac6"
}