{
  "active": false,
  "connections": {
    "отправьте данные": {
      "main": [
        [
          {
            "node": "статус=отправка срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "меняем статус - ввод текста запроса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "комментарий механику": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус получения фото при неисправности": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Завершение смены": {
      "main": [
        [
          {
            "node": "получаем odoo id5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отмена отправки фото": {
      "main": [
        [
          {
            "node": "Статус получения фото при неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки": {
      "main": [
        [
          {
            "node": "отправляем сообщение ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение ": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение 1": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки": {
      "main": [
        [
          {
            "node": "обновим статус на \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "проверка наличия механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков1": {
      "main": [
        [
          {
            "node": "данные водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно вписать часы": {
      "main": [
        [
          {
            "node": "обновим статус и номер текущей заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки1": {
      "main": [
        [
          {
            "node": "получим актуальный статус заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки": {
      "main": [
        [
          {
            "node": "убираем номер заявки из пг",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем номер заявки из пг": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки1": {
      "main": [
        [
          {
            "node": "меняем на статус отправки фотографии",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка в работе?": {
      "main": [
        [
          {
            "node": "нужно вписать часы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявка уже изменена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "принятие заказа": {
      "main": [
        [
          {
            "node": "Получение информации о водителе1",
            "type": "main",
            "index": 0
          },
          {
            "node": "айди последнего сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нажатие водителем на кнопку замена масла": {
      "main": [
        [
          {
            "node": "Получаем odoo_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем odoo_id": {
      "main": [
        [
          {
            "node": "Получаем информацию о машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение при нажатии на кнопку отправить фото": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото завершения заявки": {
      "main": [
        [
          {
            "node": "завершён процесс заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завершён процесс заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно ли приложить фото?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки отправки фото груза и замены масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка весовых справок или ттн при завершении смены": {
      "main": [
        [
          {
            "node": "отправить весовую или ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки отправки фото груза и замены масла": {
      "main": [
        [
          {
            "node": "Нажатие водителем на кнопку замена масла",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение при нажатии на кнопку отправить фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "снова вводим номер авто": {
      "main": [
        [
          {
            "node": "снова ввод номера авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто1": {
      "main": [
        [
          {
            "node": "он не может занять новый, пока занят старый1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "снова вводим номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель взял авто?": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно взять авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id2": {
      "main": [
        [
          {
            "node": "находим машину по odoo id2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка весовой": {
      "main": [
        [
          {
            "node": "меняем статус на отправку весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы выполняющиеся": {
      "main": [
        [
          {
            "node": "сохраняем текст сообщения1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет рейсов": {
      "main": [
        [
          {
            "node": "удалим инлайн кнопку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о литрах": {
      "main": [
        [
          {
            "node": "статус ввода литров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото чека": {
      "main": [
        [
          {
            "node": "статус=чек фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли чек": {
      "main": [
        [
          {
            "node": "статус дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор меры": {
      "main": [
        [
          {
            "node": "статус=дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус=ввод количества материала": {
      "main": [
        [
          {
            "node": "Проверка выбранного матрериала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Кнопки после отправки фото": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус на дефолтный2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статус получения фото при неисправности",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отмена отправки фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки завершения смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера1": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус на дефолтный2": {
      "main": [
        [
          {
            "node": "Требуется ли отправка весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объём материала": {
      "main": [
        [
          {
            "node": "выбор меры",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ТТН и весовые в конце смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обработка кнопок ТО": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото завершения заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с выбором": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок2": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вам назначена срочная перевозка": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "есть ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняется сейчас срочная?": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?": {
      "main": [
        [
          {
            "node": "метры или тонны?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок3": {
      "main": [
        [
          {
            "node": "разделение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделение перевозок1": {
      "main": [
        [
          {
            "node": "находим прошлую перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершена ли срочная перевозка": {
      "main": [
        [
          {
            "node": "получение перевозок3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочная перевозка завершена": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим прошлую перевозку": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?1": {
      "main": [
        [
          {
            "node": "завершена ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "преобразуем в сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?2": {
      "main": [
        [
          {
            "node": "срочная перевозка завершена",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли срочная перевозка": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize5": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с завершением смены": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "разграничение перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки2": {
      "main": [
        [
          {
            "node": "сегодняшнее число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки2": {
      "main": [
        [
          {
            "node": "перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые2": {
      "main": [
        [
          {
            "node": "номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение для описания проблемы": {
      "main": [
        [
          {
            "node": "статус=дефолт",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные1": {
      "main": [
        [
          {
            "node": "статус=отправка срочно маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "есть рейс?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?": {
      "main": [
        [
          {
            "node": "отправьте данные1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс1": {
      "main": [
        [
          {
            "node": "есть рейс?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?1": {
      "main": [
        [
          {
            "node": "отправьте данные2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные2": {
      "main": [
        [
          {
            "node": "статус=отправка срочно документ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновим статус на \"в работе\"": {
      "main": [
        [
          {
            "node": "заявка взята в работу",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаление меню ТО": {
      "main": [
        [
          {
            "node": "удаление меню ТО1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "завершение рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"м3\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"Тонны\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "завершение рейса": {
      "main": [
        [
          {
            "node": "ищем перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра": {
      "main": [
        [
          {
            "node": "Изменение прошлого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопки у подтверждения номера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статистика1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопки у подтверждения номера": {
      "main": [
        [
          {
            "node": "ввод одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра1": {
      "main": [
        [
          {
            "node": "статус ввода одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начало рейса": {
      "main": [
        [
          {
            "node": "метры или тонны?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке1": {
      "main": [
        [
          {
            "node": "авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем завершённые перевозки": {
      "main": [
        [
          {
            "node": "первая перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первая перевозка": {
      "main": [
        [
          {
            "node": "тонны или м3?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "очередь перевозок": {
      "main": [
        [
          {
            "node": "перевозка из очереди",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "кнопки принятия и завершения заказа",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для кубометров": {
      "main": [
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для тонн": {
      "main": [
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод перевозок": {
      "main": [
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "обработка кнопок ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id8": {
      "main": [
        [
          {
            "node": "находим машину по odoo id9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок7": {
      "main": [
        [
          {
            "node": "сортировка перевозок и работ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка3": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "перевозка или работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозка или работа в карьере": {
      "main": [
        [
          {
            "node": "вывод работы в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вывод доступных перевозок5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод работы в карьере": {
      "main": [
        [
          {
            "node": "Выводим информацию о работе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод доступных перевозок5": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке6": {
      "main": [
        [
          {
            "node": "Добавление перевозки в бд3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сортировка перевозок и работ": {
      "main": [
        [
          {
            "node": "есть ли перевозка3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первой работа или перевозка": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день, работа первой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод перевозок на день",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день, работа первой": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          },
          {
            "node": "айди последнего сообщения2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок6": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов": {
      "main": [
        [
          {
            "node": "поиск текущего авто3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Начало работы в карьере": {
      "main": [
        [
          {
            "node": "поиск текущего авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершение карьерных работ1": {
      "main": [
        [
          {
            "node": "Работа в карьере выполнена1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов1": {
      "main": [
        [
          {
            "node": "поиск текущего авто4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнена работа в карьере": {
      "main": [
        [
          {
            "node": "завершение карьерных работ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод часов1": {
      "main": [
        [
          {
            "node": "Смена статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку у перевозки на день": {
      "main": [
        [
          {
            "node": "Начало работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram5": {
      "main": [
        [
          {
            "node": "получение перевозок6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Проверка часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка часов": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Недостаточное кол-во часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматированная дата": {
      "main": [
        [
          {
            "node": "отправялем запрос",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправялем запрос": {
      "main": [
        [
          {
            "node": "данные занесенны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "время екатеринбург": {
      "main": [
        [
          {
            "node": "форматированная дата",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные занесенны": {
      "main": [
        [
          {
            "node": "меняем статус на обычный2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка выбранного матрериала": {
      "main": [
        [
          {
            "node": "ввод количества материала м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод количества материала тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем \"м3\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем \"Тонны\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Выполнена работа в карьере без условия",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выполнена работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнена работа в карьере без условия": {
      "main": [
        [
          {
            "node": "завершение карьерных работ2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли рейсы": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о топливе": {
      "main": [
        [
          {
            "node": "данные о литрах",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото чека",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть ли чек",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершение смены": {
      "main": [
        [
          {
            "node": "Удаление дневной статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разграничение перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "рейсы по авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление меню ТО/статистика": {
      "main": [
        [
          {
            "node": "удаление меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Текст для тонн": {
      "main": [
        [
          {
            "node": "текст для тонн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Текст для кубометров": {
      "main": [
        [
          {
            "node": "текст для кубометров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление дневной статистики": {
      "main": [
        [
          {
            "node": "смена завершена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статистика1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление статистики",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные о топливе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление статистики": {
      "main": [
        [
          {
            "node": "Удаление статистики1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен без условий": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен тонны": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен м3": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Недостаточное кол-во часов": {
      "main": [
        [
          {
            "node": "айди последнего сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус ввода одометра": {
      "main": [
        [
          {
            "node": "ввод одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус2": {
      "main": [
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "склеить имена водителей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус - ввод текста запроса": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере2": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение1": {
      "main": [
        [
          {
            "node": "вам назначена срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "метры или тонны?": {
      "main": [
        [
          {
            "node": "Рейс завершен м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейс завершен тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейс завершен без условий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "тонны или м3?": {
      "main": [
        [
          {
            "node": "Текст для тонн",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Текст для кубометров",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки меню ТО": {
      "main": [
        [
          {
            "node": "поиск текущего авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "комментарий механику",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Кнопки после отправки фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "была заправка": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ошибки": {
      "main": [
        [
          {
            "node": "Нет перевозки или работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Работы в карьере": {
      "main": [
        [
          {
            "node": "убираем кнопку у перевозки на день",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод часов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Начало работы в карьере2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов": {
      "main": [
        [
          {
            "node": "отправка сообщения о начале рейса логистам",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат1": {
      "main": [
        [
          {
            "node": "поиск логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок3": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок4": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram4": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок1": {
      "main": [
        [],
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок": {
      "main": [
        [],
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram6": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы за сегодня?": {
      "main": [
        [
          {
            "node": "счёт рейсов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "форматируем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "счёт рейсов": {
      "main": [
        [
          {
            "node": "форматируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сегодняшнее число": {
      "main": [
        [
          {
            "node": "рейсы по водителю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл": {
      "main": [
        [
          {
            "node": "считаем по дням кол-во рейсов и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "считаем часы и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "считаем по дням кол-во рейсов и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "соединяем рейсы и работы": {
      "main": [
        [
          {
            "node": "сортируем все данные, считаем итоги, преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сортируем все данные, считаем итоги, преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "вывод недельной статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "получаем рейсы по водителю1",
            "type": "main",
            "index": 0
          },
          {
            "node": "получаем работы по водителю1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "метры или тонны?1": {
      "main": [
        [
          {
            "node": "начатый рейс м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс без условий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс м3": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс тонны": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс без условий": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сохраняем текст сообщения1": {
      "main": [
        [
          {
            "node": "Подтверждение завершения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "смена завершена": {
      "main": [
        [
          {
            "node": "график на завтра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ТТН и весовые в конце смены": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с завершением смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаляем прошлое сообщение с выбором",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "загрузите ттн или весовые2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не равно нулю": {
      "main": [
        [
          {
            "node": "группируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "группируем": {
      "main": [
        [
          {
            "node": "сохраним текст",
            "type": "main",
            "index": 0
          },
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "отправим сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "итоговое кол-во": {
      "main": [
        [
          {
            "node": "если не равно нулю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "график на завтра": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работы на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "работы": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "работы на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "итоговое кол-во",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "рейсы2",
            "type": "main",
            "index": 0
          },
          {
            "node": "работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы2": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди сообщения в бд": {
      "main": [
        [
          {
            "node": "все рейсы по авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id": {
      "main": [
        [
          {
            "node": "начало рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся рейсы1": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы по авто": {
      "main": [
        [
          {
            "node": "разделяем рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы1": {
      "main": [
        [
          {
            "node": "выполняющиеся рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id2": {
      "main": [
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы": {
      "main": [
        [
          {
            "node": "находим рейсы по машине9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке": {
      "main": [
        [
          {
            "node": "разделяем рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине9": {
      "main": [
        [
          {
            "node": "Summarize5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке1": {
      "main": [
        [
          {
            "node": "разделяем рейсы2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы2": {
      "main": [
        [
          {
            "node": "находим рейсы по машине10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине10": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке2": {
      "main": [
        [
          {
            "node": "разделяем рейсы3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы3": {
      "main": [
        [
          {
            "node": "находим рейсы по машине4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине4": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто": {
      "main": [
        [
          {
            "node": "рейсы по авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка": {
      "main": [
        [
          {
            "node": "выполняется сейчас срочная?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки принятия и завершения заказа": {
      "main": [
        [
          {
            "node": "находим машину по odoo id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск текущего авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель взял авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто": {
      "main": [
        [
          {
            "node": "разделяем рейсы4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы4": {
      "main": [
        [
          {
            "node": "выполняющиеся рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся рейсы": {
      "main": [
        [
          {
            "node": "есть рейсы выполняющиеся",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто": {
      "main": [
        [
          {
            "node": "очередь перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозка из очереди": {
      "main": [
        [
          {
            "node": "сами перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сами перевозки": {
      "main": [
        [
          {
            "node": "убираем завершённые перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто1": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение рейсов": {
      "main": [
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "получение рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер автомобиля": {
      "main": [
        [
          {
            "node": "завершение смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки завершения смены": {
      "main": [
        [
          {
            "node": "Подтверждение завершения смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер автомобиля",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные при работе в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершение смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "была заправка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Подтверждение завершения смены после вывода перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вывод перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id9": {
      "main": [
        [
          {
            "node": "получение перевозок7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник1": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем заявки": {
      "main": [
        [
          {
            "node": "заявки \"к выполнению\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "получаем заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"к выполнению\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем заявки1": {
      "main": [
        [
          {
            "node": "заявки \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "получаем заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"в работе\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим актуальный статус заявки": {
      "main": [
        [
          {
            "node": "заявка в работе?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные водителя": {
      "main": [
        [
          {
            "node": "данные авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто": {
      "main": [
        [
          {
            "node": "текст заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст заявки": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем информацию о машине": {
      "main": [
        [
          {
            "node": "Обновление пробега при котором нужна будет замена масла1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем рейсы по водителю1": {
      "main": [
        [
          {
            "node": "разделяем рейсы5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы5": {
      "main": [
        [
          {
            "node": "завершенные рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершенные рейсы1": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем работы по водителю1": {
      "main": [
        [
          {
            "node": "считаем часы и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1": {
      "main": [
        [
          {
            "node": "время екатеринбург",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто2": {
      "main": [
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки": {
      "main": [
        [
          {
            "node": "находим перевозки, которые выведем в кнопках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки, которые выведем в кнопках": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по водителю": {
      "main": [
        [
          {
            "node": "разделяем рейсы7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы7": {
      "main": [
        [
          {
            "node": "рейсы за сегодня",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы за сегодня": {
      "main": [
        [
          {
            "node": "есть рейсы за сегодня?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки1": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка1": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки": {
      "main": [
        [
          {
            "node": "рейсы по авто2",
            "type": "main",
            "index": 0
          },
          {
            "node": "рейсы по авто3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без ттн": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "сколько всего рейсов в перевозке по машине": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем кол-во в одно": {
      "main": [
        [
          {
            "node": "сравниваем общее кол-во рейсов и рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сравниваем общее кол-во рейсов и рейсов без ттн": {
      "main": [
        [
          {
            "node": "загрузите ттн",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ттн загружена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн": {
      "main": [
        [
          {
            "node": "меняем статус на отправку ТТН",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто3": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы  в перевозке": {
      "main": [
        [
          {
            "node": "сколько всего рейсов в перевозке по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без ттн в перевозке": {
      "main": [
        [
          {
            "node": "сколько рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто2": {
      "main": [
        [
          {
            "node": "разделяем рейсы8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы8": {
      "main": [
        [
          {
            "node": "находим рейсы  в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто3": {
      "main": [
        [
          {
            "node": "разделяем рейсы9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы9": {
      "main": [
        [
          {
            "node": "находим рейсы без ттн в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки1": {
      "main": [
        [
          {
            "node": "рейсы по авто4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы или нет": {
      "main": [
        [
          {
            "node": "сколько рейсов без весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "весовые загружены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без весовой": {
      "main": [
        [
          {
            "node": "загрузите весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите весовые": {
      "main": [
        [
          {
            "node": "меняем статус на отправку нескольких весовых",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто4": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без весовой в перевозке": {
      "main": [
        [
          {
            "node": "есть рейсы или нет",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто4": {
      "main": [
        [
          {
            "node": "разделяем рейсы10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы10": {
      "main": [
        [
          {
            "node": "находим рейсы без весовой в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "отправьте данные",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "назад",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление меню ТО/статистика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто5": {
      "main": [
        [
          {
            "node": "рейсы по авто5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто5": {
      "main": [
        [
          {
            "node": "разделяем рейсы11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы11": {
      "main": [
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто6": {
      "main": [
        [
          {
            "node": "рейсы по авто6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто6": {
      "main": [
        [
          {
            "node": "разделяем рейсы12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы12": {
      "main": [
        [
          {
            "node": "рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы1": {
      "main": [
        [
          {
            "node": "актуальный рейс1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "Odoo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo": {
      "main": [
        [
          {
            "node": "Odoo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo1": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто2": {
      "main": [
        [
          {
            "node": "accept_order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто3": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто4": {
      "main": [
        [
          {
            "node": "завершение карьерных работ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки2": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка2": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые3": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем перевозку": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто1": {
      "main": [
        [
          {
            "node": "разделяем рейсы6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы6": {
      "main": [
        [
          {
            "node": "находим рейсы без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без ттн": {
      "main": [
        [
          {
            "node": "есть ли рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником1": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-25T16:07:19.388Z",
  "id": "LoKcgINqdEz5MyX2",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "prod_driver_inline",
  "nodes": [
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с автомобилем\nОтправьте сообщение, фото, видео, запись диктофона или кружок",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "55c9867a-60a4-4ec9-aca2-bee4639c5e11",
      "name": "отправьте данные",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        9820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "b81eb8e6-c9ee-4dd7-89ac-7a9a7d16132f",
      "name": "статус=отправка срочно",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        9820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": true,
            "odoo_id": "={{ $json.odoo_id }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a88a299e-2501-4f4d-9f86-a35bb159757a",
      "name": "меняем статус - ввод текста запроса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        0,
        2680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "faddb913-7460-4683-bb96-b3743a0fc706",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -400,
        2680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Отправьте свой комментарий механику",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bc64d8b0-6db2-4ab4-a765-1764e6ec0288",
      "name": "комментарий механику",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        2680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Блок проверки нажатой водителем кнопки",
        "height": 5589.183573096278,
        "width": 2241.8033428606927
      },
      "id": "f557e241-e109-4dec-88e7-97f8ad71ceb9",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1100,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "photo_cancel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "aad9047f-4dec-4887-8c44-063bc019640c",
      "name": "Отправка фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        2780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "check_final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "9696c7fa-f45a-4cbe-8254-f4e026ef9f2b",
      "name": "Подтверждение завершения смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение смены\nсвои изменения буду делать белым цветом",
        "height": 538.650511832316,
        "width": 1230.4022564984548,
        "color": 6
      },
      "id": "2eedb2ce-f4c4-425d-991a-e37eeea2bad3",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        3240
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": true,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "2d4c5069-a9e6-4090-b7ad-4a2027c9131f",
      "name": "Статус получения фото при неисправности",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        2860
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Для завершения введите <b>количество карьер-часов</b>",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "b2753151-f5a1-487b-b673-e217a3574b56",
      "name": "данные при работе в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1280,
        3160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Cмена завершена!",
        "additionalFields": {}
      },
      "id": "40752dc8-07d6-4ae4-b335-68708ff992bf",
      "name": "Завершение смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -540,
        3540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c4607d4e-d4de-464b-a48f-e6ed49f22b9a",
      "name": "получаем odoo id5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -360,
        3640
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "8e90b5b7-7b70-4773-a7e2-cfe2290f3b3e",
      "name": "Статус получения фото при неисправности1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        160,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Комментарий доставлен механикам",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "c7e1ce54-2191-47fb-ae11-9fba68168385",
      "name": "отмена отправки фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -140,
        3080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## завершение смены",
        "height": 192.98769776932238,
        "width": 878.3119518363878
      },
      "id": "b854dbf4-4b29-464f-b2df-5bf55d190071",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        3420
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `TR_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"В меню\", callback_data: \"list_to\" }] // постоянная кнопка\n    ]\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите начать\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "b171f234-4eed-4827-ada5-68a4db50230b",
      "name": "создаём динамически инлайн кнопки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        4220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "87fb0d76-1d03-4b3f-a7cc-0f5c35f16063",
      "name": "отправляем сообщение ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        760,
        4220
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "62531d7d-0a77-4923-ba9a-cbedac93f9b8",
      "name": "удаляем прошлое сообщение с заявками",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        980,
        4220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для принятия заявки",
        "height": 257.97529446338507,
        "width": 1077.334745180572,
        "color": 6
      },
      "id": "dbad07ad-0f92-4cb9-a2ce-7a4f7e232461",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        4140
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `ER_${item.json.id}` // FR - end request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"В меню\", callback_data: \"list_to\" }] // постоянная кнопка\n    ]\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите завершить\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "6d7726d2-fc84-406b-b998-ad50424becd0",
      "name": "создаём динамически инлайн кнопки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        4580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "3cf2b974-ab9c-4566-88c0-f291f60ba7a6",
      "name": "отправляем сообщение 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        760,
        4580
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "d26c1547-afde-4c16-90fd-5c3925b72730",
      "name": "удаляем прошлое сообщение с заявками1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        980,
        4580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для завершения заявки",
        "height": 257.97529446338507,
        "width": 1084.9093561699729,
        "color": 6
      },
      "id": "999d507e-a6db-4426-aa27-8a5d6ab085fc",
      "name": "Sticky Note31",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        4500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0137e4ef-a4ad-47f2-8e72-76851a2041ff",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "22b9660a-e003-4dfa-b9a8-77f8d58c806d",
      "name": "проверка наличия заявок",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        4580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "63dd877c-4ab8-46c4-bdae-22c3d7b6b23c",
      "name": "проверка наличия заявок1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        4220
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Заявки не найдены"
        }
      },
      "id": "d68c2639-f889-46fd-a9c2-513686c451a1",
      "name": "заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        600,
        4400
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4abf05d5-edc6-406e-90d8-64eed3b6647b",
      "name": "номер выбранной заявки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        200,
        4860
      ]
    },
    {
      "parameters": {
        "content": "## Водитель берёт задачу в работу",
        "height": 323.3861574435644,
        "width": 649.594490717535,
        "color": 6
      },
      "id": "af5bf3ab-4239-4dac-a608-b02210ce261d",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        4800
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "caff1ca8-9df6-4ef1-b4b1-04a7ca50236d",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1360,
        5700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2d4ca904-5fbd-4038-841e-533db4ec489e",
      "name": "проверка наличия механиков1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1585,
        5699
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('поиск тг айди механиков1').item.json.tg_id }}",
        "text": "={{ $('данные авто').item.json[\"number_car\"] }} - {{ $('Execute Workflow Trigger').item.json[\"end_request_hours\"] }} ч. - {{ $('данные водителя').item.json[\"display_name\"] }} - {{ $json.description_of_maintenance }}\n\n<b>Требуется проверить корректность выставленных часов</b>\n<a href=\"https://everest.lamart.site/web#id={{ $('Execute Workflow Trigger').item.json[\"end_request_id\"] }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Принять заявку✅",
                    "additionalFields": {
                      "callback_data": "={{\"accept_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отклонить заявку ❌",
                    "additionalFields": {
                      "callback_data": "={{\"reject_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "fc250cef-fd4d-497a-9f4f-86385ccd2692",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2440,
        5680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Ошибка Odoo: {{ $json.error }}",
        "additionalFields": {}
      },
      "id": "5f1178d5-f357-4275-aa06-b4ea8c4ddd21",
      "name": "если есть ошибки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        660,
        4966
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Заявка взята в работу. Не забудьте завершить заявку после ремонта",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку сейчас",
                    "additionalFields": {
                      "callback_data": "={{ \"ER_\"+$json.id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "В меню",
                    "additionalFields": {
                      "callback_data": "list_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "00214367-8ce6-4e2b-af07-f62e2aecefcc",
      "name": "заявка взята в работу",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        660,
        4806
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Механик получает уведомление, когда водитель завершает заявку",
        "height": 250.48240620104332,
        "width": 1538.2139291185106,
        "color": 6
      },
      "id": "7347654c-4c21-4f8b-a337-b07227c21215",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        5640
      ]
    },
    {
      "parameters": {
        "content": "## Водитель завершает заявку",
        "height": 315.592882734556,
        "width": 1246.6718203422697,
        "color": 6
      },
      "id": "e24eff36-b9a9-4230-8e34-4e77b0372fae",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        5140
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите число затраченных часов на работу:",
        "additionalFields": {}
      },
      "id": "d4a6622e-f486-45d9-bac2-cc214391e70f",
      "name": "нужно вписать часы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        620,
        5165
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a07b29c9-dcd8-44c3-931d-cf61b13f2d02",
      "name": "номер выбранной заявки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -40,
        5245
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request_hours",
            "end_request_id": "={{ $('номер выбранной заявки1').item.json.TO_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "7a65ffc7-7163-4145-8d3e-d2aa258e1ea6",
      "name": "обновим статус и номер текущей заявки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        920,
        5165
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Когда механик проверит заявку, вам придёт уведомление",
        "additionalFields": {}
      },
      "id": "592a3a13-5c57-492c-ae5a-572d6c2f67c0",
      "name": "завершён процесс заявки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        280,
        5680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "end_request_id": "={{ null }}",
            "end_request_hours": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "075b1999-dba6-4be9-aafa-e4d8dbe689aa",
      "name": "убираем номер заявки из пг",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        540,
        5680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Прикрепите фото исправления:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5cb9834c-afb9-4fb1-ae6f-8a2e048f4983",
      "name": "завершён процесс заявки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        280,
        5520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "adding_end_request_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "6959e2a5-bbfc-4f20-bda1-bb3900518f14",
      "name": "меняем на статус отправки фотографии",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        500,
        5520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопок для отправки фото завершения заявки",
        "height": 369.7365490265316,
        "width": 579.6907768759479,
        "color": 6
      },
      "id": "977f7a8f-4931-4817-b76d-94a19d20ccf7",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        5460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fc7e922b-a871-4029-abf2-95687ecdcc6a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d406b9bb-185e-42d7-b3f1-3805dae5527c",
      "name": "заявка в работе?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        5245
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Статус заявки должен быть \"В работе\""
        }
      },
      "id": "dc39d35e-83c0-44be-b0bf-b4f786de3282",
      "name": "заявка уже изменена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        760,
        5305
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=У вас есть доступные рейсы\n{{ $('первая перевозка').item.json.place_from[1] }} - {{ $('первая перевозка').item.json.place_to[1] }}\n{{ $('первая перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\n{{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить фото материала",
                    "additionalFields": {
                      "callback_data": "materials_photo"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "469fcef2-c5eb-48b3-98d6-17e49fec6ebe",
      "name": "принятие заказа",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3660,
        2120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "928a99bf-3972-47fc-be2c-0053cacb947e",
      "name": "Получение информации о водителе1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3880,
        2340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab1dea4e-d947-4ffa-a190-704692bf9687",
              "leftValue": "={{ $json.materials_photo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b3b2cd19-a8e0-470f-9157-2789e76994a4",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4080,
        2340
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "97e7adc8-5e5d-45d4-87c9-5d08530a146d",
      "name": "Обновление статуса отправки фото логисту1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4620,
        2340
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "9f170e04-51d4-4dd4-97ee-839f0f101bbf",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4360,
        2340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": true,
            "tg_id": "={{ $('Сообщение при нажатии на кнопку отправить фото').item.json.result.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "349212bb-6347-45d8-bf52-2a85347c236e",
      "name": "Обновление статуса отправки фото логисту",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        260,
        6140
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Спасибо за замену масла, следующую нужно будет произвести через 15000 км. Я обязательно пришлю вам уведомление",
        "additionalFields": {}
      },
      "id": "2da30306-fd89-4b08-8837-3869ba1d5030",
      "name": "Нажатие водителем на кнопку замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -20,
        5885
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cdda80eb-ae9f-46b0-84c9-cd62cce4fd50",
      "name": "Получаем odoo_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        220,
        5885
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обновление регламента замены масла после подтверждения водителем замены",
        "height": 242.0127880946941,
        "width": 1022.4114664041946,
        "color": 4
      },
      "id": "7ca1bb96-5f38-4f25-ab6d-ab7c8a6c6919",
      "name": "Sticky Note37",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        5820
      ]
    },
    {
      "parameters": {
        "content": "## Отправка водителем фотографии материала",
        "height": 242.24910613248537,
        "width": 576.4460386934658,
        "color": 5
      },
      "id": "d7965745-4043-4ca8-b5de-7fd3ed810e11",
      "name": "Sticky Note38",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -100,
        6080
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию и ожидайте уведомление от логиста.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "31fd3465-6291-4f3b-95fb-569879b652cb",
      "name": "Сообщение при нажатии на кнопку отправить фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        0,
        6140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопки \"назад\" при выборе отправки материала",
        "height": 254.01493864256875,
        "width": 981.6305810235699,
        "color": 4
      },
      "id": "9a764145-dfb1-4d06-876c-0ff2922fab43",
      "name": "Sticky Note40",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3800,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Нужно приложить фото исправления?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "d085831d-fc5e-474b-84ab-cdee5295f30a",
      "name": "нужно ли приложить фото?1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -520,
        5740
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "00c07f2b-5343-4732-9ad9-b4679413ba1a",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -300,
        5740
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "yes_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "386be4a5-616e-44af-bee7-3a9e3fee981c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e0aeb7f9-0c4b-475f-bef0-1e5a98d8bd2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "fea0e0d8-78dd-420f-a86a-2e9490531eae",
      "name": "фото завершения заявки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -840,
        5620
      ]
    },
    {
      "parameters": {
        "content": "## Отмена отправки фото исправления",
        "height": 207.35648349288545,
        "width": 487.077305180272,
        "color": 6
      },
      "id": "a797993e-2dc4-475c-9f82-14ba1261e535",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -600,
        5700
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "weight_or_ttn",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "66e41e3b-90f7-4384-8212-65b761f1f5e5",
      "name": "отправка весовых справок или ттн при завершении смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1580,
        5920
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Для завершения отправьте ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "career"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "weight_or_ttn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "7e921a14-772f-4509-aef7-cd348cb4c943",
      "name": "отправить весовую или ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1720,
        5240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "oil",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5d8c11e3-17b7-408e-9ef9-e1c9ec8f3258",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "materials_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "0745daa2-6674-4405-b80c-2883a55c8462",
      "name": "кнопки отправки фото груза и замены масла",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -920,
        6020
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {}
      },
      "id": "3343a099-81dc-4dfe-9316-24ea4ad11eb7",
      "name": "снова вводим номер авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        6600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "906d45e2-58e8-45df-adc3-71b83c40a6ee",
      "name": "снова ввод номера авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        360,
        6600
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c5db1478-34e6-450a-9961-a6367d295dd1",
      "name": "если сотрудник уже занял авто1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -120,
        6460
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Вы не можете занять новый автомобиль, сейчас вы привязаны к авто:\n{{ $json[\"model\"] }} {{ $json[\"number_car\"] }}",
        "additionalFields": {}
      },
      "id": "d4c3b991-2fb9-4581-9946-63b00aaab398",
      "name": "он не может занять новый, пока занят старый1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        6440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вернуться к вводу номера",
        "height": 419.59874123065686,
        "width": 1005.9448008587696,
        "color": 6
      },
      "id": "023b551f-e41c-4340-9f7f-56d05f516824",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        6360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1828b9df-68be-4ac5-8d36-fe1870a6c59e",
      "name": "водитель взял авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -280,
        2060
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Чтобы начать смену, нужно взять автомобиль"
        }
      },
      "id": "9137d33d-18dc-4700-bd3f-6d5085aa26a3",
      "name": "нужно взять авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -40,
        2180
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Начало рейса и смена статусов через эндпоинт",
        "height": 326.37446299268754,
        "width": 932.7416531557697,
        "color": 5
      },
      "id": "a709b909-d294-4c9b-9cae-9dda4bf1ad7c",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        740
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "81b345d0-4c29-4b86-b3af-a1aa4e389a44",
      "name": "получаем odoo id2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -700,
        1560
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение рейса и смена статусов через эндпоинт",
        "height": 333.57059544936584,
        "width": 1630.8723698847368,
        "color": 5
      },
      "id": "ff6ae0d9-6d3b-49a3-b5ee-32f887b9be5e",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -728.9968651247295,
        1449.6107313338616
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "786df04d-9adc-4b72-a52f-2d0613dabc81",
      "name": "Отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        3080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправить фотографию весовой справки? ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить",
                    "additionalFields": {
                      "callback_data": "document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить в конце смены",
                    "additionalFields": {
                      "callback_data": "final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5cf19de7-9abe-4b81-95f3-4c3cec4e6f89",
      "name": "Требуется ли отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        200,
        2880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "6dc9f975-f791-443e-a128-fb8416bc9a0b",
      "name": "Удаление статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -400,
        7240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2eed836a-a22c-4f31-abfd-431debae8854",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9a2c24f8-3951-4c36-9ac4-510988d3c4a9",
      "name": "есть рейсы выполняющиеся",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        580,
        1880
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет выполняющихся рейсов"
        }
      },
      "id": "12eb7802-8b9f-4b91-827a-d987a08fdb04",
      "name": "нет рейсов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        780,
        1980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Подтверждение завершения рейса",
        "height": 339.93292480078713,
        "width": 1435.063007894557,
        "color": 6
      },
      "id": "305b319c-4d5f-4345-b1f3-4008ece7bff7",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -325.96572971985825,
        1786
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "6d2fcb5c-3d7c-4fbf-91d8-22f0d9b407c8",
      "name": "удалим инлайн кнопку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1000,
        1980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## ввод данных о топливе",
        "height": 192.98769776932238,
        "width": 878.3119518363878,
        "color": 6
      },
      "id": "f269277d-d22d-4e9d-957a-c66e41624e25",
      "name": "Sticky Note56",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -980,
        7480
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "66e6ff56-e71e-48c7-bd26-1f2f2c25b8f5",
      "name": "Подтверждение завершения смены после вывода перевозки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        40,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Была ли заправка у данного автомобиля?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "fuel"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "df960e98-9033-402c-b005-5a2ac54419f6",
      "name": "была заправка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        3640
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Сколько литров вы заправили в автомобиль? Введите число, например: 100",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "check_fuel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2eaccd00-7bf1-4d24-ae5c-b976af223483",
      "name": "данные о литрах",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -700,
        7520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию чека с заправки:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад ",
                    "additionalFields": {
                      "callback_data": "cancel_receipt_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "a3c1997b-999f-40c6-866c-fdbb8e1d8b02",
      "name": "фото чека",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -440,
        8080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_fuel_count"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "444d5c7c-b152-4b4b-9d0b-445d586c2b8b",
      "name": "статус ввода литров",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -480,
        7520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "У вас сохранился чек?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "1e4d4478-53be-4560-9b49-0cf020fee2d2",
      "name": "есть ли чек",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -500,
        8260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Фото чека",
        "height": 334.02911078486767,
        "width": 615.1032860836,
        "color": 6
      },
      "id": "8da0a12f-3345-471d-8c0f-f9695ba77d0e",
      "name": "Sticky Note60",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -620,
        8044
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите меру исчисления перевозимого материала:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "м3",
                    "additionalFields": {
                      "callback_data": "measure_m3"
                    }
                  },
                  {
                    "text": "Тонны",
                    "additionalFields": {
                      "callback_data": "measure_t"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "461bcb72-e685-4137-9272-52c7092d8bf1",
      "name": "выбор меры",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        8500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "photo_fuel_receipt"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "33930a0e-cad2-4794-8e9e-94d2ea6ee5c1",
      "name": "статус=чек фото",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -260,
        8080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f84b2817-05a5-4e58-a3bc-e653f65458bb",
      "name": "статус дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -260,
        8260
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "5e6d0bfd-3b59-413b-888a-8de2fea66bff",
      "name": "статус=дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        0,
        8500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_material_volume",
            "weight_measure": "={{ $json.measure }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "71be5259-56cc-4c51-812b-cbf0b893a966",
      "name": "статус=ввод количества материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -120,
        8760
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "send_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "219e6b5f-9163-4d47-be94-eaa66793d95e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "last",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9ae7ddc4-13c4-4009-8856-5b2bfbe14441",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "mech_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5273404d-720b-4e65-82f4-df39ecd37ae7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "photo_cancel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4c57a215-ac3c-40f6-b79d-95384548ad56",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "babffdf3-0c39-4753-aba1-ccae53e98250",
      "name": "Кнопки после отправки фото",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        2800
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c998d5a5-0ba2-42ce-94b8-7eb8c4900754",
              "name": "measure",
              "value": "м3",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f0792610-a3ea-475d-8d15-a59973d54291",
      "name": "мера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -340,
        8680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd7f631a-2dd0-4bd9-a162-d6b2e9db5ffe",
              "name": "measure",
              "value": "Тонны",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4b6d394c-5763-4b8c-93fd-ad39ffb812fb",
      "name": "мера1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -340,
        8860
      ]
    },
    {
      "parameters": {
        "content": "## сохранение объёма материала",
        "height": 589.7232460239827,
        "width": 841.1891717773943,
        "color": 6
      },
      "id": "57b5d21c-fc17-4ce1-a783-1f262b1defe1",
      "name": "Sticky Note61",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        8440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы выполнили все рейсы по данной перевозке!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть назначенную перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "47cdec93-7a6d-4003-ba93-087141728128",
      "name": "Завершен рейс и перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1800,
        1700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "26526c2a-729a-424a-98f7-cfaedf65c976",
      "name": "меняем статус на дефолтный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -20,
        2880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "weight_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "23d9d15d-bff5-4e53-a612-10fa87b9e6f8",
      "name": "меняем статус на отправку весовой",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -440,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "24448d12-7e1b-4732-a4a0-0221bb3273da",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_m3",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5cf07c1d-3184-4f47-b88a-2fc5bea5dd8a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_t",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "995d0571-0865-43f5-8a88-cccb51ffb02e",
      "name": "объём материала",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -960,
        8500
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Выберите документ, который хотите проверить по перевозке:\nОтправитель - {{ $json.sender[1] }}\nПолучатель - {{ $json.partner[1] }}\nМаршрут - {{ $json.place_from[1] }}-{{ $json.place_to[1] }}\nМатериал - {{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "40044a25-0712-4417-961a-841ce9ec2063",
      "name": "загрузите ттн или весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        180,
        9500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "25f880d4-1441-4720-984b-52b10c2ed218",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        880,
        8780
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "take_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "535cadc8-a70a-4a72-a932-a352cc94843b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4a9a6c70-e2e7-4ac3-ad3b-9b2fc779f25d",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TR_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c15e9b8-76c9-4f34-96af-cf0008354db6",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"ER_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "387c7b5d-ee5f-4936-8b7c-1b37c7f0ea01",
      "name": "обработка кнопок ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1100,
        4440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "22a5f7ff-8bfe-4002-8f00-3a7a500354d9",
      "name": "номер выбранной перевозки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -620,
        9500
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "147bb7a1-ec32-4426-8dd0-f3343aa2d531",
      "name": "запишем номер выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -400,
        9500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "48add208-34ae-4254-87f0-075c733bca28",
      "name": "запишем номер выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -420,
        9280
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "a9212edb-5e61-48b2-8f58-2fc62e0d9e35",
      "name": "удаляем прошлое сообщение с выбором",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        9280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок динамическими инлайн кнопками для дальнейшей проверки документов\nА также возврат к этому меню",
        "height": 396.78241746442734,
        "width": 2211.214572365982
      },
      "id": "d254b4c4-3c6f-45f5-bccc-6d1b14623c1e",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        9060
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "48bd8666-9abc-402e-993f-5aa59dc4ce95",
      "name": "меняем статус на дефолтный4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        360,
        9500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам",
        "height": 197.9358524347207,
        "width": 1176.0644741483143
      },
      "id": "79ff5aea-0bd8-4c67-925e-b72ac3ce8725",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -689,
        9460
      ]
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 385.52249089873953,
        "width": 2012.9601224596395
      },
      "id": "1a34a580-59a3-4546-a9ad-6d65a3f5debb",
      "name": "Sticky Note64",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        10300
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "098f57df-0bbe-4f73-a543-d24413bc20c5",
      "name": "получение перевозок2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -360,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена срочная перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2b9c4d55-34a0-416f-aefb-df70e2794b13",
      "name": "вам назначена срочная перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        1300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение1').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "069458ba-206f-4101-a757-75db622e8543",
      "name": "Выводим информацию о срочной перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        1300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a5d0cbdb-e573-45da-a451-f7b859b0e6c6",
      "name": "Filter1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        160,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $json.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "c87d52a8-b033-4521-acbe-c8168704b95c",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2a61af0e-84f2-4a05-9903-c982d94711a0",
      "name": "выполняется сейчас срочная?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        1560
      ]
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "transportation[0]",
        "options": {}
      },
      "id": "a698119c-cb31-40c9-a2eb-a2c6748c5f27",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        880,
        9080
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине4').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0c728db9-be86-421f-8431-d5619194583c",
      "name": "есть ли еще рейсы по этой перевозке?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        1540
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Отправитель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"sender\"][1] }}</b>\nПолучатель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"partner\"][1] }}</b>\nМаршрут - <b>{{ $('находим прошлую перевозку').item.json.transportations.display_name.substring(11) }}</b>\nМатериал - <b>{{ $('находим прошлую перевозку').item.json.transportations.material[1] }}</b>\nКомментарий - <b>{{ $('находим прошлую перевозку').item.json.transportations.comment }}</b> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить перевозку",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "72631e3c-e537-4710-965b-e9bebf498b5d",
      "name": "Выводим информацию о срочной перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2620,
        1060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "ef3bce19-1367-4e4a-b230-c385e69f9c83",
      "name": "получение перевозок3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        1060
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "5e7f3bb6-c7e3-4fca-9d6f-3a7ff41f9ea1",
      "name": "разделение перевозок1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1620,
        1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bb8153e1-c56a-4454-a9d3-3d7fe5fd3d07",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ad86651-7052-4675-afdd-d21c0aa55b2f",
      "name": "завершена ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы завершили срочную перевозку\nДо этого Вы выполняли перевозку:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "38b2f2db-ca7d-41ce-92ef-96ca9a98c600",
      "name": "срочная перевозка завершена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2420,
        1060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.transportations.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "5a61de57-7c06-4354-93fb-20f077c6a0db",
              "leftValue": "={{ $json.transportations.type }}",
              "rightValue": "Запланированная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2088af68-7890-4918-92f3-a3f60118bb5c",
      "name": "находим прошлую перевозку",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1820,
        1060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d317cf97-b02a-474d-8e66-ec2db2449531",
      "name": "есть ли еще рейсы по этой перевозке?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1200,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине10').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6e6945b-2eba-408d-bd83-092da40b30dc",
      "name": "есть ли еще рейсы по этой перевозке?2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2200,
        1060
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Filter1').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4fba5f76-b59c-4fcf-ae19-1558fa980b32",
      "name": "есть ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        1300
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "800e72bc-8785-48b2-b107-ce5d0db0b1e3",
      "name": "Summarize5",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1020,
        1300
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d8ca2602-cd3d-4478-9db1-e57de633dd29",
      "name": "Удаление дневной статистики",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        120,
        3460
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "f5334c8c-54ae-47a5-9559-2585f641aeb1",
      "name": "удаляем прошлое сообщение с завершением смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -860,
        9120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Меню выполнения следующего рейса, либо перевозка заверена",
        "height": 326.33462121963237,
        "width": 711.5058573856858
      },
      "id": "ba19e7c5-c266-49d5-a247-64eb04699028",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        1460
      ]
    },
    {
      "parameters": {
        "content": "## Проверка наличия срочной перевозки",
        "height": 190.88466314753396,
        "width": 1514.209602825899
      },
      "id": "c2f01092-b1ba-48d6-8c45-c3d27b3c63c9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -379.71297653981696,
        1265.5871571978169
      ]
    },
    {
      "parameters": {
        "content": "## Вывод срочной перевозки",
        "height": 210.2083569266656,
        "width": 751.5916578131095,
        "color": 5
      },
      "id": "0a1d475b-d6c9-4633-8a88-4fdebcddb7a5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1140,
        1240
      ]
    },
    {
      "parameters": {
        "content": "## Завершена ли срочная еревозка и возврат к предыдущей",
        "height": 223.82830383823693,
        "width": 1656.5765497002262
      },
      "id": "a407e420-00ac-484d-812d-61a74897818a",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        1021.4692021114788
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "5454559f-bd72-4dbc-9631-b812c2b516cc",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -420,
        9120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.display_name.substring(11)}`,\n    callback_data: `TS_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"Завершить проверку\", callback_data: \"check_fuel\" }] // постоянная кнопка\n    ]\n};\n\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Проверьте наличие ТТН и Весовых справок в перевозке.\\nВыберите необходимую перевозку🛻\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "f07a1c7e-9dd7-4ae8-b85f-4fe18e8463ae",
      "name": "создаём динамически инлайн кнопки2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        9100
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "За эту смену у Вас не было перевозок или у Вас нет выполненных рейсов, чтобы загрузить ТТН или весовые",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_fuel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "6196d957-98c2-41a5-9a43-4ee413092e9b",
      "name": "сегодня не было перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        640,
        9300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "00384255-8f8b-47c6-a3ab-b5f6d619850e",
      "name": "номер выбранной перевозки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -640,
        10820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "72150bff-c3ec-494e-b60c-48686e67f607",
      "name": "запишем номер выбранной перевозки2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -420,
        10820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "cfafa115-6ec0-4f41-8b8b-2a1fd51bdca9",
      "name": "меняем статус на дефолтный6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        340,
        10820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам после загрузки весовых",
        "height": 241.63069006760355,
        "width": 1300.757384350416
      },
      "id": "458da077-6dcd-4bb0-9c9f-5ebf813bc6ac",
      "name": "Sticky Note66",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        10760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "9abcee44-e540-4b3e-8c3a-c93d1d77304c",
      "name": "загрузите ттн или весовые2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -820,
        10820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Вы в главном меню",
        "additionalFields": {}
      },
      "id": "05d2d847-9292-4321-ae29-e33667741583",
      "name": "назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        9960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "ca614fb8-391a-4406-834e-d8f4ef916ee5",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "d2579440-0f5c-46b6-a44f-358875c027fb",
      "name": "статус=дефолт",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10120
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## меню Срочно",
        "height": 987.9912140099913,
        "width": 515.4472763738418,
        "color": 6
      },
      "id": "92f1ceca-c933-4677-a4bf-a6cde93cf651",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1340,
        9760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с маршрутом\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1bc5051b-224b-4e43-9f26-9023dc85a77f",
      "name": "отправьте данные1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_route"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "841adb40-45bf-4f04-a243-52d0f84a8177",
      "name": "статус=отправка срочно маршрут",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10320
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "55"
      },
      "id": "cabf30c5-8d93-4781-af59-ed8106ad8dc6",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1900,
        1980
      ],
      "disabled": true
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "f1cdfece-a979-4ef9-9894-c2bb52291f60",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1660,
        10240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7f84a611-f50f-465c-a3dd-692d66da7b75",
      "name": "есть рейс?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1460,
        10240
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет начатого рейса, вы не можете указать проблему"
        }
      },
      "id": "709b555d-aafd-484c-9141-80d27975b05d",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "17b07bf8-04f4-4c0e-8431-df564f417079",
      "name": "актуальный рейс1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1660,
        10440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "67a31db1-919b-47e2-8345-fd0853c76d58",
      "name": "есть рейс?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1460,
        10440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с документами\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ba57ba75-0cc3-4ec6-927b-35dfe3934c03",
      "name": "отправьте данные2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_document"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "db216c9e-225f-4560-98f1-2dd30e2c1851",
      "name": "статус=отправка срочно документ",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "3b44b4b9-cba4-4fc7-a6c7-4669bdb17a59",
      "name": "обновим статус на \"в работе\"",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        4860
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1 }}"
      },
      "id": "f1ebef7f-c9b8-4872-b666-eb0bd9b17b8c",
      "name": "удаление меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -2120,
        11360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id  }}"
      },
      "id": "0159ad2c-a7ff-4b47-beae-1110b484dc35",
      "name": "удаление меню ТО1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1900,
        11380
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_round",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}},\n  {{ $json.weight.replace(\",\", \".\") }}\n}",
        "options": {}
      },
      "id": "86c11ba7-8eff-4ac0-abc8-a4e5e83c1e01",
      "name": "завершение рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        280,
        1560
      ]
    },
    {
      "parameters": {},
      "id": "12c2e2e0-01e7-43ce-8d7f-d219b9e1a478",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        120,
        1560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_volume\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6c58e844-efe3-42f9-9f4d-655e80bcb6f9",
      "name": "убираем \"м3\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -80,
        1500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_netto\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -7) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "60eff6a8-a3f5-497c-b50b-9b3d46098894",
      "name": "убираем \"Тонны\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -80,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "08a92bfe-71ab-4255-b3f3-6dc12a071035",
      "name": "меняем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2100,
        12140
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fd77471c-b51b-4c75-b5b5-cb11b5e7b7cd",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1420,
        11840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.employee_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "733f1c28-e5d7-4817-9fe2-2c9a1826dde9",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1200,
        11840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "f7c75aeb-0cfb-49a0-ab55-1c6f658e8316",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1120,
        12040
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к другому водителю.\nВы не можете занять этот автомобиль",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "2c351f6d-e6a5-488b-93be-b23a9896ba79",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -960,
        11760
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ab28b688-9921-4bdf-ba7a-7983ece2e113",
      "name": "ввод одометра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -480,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_odometer",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "dca0ef47-dcdb-4996-a50e-9c3eb8d6a666",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -780,
        11860
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "addca46d-ddcf-4726-83e5-0038c041d14c",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1880,
        12140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1}}",
        "text": "=Ваш автомобиль {{ $('Odoo1').item.json.model }} - {{ $('Odoo1').item.json.number_car }}",
        "additionalFields": {}
      },
      "id": "8cde5c82-3f37-45db-bfe2-0aa9164a9495",
      "name": "Изменение прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1 }}"
      },
      "id": "669e629b-7a8e-439d-8432-49a7e60a0d8d",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1660,
        12140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_input_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "475a9936-9e3b-4576-a4d4-1b35af3b38e0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "correct_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "ba95cf6b-9a24-4bd2-97dd-1b32b68bd7df",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -760,
        6480
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "ef8b7eed-46ff-4096-91b3-16b7c57ac571",
      "name": "убираем кнопки у подтверждения номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -440,
        6620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a2cf534c-c213-4d0a-a95c-1eb09a1cd371",
      "name": "ввод одометра1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -240,
        6620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_odometer"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "a12ac161-fac5-49d9-bacf-10306be6e290",
      "name": "статус ввода одометра1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -40,
        6620
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок на день в начале смены",
        "height": 318.97070094800966,
        "width": 1046.2058075770242,
        "color": 3
      },
      "id": "8c104d94-654d-4ac1-94ef-7e6fc4ad6183",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        2360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}},\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "617418f5-65b3-42c2-87df-0858b6b043fa",
      "name": "начало рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -160,
        840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "2782b0d7-b352-4bf9-92bb-b2bd064ed50a",
      "name": "Выводим информацию о перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        2100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44efe1cd-1ec6-4f53-adb5-ffa5dd25effa",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершена",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "e2d3564c-e6ef-45f4-bd61-2e82ed8f86c8",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Приостановлена",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6642a19c-3056-43d9-b008-43062d8428bd",
      "name": "убираем завершённые перевозки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        2360,
        2040
      ]
    },
    {
      "parameters": {},
      "id": "9dc365b5-e243-4718-93e8-126677a0593e",
      "name": "первая перевозка",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2580,
        2040
      ]
    },
    {
      "parameters": {
        "content": "## Вывод остатка",
        "height": 314.21707399841006,
        "width": 1373.4954938883134,
        "color": 6
      },
      "id": "83e6c838-a1bd-4424-9ee4-ed09df15d584",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        1860
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_queue",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }}\n} ",
        "options": {}
      },
      "id": "1238a871-8cd1-4e54-b162-592866274ee5",
      "name": "очередь перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1720,
        2040
      ]
    },
    {
      "parameters": {},
      "id": "b27549ad-1961-4481-8bc3-464ad3d67d5c",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2120,
        1740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "576be792-da0a-4129-b754-b4da4f75c36a",
              "name": "message",
              "value": "=Осталось перевезти {{ $json.required_ton - $json.current_ton }} т.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "698d9e1b-12c3-4852-ab83-0e446db3a9d0",
      "name": "текст для тонн",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3400,
        1780
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "576be792-da0a-4129-b754-b4da4f75c36a",
              "name": "message",
              "value": "=Осталось перевезти {{ $json.required_cubic_metre - $json.current_cubic_metre }} м3.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "91cce0ff-9a11-4fe4-a2c5-41b200437006",
      "name": "текст для кубометров",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3400,
        2000
      ],
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "bfdc2e76-9fd4-44c1-956e-7e2e19c768c0",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -600,
        2440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "c6f7c737-9bc6-46f5-ab80-b7437d3e2c20",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        2380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1c12639e-aa64-4e13-904b-3daf2d61e52b",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -120,
        2380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "44349516-86a3-484d-8fa7-0fb91ba1f8bc",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        300,
        2440
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "transportation_round[0].driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "21345275-c1fa-4927-a3cd-9dd9d115c910",
      "name": "склеить имена водителей",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        920,
        2460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "id": "6a328fd3-aef7-4124-b3aa-03e6dea822ea",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1160,
        2460
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_transportation_round0_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_transportation_round0_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "21caf5e6-5fc1-4533-a7ce-d4342d1bc8d5",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к первой перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0b45bc1d-e75c-4f29-992f-cd2aeb7212f9",
      "name": "Вывод перевозок на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        2480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "4433ffb4-53f8-49e9-bd8a-c1a48d6e1b75",
      "name": "убираем кнопки в меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1980,
        2680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод водителей с той же перевозкой",
        "height": 357.7855900491362,
        "width": 1115.923707913178,
        "color": 6
      },
      "id": "3b3eb448-b27f-4728-97e8-e78fc64c4182",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        200,
        2300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "перевозки",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3b94dea5-8c7e-47f9-9a98-7bdb5e8a8c0c",
      "name": "вывод перевозок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        3860
      ]
    },
    {
      "parameters": {
        "content": "## Вывод перевозок водителю",
        "height": 326.7771809966836,
        "width": 1921.1026431074927,
        "color": 3
      },
      "id": "7b81977f-681a-4b35-bcf8-98d397604292",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -900,
        3800
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "acf68134-428e-449d-9bb7-8f69e58a5b23",
      "name": "получаем odoo id8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -780,
        3880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "0182b965-23cd-4d18-a96e-667b3a6caad6",
      "name": "получение перевозок7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        3880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('сортировка перевозок и работ').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b65cd4e-562f-4b9e-b971-c95034b0f03c",
      "name": "есть ли перевозка3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        140,
        3800
      ]
    },
    {
      "parameters": {},
      "id": "f86c93b2-aaab-4fc4-bdfb-85571a148d08",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        420,
        3780
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre || 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "938f3567-c5cd-4b1a-ab8c-8c2394b1c800",
      "name": "преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        3780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ddf86125-a34c-4261-a381-7aa3af6ec422",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "Работа",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "78448058-0264-46ac-a15d-c9ba542d0591",
      "name": "перевозка или работа в карьере",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        3820
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначено следующим:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "a6a69ed2-bf28-4cfb-b73f-3d1dfee5e337",
      "name": "вывод работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        3720
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "f016ddfc-20ea-4c55-8c67-ebf42c9fa8c8",
      "name": "Выводим информацию о работе",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1400,
        3720
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена следующая перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "3eaf1c4b-3d09-451f-b927-21ed722727f4",
      "name": "вывод доступных перевозок5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b4bb58b2-00b8-411e-950c-00b41769059f",
      "name": "Выводим информацию о перевозке6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Limit').item.json.route[1] }}",
            "id": "={{ $('Limit').item.json.id }}",
            "driver_id": "={{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "count",
              "displayName": "count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weigth",
              "displayName": "weigth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "driver_id",
              "displayName": "driver_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3cac68f9-6b79-49b1-b4a2-53caf31b5d09",
      "name": "Добавление перевозки в бд3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1540,
        3980
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## вывод информации о перевозке",
        "height": 230.83366425667094,
        "width": 649.0474523395976
      },
      "id": "f6d1de14-ded2-4dff-af13-665bef3e7378",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        3920
      ]
    },
    {
      "parameters": {
        "content": "## вывод информации о работе",
        "height": 206.09289092967919,
        "width": 637.5017581203348
      },
      "id": "c6177ff8-ab93-4c4b-8149-c5f9eaa32d66",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        3680
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\n\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "db860461-89e3-4e09-9118-4516e333212a",
      "name": "сортировка перевозок и работ",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        3800
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c27d7fcb-0492-4a3c-aa0e-f05c0bc58b13",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "cbc35dca-b549-44be-9432-d8f95f44d2da",
      "name": "Вывод перевозок на день, работа первой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        2280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток кубометров по текущей перевозке - {{ $('находим какая сейчас перевозка').item.json.diff_cubic_metre }}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "06778830-868c-4dd2-971e-d809da3d82af",
      "name": "Рейс завершен м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2180,
        1400
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток по текущей перевозке -  {{ $('находим какая сейчас перевозка').item.json.diff_ton }} т.</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "be4f384e-9523-4910-ae58-8065f0ac66bb",
      "name": "Рейс завершен тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2300,
        1540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a22d8717-31bf-4c08-bdcc-48ad1d7f83bd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "other_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "87a99ea2-7aa6-4205-b695-6db2084a267a",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2420,
        11940
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": \"{{ $('поиск текущего авто3').item.json.number_car }}\"\n}   ",
        "options": {}
      },
      "id": "74162095-f085-49d2-b12d-90ee40dd2c04",
      "name": "получение перевозок6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1560,
        12960
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "8cda3598-a429-44d8-835a-45efe6d52408",
      "name": "Получение введенных часов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2280,
        12960
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "input_quarry_hours",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "4bbaa94d-1e85-43da-9414-40ee479d4ae4",
      "name": "Смена статуса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1760,
        12780
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "94c398fe-0b02-426e-b17d-5176c399b35d",
      "name": "Начало работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1880,
        12600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('поиск текущего авто3').item.json.id }},\n  \"hours\": {{ $('Получение введенных часов').item.json.current_quarry_hours }},\n  \"count_rounds\": 1\n}     ",
        "options": {}
      },
      "id": "290922d6-067c-4607-bf0d-f44286103d8d",
      "name": "завершение карьерных работ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        60,
        12800
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"hours\": {{ $('Получение введенных часов1').item.json.current_quarry_hours }}\n}       ",
        "options": {}
      },
      "id": "6b233a43-1f4f-4735-97fc-9284628ec2d3",
      "name": "завершение карьерных работ1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1980,
        13360
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "a2b87ce5-9a8e-4335-8120-e07c000a8ed3",
      "name": "Получение введенных часов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2420,
        13340
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": \"{{ $('поиск текущего авто2').item.json.number_car }}\",\n  \"driver_id\": {{ $('поиск текущего авто2').item.json.driver_id[0] }}\n}  ",
        "options": {}
      },
      "id": "3cf61443-03f5-4121-9c84-33d2b3c994ae",
      "name": "accept_order",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1500,
        12600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "Вы выполнили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0d3bc81d-86a8-4e47-b835-2aadd6fe1b2d",
      "name": "Выполнена работа в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -180,
        12800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Условие по часам не выполнено! Осталось ещё {{ $('Проверка часов').item.json.required_hours - $('Получение введенных часов').item.json.current_quarry_hours }}. Вы уверены, что хотите завершить работу?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "finish_quarry_work"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "7f5c5e18-275f-4274-9a09-578397182148",
      "name": "Недостаточное кол-во часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -120,
        13000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите количество карьер-часов. Пример: \"8\"",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "2b605223-6061-4f5c-ac32-ca2af9f80b7a",
      "name": "Ввод часов1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2000,
        12780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "51a1c0fd-fa8b-43e5-8969-5b815700250f",
      "name": "Начало работы в карьере2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2280,
        13200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выполнили работу в карьере!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "65e06dc1-a27e-4e66-9dec-98bd818caf10",
      "name": "Работа в карьере выполнена1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1480,
        13320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item\n.json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2d544bd8-17ab-4b9c-b1e8-a43d350fa720",
      "name": "убираем кнопку у перевозки на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2140,
        12620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "1fa98ec5-618b-449a-a389-aef7066dae8c",
      "name": "Telegram5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1860,
        12960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "2bc00353-8bb4-4fcd-9f15-05a7bf82da65",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1220,
        12900
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "08e37e1b-8f6d-46c4-a6ae-19dbf8f63cc5",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1000,
        12900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f1c26ea0-98da-4685-83a4-979d32f63755",
              "leftValue": "={{ $('Получение введенных часов').item.json.current_quarry_hours }}",
              "rightValue": "={{ $json.required_hours }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "34197ca7-44b7-43e4-919f-74dafb44cb84",
      "name": "Проверка часов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -760,
        12900
      ]
    },
    {
      "parameters": {
        "content": "## Работы в карьере",
        "height": 1128.1889295296114,
        "width": 3053.4219888044854,
        "color": 6
      },
      "id": "623613e0-6aef-4cfc-8511-7fff366eb6d5",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2700,
        12420
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm:ss",
        "options": {}
      },
      "id": "b5f0df97-f988-4f7b-963d-d7a4f4cae1b1",
      "name": "форматированная дата",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        420,
        7880
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_refill_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"date\": \"{{ $json.formattedDate }}\",\n  \"car_number\": \"{{ $('авто1').item.json.number_car }}\",\n  \"number_of_liters\": {{ $('Execute Workflow Trigger').item.json.fuel_liters }},\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "6f5f23b9-9cd4-48b1-8272-0eb9a6bf6802",
      "name": "отправялем запрос",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        7880
      ]
    },
    {
      "parameters": {
        "options": {
          "timezone": "Asia/Yekaterinburg"
        }
      },
      "id": "e285879d-06f4-47ef-92be-fe568042ebb7",
      "name": "время екатеринбург",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        200,
        7880
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "3a78e34f-da90-4455-b7c1-9bad7dfe5598",
      "name": "меняем статус на обычный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1096,
        7880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Информация о заправке передана в систему. Спасибо!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "73a0fdae-a597-4093-aaf9-402fba051303",
      "name": "данные занесенны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        860,
        7880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод литров",
        "height": 270.986894258945,
        "width": 1232.275685576996,
        "color": 6
      },
      "id": "3c41e2f1-92aa-48a2-9452-da2b54ea58d5",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        7780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4c3c04f1-6431-46e9-8052-32be5be9b010",
              "leftValue": "={{ $json.weight_measure }}",
              "rightValue": "м3",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6a633fc0-f851-468a-ac6a-dc8c4a158062",
      "name": "Проверка выбранного матрериала",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        100,
        8760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "278d542c-7e09-4b2c-a154-8d0298da509b",
      "name": "ввод количества материала м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        360,
        8660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите массу перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "cc7caa5b-6b8d-4485-980f-88a5aa66f505",
      "name": "ввод количества материала тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        360,
        8840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "77bab3c8-8b6b-4f44-9260-403bc4096995",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -300,
        1560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d6935db4-813b-4683-b6de-89ca440c23a7",
              "leftValue": "={{ $json.end_condition }}",
              "rightValue": "В течении смены",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "12e94e2f-461a-4379-bf47-d72962ac595a",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -560,
        12720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('поиск текущего авто3').item.json.id }},\n  \"hours\": {{ $('Получение введенных часов').item.json.current_quarry_hours }},\n  \"count_rounds\": 1\n}     ",
        "options": {}
      },
      "id": "8a6d2ddc-c2a0-4be4-935f-3d8f7055287d",
      "name": "завершение карьерных работ2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        60,
        12580
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "Вы завершили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "75cad69f-3ae9-45e9-bdab-7435b0d421b8",
      "name": "Выполнена работа в карьере без условия",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -180,
        12580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "066f3458-627a-4880-8a05-94d6baceabba",
              "leftValue": "={{ $('находим рейсы без ттн').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7ceffad6-eabc-4120-9a3e-ef10bf55ca72",
      "name": "есть ли рейсы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        620,
        9100
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "f94be98c-f8f1-4704-98c0-334305d62c81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "2fd426ab-a8c4-4d3d-ac1c-695cb0c9155b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "add_fuel_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4e2010a9-533d-40b6-8dd9-d434e1f1fb81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "cancel_receipt_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a17e598e-f884-4dc3-aa1d-050c3682d18a",
      "name": "данные о топливе",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -920,
        7520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/finish_shift",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"number_car\": {{ '\"' + $json.number_car + '\"' }}\n}",
        "options": {}
      },
      "id": "63284550-3e9e-4fc9-9648-31d220cbcedf",
      "name": "завершение смены",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -80,
        3460
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Смена завершена!",
        "additionalFields": {}
      },
      "id": "541e8825-0ec2-43c3-a2f0-1a8af0e02c0a",
      "name": "смена завершена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        340,
        3460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "777b7167-dbb7-4865-b92a-900bdce50bfd",
      "name": "разграничение перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        9100
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Вывод статистики \nПока данные берутся из Postgres",
        "height": 438.94672682336886,
        "width": 2194.2075928205836,
        "color": 6
      },
      "id": "6549db96-c4fd-4b2d-85b0-bb67ad273747",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        6820
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "delete_TO",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "80854457-e861-4c79-ad48-ac86c715f7de",
      "name": "Удаление меню ТО/статистика",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2440,
        11400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst input = items[0].json;\n\n// Извлекаем данные\nconst inputData = input;\n\n// Функция для склонения слова \"тонн\"\nfunction declineTonne(number) {\n    if (number % 100 >= 11 && number % 100 <= 19) {\n        return \"тонн\";\n    } else if (number % 10 === 1) {\n        return \"тонну\";\n    } else if (number % 10 >= 2 && number % 10 <= 4) {\n        return \"тонны\";\n    } else {\n        return \"тонн\";\n    }\n}\n\n// Функция для обработки данных и формирования сообщений по тоннажу\nfunction generateTonneMessage(data) {\n    // Проверка на наличие необходимых данных\n    const diff_ton = data.diff_ton;\n\n    if (typeof diff_ton === 'undefined') {\n        return {\n            message: \"Ошибка: недостаточно данных для расчета.\"\n        };\n    }\n\n    // Расчет оставшегося объема для перевозки\n    const remainingTonnes = diff_ton;\n    const tonneWord = declineTonne(remainingTonnes);\n\n    return {\n        id: data.id || 'Неизвестный ID',\n        message: `Осталось перевезти ${remainingTonnes} ${tonneWord}.`\n    };\n}\n\n// Обработка данных\nconst result = generateTonneMessage(inputData);\n\n// Возвращаем результат для следующего кубика в формате JSON\nreturn { json: result };\n"
      },
      "id": "c2711c0d-dcc0-470d-9b07-90c4025e2c68",
      "name": "Текст для тонн",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3020,
        1800
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst input = items[0].json;\n\n// Извлекаем данные\nconst inputData = input;\n\n// Функция для склонения слова \"кубометров\"\nfunction declineCubicMetre(number) {\n    if (number % 100 >= 11 && number % 100 <= 19) {\n        return \"кубометров\";\n    } else if (number % 10 === 1) {\n        return \"кубометр\";\n    } else if (number % 10 >= 2 && number % 10 <= 4) {\n        return \"кубометра\";\n    } else {\n        return \"кубометров\";\n    }\n}\n\n// Функция для обработки данных и формирования сообщений\nfunction generateMessage(data) {\n    // Проверка на наличие необходимых данных\n    const diff_cubic_metre = data.diff_cubic_metre;\n\n    if (typeof diff_cubic_metre === 'undefined') {\n        return {\n            message: \"Ошибка: недостаточно данных для расчета.\"\n        };\n    }\n\n    // Расчет оставшегося объема для перевозки\n    const remainingCubicMetres = diff_cubic_metre;\n    const cubicMetreWord = declineCubicMetre(remainingCubicMetres);\n\n    return {\n        id: data.id || 'Неизвестный ID',\n        message: `Осталось перевезти ${remainingCubicMetres} ${cubicMetreWord}.`\n    };\n}\n\n// Обработка данных\nconst result = generateMessage(inputData);\n\n// Возвращаем результат для следующего кубика в формате JSON\nreturn { json: result };\n"
      },
      "id": "55b7dce4-da61-48ee-aa8f-443d36cc7f8e",
      "name": "Текст для кубометров",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3140,
        2000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "56a65c23-f7c2-46db-bfcd-8287fe8833b4",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "after_stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "bbe59062-4a97-4103-b518-184012dd85f7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4036e3c8-482d-4940-87c7-933b80ed0e5f",
      "name": "Статистика1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -900,
        7100
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "8a86fc1f-9a17-4c58-afe5-ec02f8e5558e",
      "name": "Нет доступных перевозок2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -620,
        7340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $json.last_message_text }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "8a47a72a-35f2-4759-96a7-d32daa4d03d6",
      "name": "начатый рейс1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -840,
        2140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1}}"
      },
      "id": "6c13730d-973b-433b-82b3-55df25d829bf",
      "name": "Удаление статистики1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -200,
        7260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d446d04f-a6e9-4ea0-8bbb-a02fd1dbf0a9",
      "name": "Рейс завершен без условий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2320,
        1700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "8d3ef73d-2f63-4e2f-a898-230d8dbec89f",
      "name": "айди последнего сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2580,
        1540
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "bffb048a-d1d4-4c29-841a-794bb959232f",
      "name": "айди последнего сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        120,
        13100
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "5f71825e-3493-44c2-b329-4e02f490d1d8",
      "name": "айди последнего сообщения2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1960,
        2320
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "driver[1]",
        "options": {}
      },
      "id": "debde070-1954-486e-b0d5-4b02d09db5ab",
      "name": "Remove Duplicates1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        740,
        2460
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "0e498752-cbea-491e-b33d-2775fcb9a7ba",
      "name": "Сортировка перевозок и работ в карьере2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $(\"Filter1\").all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    material = material.replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre || 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "a44c2691-3964-4fd3-9420-b557ed4265c3",
      "name": "преобразуем в сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        1300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('находим какая сейчас перевозка').item.json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "966f91de-5633-4f42-947f-f1ea75b1d289",
                    "leftValue": "={{ $('находим какая сейчас перевозка').item.json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "cd295cd2-5522-42e8-a7fa-e11282c6c17d",
      "name": "метры или тонны?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1980,
        1560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5fae1a58-fae7-4589-85b3-5bb638d4e529",
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "8ef0a264-b144-408f-9610-a13fd23bc100",
      "name": "тонны или м3?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2780,
        2040
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "26bc0843-76d6-47d5-8965-3dc8ebb1fcb8",
      "name": "айди последнего сообщения3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3880,
        2020
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "6fb344b8-2202-44d1-b21d-8f672278767c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_ok",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "68071ac7-12d9-4440-97e3-ca534a0322b2",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_wrong",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "0a4007cb-c704-41a6-b19c-67a5d74d756e",
      "name": "кнопки меню ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        2420
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1e0e51fd-c0ea-4942-a57c-3d7b944aab41",
      "name": "меняем статус на дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        3680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.error }}",
                    "rightValue": "Not found quarry_work or transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "673fd19a-4a69-4d21-97be-8141db27553c",
      "name": "ошибки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.1,
      "position": [
        60,
        940
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "=В Odoo для авто {{ $('находим машину по odoo id').item.json.number_car }} не найдена перевозка или работа в карьере.\n\nОбратитесь к диспетчеру или логисту"
        }
      },
      "id": "5593bc3c-e5ac-4231-9492-5084e2d00187",
      "name": "Нет перевозки или работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        460,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept_quarry",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c9613d4-cb1a-4598-9a01-875cff830f42",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a045e192-717d-46b0-bc5e-cfd48bda407a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "d922ac87-5b93-41cf-8429-3279f3798557",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "95b4736f-c6f3-45f9-bfd7-e82230f3eadd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_quarry_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "5f70efa6-2658-4c27-b0df-1d9704509943",
      "name": "Работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2580,
        12660
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "3rrkoGcEong0P5sj",
          "mode": "id"
        },
        "options": {}
      },
      "id": "11c4e925-c024-45f5-92e1-5a0994a65c6a",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -2840,
        12960
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            },
            {
              "column": "logist_notifications",
              "value": "={{ true }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3f0031b4-0fc6-4617-9321-b0ef8f6d14c8",
      "name": "поиск тг айди логистов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2040,
        680
      ],
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.time_of_start }}",
        "format": "custom",
        "customFormat": "HH:mm dd.MM.yyyy",
        "options": {
          "timezone": true
        }
      },
      "id": "a46c29a7-86c0-4b1f-b0d9-da9f6fa8a913",
      "name": "форматируем время в удобный формат1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1580,
        680
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "={{ $('находим машину по odoo id').item.json.number_car }} - {{ $('находим машину по odoo id').item.json.driver_id[1] }}\nВремя взятия рейса - {{ $('форматируем время в удобный формат1').item.json.formattedDate }}\n{{ $('начало рейса').item.json.place_from[1] }} - {{ $('начало рейса').item.json.place_to[1] }}\n{{ $('начало рейса').item.json.material[1] }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "29f7c0ed-9ac7-4490-826f-844d87c1feb7",
      "name": "отправка сообщения о начале рейса логистам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2260,
        680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## уведомление логистов о начале рейса",
        "height": 248.5360343562641,
        "width": 1421.375366828862
      },
      "id": "3ba0c200-42c4-4684-91d6-242bbcb890b9",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        620
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b5c6db03-1420-42d7-8565-0937021e8343",
      "name": "Нет доступных перевозок3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1420,
        2900
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0af1d49e-8c5b-4078-a280-af4fb659d5ee",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "283e1887-8229-4f96-98bc-6c9110cadb6f",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1180,
        2940
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a777baac-89ac-43a1-ac5b-09a7c7888636",
      "name": "Нет доступных перевозок4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1420,
        3100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0af1d49e-8c5b-4078-a280-af4fb659d5ee",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "0dbfe8d4-2de2-4862-97db-e11c311d5198",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1460,
        4260
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "bb71ae36-4d83-4256-8cfc-104ae77ef99b",
      "name": "Telegram4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        4320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0beef88b-53f8-449a-9cec-bd7840cfe246",
      "name": "Нет доступных перевозок7",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        4320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2ebcee43-92d2-4051-82d9-7c1d79ae54d8",
      "name": "Нет доступных перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1680,
        4220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ef69fd13-1953-4734-87e3-aaae5cd69732",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        4460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "b662c8d1-dbb9-4ba7-8a5c-10468a532d90",
      "name": "Telegram6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        4500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d7c5ea47-a8f3-4580-a13d-5df4668ac20a",
      "name": "Нет доступных перевозок8",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        4500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e8334de-8c33-406e-adfb-2f8e35f2ccb4",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "49914fdb-47be-49ec-ba33-55f8deaa8ed8",
      "name": "есть рейсы за сегодня?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2560,
        9080
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "f16bcdf9-71b1-40ce-b48a-136efc493bff",
      "name": "счёт рейсов",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2780,
        8960
      ]
    },
    {
      "parameters": {
        "jsCode": "var data = $('создаём динамически инлайн кнопки2').all()[0].json;\ndata.message.text = 'Количество завершенных рейсов: ' + $('счёт рейсов').all()[0].json.count_id + '\\n' + data.message.text;\nreturn data;"
      },
      "id": "816138f2-edf8-423b-a60c-19f93b939113",
      "name": "форматируем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2980,
        8960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "4692bf50-4417-46e3-8d85-6465f1533271",
      "name": "отправляем сообщение 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3180,
        9080
      ]
    },
    {
      "parameters": {
        "jsCode": "var data = $('создаём динамически инлайн кнопки2').all()[0].json;\nreturn data;"
      },
      "id": "ab70b2d4-9617-4af4-a38a-a2a9be7d616a",
      "name": "форматируем1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        9140
      ]
    },
    {
      "parameters": {
        "includeTime": false,
        "options": {
          "timezone": "Asia/Vladivostok"
        }
      },
      "id": "7069d027-5e48-4fe7-9a5f-85c33b4f19c3",
      "name": "сегодняшнее число",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1720,
        9100
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "52fe00ce-2759-4116-b120-331286e72d20",
      "name": "Объединение рейсов в один файл",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        400,
        6880
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, start_time } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            // Добавляем 10 часов к дате\n            const adjustedDate = new Date(start_time);\n            adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        // Добавляем 10 часов к дате\n        const adjustedDate = new Date(start_time);\n        adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "ac39890f-1370-4d6c-9f78-876049160438",
      "name": "считаем часы и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        7080
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для добавления 10 часов ко времени\nfunction addHoursToTime(timeStr, hours) {\n    const dateObj = new Date(timeStr.replace(\" \", \"T\")); // Преобразуем строку времени в объект Date\n    dateObj.setHours(dateObj.getHours() + hours); // Добавляем 10 часов\n    return dateObj.toISOString().replace(\"T\", \" \").split(\".\")[0]; // Преобразуем обратно в строку и убираем миллисекунды\n}\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Добавляем 10 часов ко времени\n            const adjustedTime = addHoursToTime(time_of_start, 10);\n\n            // Извлекаем только дату из скорректированного времени\n            const date = adjustedTime.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "9e7facde-040e-4a71-88e6-02daac836660",
      "name": "считаем по дням кол-во рейсов и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        6880
      ]
    },
    {
      "parameters": {},
      "id": "503eaa24-57d1-4880-9f8c-cd791a3e019f",
      "name": "соединяем рейсы и работы",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        900,
        6960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные через items\nconst inputData = items.map(item => item.json);\n\n// Задаем текущую дату для тестирования\nconst today = new Date(); //'2024-10-11T00:00:00'\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60));\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1)); // Учитываем воскресенье как последний день недели\n\n// Функция для обнуления времени в дате\nfunction resetTime(date) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0); // Убираем компоненты времени\n    return newDate;\n}\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    const resetDate = resetTime(date);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === resetDate.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' });\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за месяц\nfunction getMonthlyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    const start = resetTime(startDate);\n    const end = resetTime(endDate);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        if (entryDate >= start && entryDate <= end) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours;\n                totalEarnings += entry.total;\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Определяем начало и конец текущего месяца\nconst startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Последний день месяца\n\n// Получаем отчет за текущий месяц\nconst currentMonthReport = getMonthlyReport(startOfMonth, today);\n\n// Проверка на вывод отчета за прошлый месяц\nlet previousMonthText = '';\nconst firstOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst isInFirstTenDays = today >= firstOfMonth && today < new Date(today.getFullYear(), today.getMonth(), 11, 5, 0, 0);\n\n// Если нужно вывести отчет за прошлый месяц\nif (isInFirstTenDays) {\n    const startOfPreviousMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n    const endOfPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0); // Последний день прошлого месяца\n\n    const previousMonthReport = getMonthlyReport(startOfPreviousMonth, endOfPreviousMonth);\n\n    previousMonthText = `\n📊 <b>Отчет за прошлый месяц</b>\n\n🚚 Количество рейсов: ${previousMonthReport.count}\n🕑 Карьерные часы: ${previousMonthReport.quarry_hours} ч\n💵 Заработок: ${previousMonthReport.total} руб.\\n`;\n}\n\n// Формируем отчет за текущую неделю\nlet textMessage = getCurrentWeekReport();\n\n// Формируем отчет за текущий месяц\nlet currentMonthText = `📊 <b>Отчет за текущий месяц</b>\n\n🚚 Количество рейсов: ${currentMonthReport.count}\n🕑 Карьерные часы: ${currentMonthReport.quarry_hours} ч\n💵 Заработок: ${currentMonthReport.total} руб.\\n`;\n\n// Добавляем месячные отчеты\ntextMessage += currentMonthText;\n\n// Добавляем отчет за прошлый месяц в самом конце, если это необходимо\nif (previousMonthText) {\n    textMessage += previousMonthText;\n}\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "fb142731-a420-496b-9dfc-5a6c2fb7736c",
      "name": "сортируем все данные, считаем итоги, преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        6960
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $json.message }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "За месяц",
                    "additionalFields": {
                      "callback_data": "month_stats_inline"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "fd7b66c4-96fe-4857-be20-5af8c7b1985a",
      "name": "вывод недельной статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1360,
        6960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "ae61430c-22e6-471c-a222-bde2ec98fe9c",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -520,
        6980
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток кубометров по текущей перевозке - {{ $json.diff_cubic_metre }}\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "882d71a1-0ef8-4f02-a476-c870d9ad65b7",
      "name": "начатый рейс м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток по текущей перевозке - {{ $json.diff_ton }} т.\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "8e63e6b3-ae4e-4d30-be14-8be7e61d9a36",
      "name": "начатый рейс тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "4a58fb34-c751-4c13-ab83-c6dffb198883",
      "name": "начатый рейс без условий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "966f91de-5633-4f42-947f-f1ea75b1d289",
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "62015ad8-3505-402b-bf88-0969d9ea9278",
      "name": "метры или тонны?1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        160,
        620
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить рейс?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить",
                    "additionalFields": {
                      "callback_data": "check_material_volume"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_pick"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "37bece7a-e23a-48aa-bb08-b87b6c050382",
      "name": "Подтверждение завершения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        960,
        1800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "last_message_text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1c53d5b4-0908-48cd-96c9-ebfed47d3dcb",
      "name": "сохраняем текст сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        780,
        1800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "upload_sertificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_certificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef15479-f781-4cf6-8452-ac25023ba248",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_TTN",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5daaa096-aa68-4239-be97-b65bd575add0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_weight",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d301eb78-6a62-4223-ad44-d3f85f59eb7e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"NTS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "61206b14-2e77-43a5-a8ed-e669fe3bf0b3",
      "name": "ТТН и весовые в конце смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1060,
        9240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "308060bc-fb9d-4379-af49-994a6c61365b",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "d8cd196a-394b-4169-aadf-fd3499170c52",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c7d03e36-0c91-4fa9-8577-8d1af71381c5",
      "name": "если не равно нулю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2940,
        3054
      ]
    },
    {
      "parameters": {
        "jsCode": "const groupedFlights = {};\n\n$('Loop Over Items').all().forEach(it => {\n  var entry = it.json;\n  const carName = entry.car[1]; // Извлекаем название автомобиля\n  const flightInfo = entry.transportation !== undefined ? entry.transportation[1].substring(11) : entry.shift[1].substring(11); // Извлекаем информацию о рейсе\n\n  if (!groupedFlights[carName]) {\n    groupedFlights[carName] = [];\n  }\n\n  groupedFlights[carName].push(flightInfo);\n});\n\n// Формирование итоговой строки\nlet result = '';\n\nfor (const [car, flights] of Object.entries(groupedFlights)) {\n  result += `${car}:\\n`;\n  result += flights.join('\\n') + '\\n\\n';\n}\n\n// Вывод результата\nreturn {res: result};"
      },
      "id": "17e468b1-0ed5-4ea3-a09e-165edb91cee9",
      "name": "группируем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3160,
        3034
      ]
    },
    {
      "parameters": {
        "jsCode": "function getTransportationWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  let transportationWord;\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    transportationWord = \"перевозка\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    transportationWord = \"перевозки\";\n  } else {\n    transportationWord = \"перевозок\";\n  }\n\n  return `${count} ${transportationWord}`;\n}\n\n// Функция для склонения слова \"запланировано\"\nfunction getPlannedWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    return \"запланирована\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    return \"запланированы\";\n  } else {\n    return \"запланированы\";\n  }\n}\nvar count = $('итоговое кол-во').all()[0].json.count_id;\nvar ans = getPlannedWord(count) + ' ' + getTransportationWord(count);\nreturn {'trans': ans}"
      },
      "id": "ba3b1032-5c09-4666-a535-d92a65370246",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        3140
      ]
    },
    {
      "parameters": {
        "content": "## Вывод на завтра",
        "height": 902.7271656633407,
        "width": 1668.9407629976936,
        "color": 6
      },
      "id": "0593f48e-5bbd-4940-b0e6-787feb97e90b",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        2920
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "6de376bd-6d0a-4253-a263-bf3b13a93527",
      "name": "итоговое кол-во",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2740,
        3074
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
            "last_message_text": "={{ $('группируем').item.json.res }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "38cbd1f9-2c37-41f6-beb4-bbfb9c0817a7",
      "name": "сохраним текст",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3360,
        2960
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Уважаемый водитель, на завтра у вас {{ $json.trans }}!\n\n{{ $('группируем').item.json.res }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e89ace87-a082-4258-9b76-658ccae17202",
      "name": "отправим сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3560,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "name": "start_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "09c7312c-c231-44b1-b88f-bcd1dba67f0a",
      "name": "график на завтра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        3380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d43dbc66-2b4b-4df6-b25a-2c1fd1a22f32",
              "leftValue": "={{ $json.transportation[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "98959013-01c0-46c9-b8b7-3b3fcd043cc5",
      "name": "на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3440,
        3314
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c53394e2-1089-482a-a9bc-66194a5588b8",
              "leftValue": "={{ $json.shift[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "aa87fd9b-982c-494f-b882-8ae9da366638",
      "name": "работы на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3440,
        3554
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_quarry_work_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3a8d1f09-5d41-40d6-8694-66718235e51e",
      "name": "работы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        3574
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "quarry_works",
        "options": {}
      },
      "id": "cdd942f9-5b00-4821-ad14-10566a42accb",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3220,
        3554
      ]
    },
    {
      "parameters": {},
      "id": "aca51797-a876-401b-8037-b06c1e186981",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3680,
        3420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3c2a0341-0dbe-4a12-9d84-d6347e8dfa93",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2440,
        3334
      ]
    },
    {
      "parameters": {},
      "id": "602287c9-37d4-4dfc-8309-66f01c30056b",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2760,
        3454
      ]
    },
    {
      "parameters": {},
      "id": "dfc8d4fa-5868-46f0-8e14-eabbb75667f7",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4040,
        3594
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6cbf00ec-b75c-4b2a-b7f0-a1a406fed396",
      "name": "рейсы2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        3334
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "f2ff57ce-7ecd-4535-8507-903de4f12bfa",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3220,
        3314
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "round_active_msg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "796726db-7477-45d5-a066-334843f5e3cd",
      "name": "айди сообщения в бд",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        620
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "c1bc1a6e-7bfc-4c0c-9005-4788c24069b2",
      "name": "находим машину по odoo id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -420,
        840
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "23d4c1b6-d927-4b55-909a-8b838c90713b",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "507c85b1-c6f4-4586-8a80-93bacc4db111",
      "name": "выполняющиеся рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1360,
        680
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('находим машину по odoo id').item.json.id }}\n} ",
        "options": {}
      },
      "id": "6f979bad-6c5c-48bc-80ee-652b4f764be2",
      "name": "все рейсы по авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        860,
        680
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "75e0d71d-d63b-4bad-90a2-829b6674163a",
      "name": "поиск логистов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1800,
        680
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "18579e32-f0b4-450f-a53d-b910dd2a39ca",
      "name": "разделяем рейсы1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1100,
        680
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "45fe2ebe-9265-4818-896f-d452bdd26442",
      "name": "находим машину по odoo id2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -500,
        1560
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "fdf9c896-8a3e-427a-a361-5fa356669d2d",
      "name": "разделяем рейсы",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        420,
        1160
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $('Filter1').item.json.id }}\n}  ",
        "options": {}
      },
      "id": "194601d4-5d3b-4633-95fb-d5735b8dd2c4",
      "name": "ищем рейсы по перевозке",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        180,
        1160
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('находим машину по odoo id2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ea3270bd-24cb-4956-83a9-e3a32985cbea",
      "name": "находим рейсы по машине9",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        860,
        1160
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportations.id }}\n}  ",
        "options": {}
      },
      "id": "c9ae2085-f86a-4768-9e9a-93e685baecfc",
      "name": "ищем рейсы по перевозке1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1760,
        900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "238f8660-a0da-4b84-a6a0-28128ff33cd3",
      "name": "разделяем рейсы2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2000,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('находим машину по odoo id2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Назначен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb5e0927-220a-453a-aaf9-5e1cb268e118",
      "name": "находим рейсы по машине10",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2200,
        900
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $('находим машину по odoo id2').item.json.current_transportation[0] }}\n}  ",
        "options": {}
      },
      "id": "1cac8cb9-f6a2-482e-8146-abd8d9528813",
      "name": "ищем рейсы по перевозке2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1180,
        1540
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "ba7bd769-34a7-48dc-a50d-2e1d5f5903c7",
      "name": "разделяем рейсы3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1280,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Назначен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b940dcc9-bb56-4562-8d2d-67fe21b79727",
      "name": "находим рейсы по машине4",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1460,
        1740
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "485977db-1871-46e0-a888-628bdcd1bfa7",
      "name": "поиск текущего авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "bb11e70c-91bc-4740-ba76-947f20aeffb0",
      "name": "находим какая сейчас перевозка",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        680,
        1560
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ab29fac3-d8a1-4277-9aac-c46a8ca3e960",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "1fb76a2e-1b73-4555-8e9c-fb47193d2c4b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "Finish",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e7143341-d29c-49ad-8647-8595445df788",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3a3f51d5-25e1-4bec-a3eb-9615ed6e6ce3",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e71b3d59-f632-4d5e-a233-7cf24d288f7c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_pick",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4e6186e3-54fa-4c61-b72d-e3f36063e80c",
      "name": "кнопки принятия и завершения заказа",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1320,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}  ",
        "options": {}
      },
      "id": "f8774d31-d76e-4dad-b04b-db670f107f0c",
      "name": "рейсы по авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -80,
        1880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d3f281b8-90fa-4389-ab83-18d7fff11074",
      "name": "выполняющиеся рейсы",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        380,
        1880
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "9f24679e-7d0d-4c7b-9d54-3c9bbfb793a4",
      "name": "разделяем рейсы4",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "a170dfd2-9f72-4f34-a056-5d8452d48305",
      "name": "авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        2100
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "834aec3a-937e-4ccc-bc7e-9634f880a465",
      "name": "сами перевозки",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2180,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportations[0].transportation }}\n} ",
        "options": {}
      },
      "id": "9143f627-4732-4a9c-8a24-ffc4fb6e40f6",
      "name": "перевозка из очереди",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1960,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "32d5ea63-42b0-43c3-a7a9-a9eaf4c261e8",
      "name": "поиск текущего авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -840,
        2440
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_round_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "round_id",
              "value": "={{ $json.rounds }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2fa2fefe-4eea-4c23-a7da-9b50fb223463",
      "name": "получение рейсов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        500,
        2180
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7461c3bc-d00a-4c55-abeb-1df6fa8be61f",
              "leftValue": "={{ $json.transportation_round[0].driver[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "1f7d17a3-1371-4099-accc-99a175e9238a",
              "leftValue": "={{ $json.transportation_round[0].driver[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "926ab30a-9743-489c-acb9-0d85f0bdfa8e",
      "name": "рейсы в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        720,
        2180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "rounds",
        "options": {}
      },
      "id": "2ceae62f-c90a-4e69-80b8-d9d3f080bbee",
      "name": "Split Out3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        500,
        2480
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "99d0c924-3675-4818-a521-5dc993bf731d",
      "name": "перевозки+имена",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        920,
        2320
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "61663c0f-ac1d-491c-a222-f136afc0ad4f",
      "name": "водитель/наёмник",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        920,
        2940
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "644b3416-4502-430d-b5be-99930f1c6cc5",
      "name": "номер автомобиля",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        3460
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final_complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8d5ad2d4-5afd-4ea6-98d0-ba7aa53e84af",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e53fa5d5-a88b-4f37-9bf0-46d2099b8322",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "e00531e6-492d-446d-9d5e-b04c2a78f5cb",
      "name": "кнопки завершения смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1100,
        3440
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "a3738f43-f12c-45f1-9927-bff0387a5039",
      "name": "находим машину по odoo id9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -580,
        3880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "11ff4128-cd91-4c6e-857b-1e0c33108cb0",
      "name": "водитель/наёмник1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1240,
        4260
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "631ccd40-e12b-4ce0-87f4-c0728910507e",
      "name": "номер авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        4220
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "70537b2b-22ff-4fd8-8795-18fcded8144f",
      "name": "номер авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        4580
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"start_date\": \"{{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(100, 'years').format('yyyy-MM-dd') }}\"\n} ",
        "options": {}
      },
      "id": "5c0fa489-9e39-4e5b-b996-5ca959cfb2fe",
      "name": "получаем заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        4220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4587f5de-1372-4033-b5c9-25685e0ea9a4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "К выполнению",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1b0c5d1f-431d-4638-9992-051e1cc004b0",
      "name": "заявки \"к выполнению\"",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        120,
        4220
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"start_date\": \"{{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(100, 'years').format('yyyy-MM-dd') }}\"\n} ",
        "options": {}
      },
      "id": "346511d8-9cde-4789-9120-d761561870a6",
      "name": "получаем заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        4580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4587f5de-1372-4033-b5c9-25685e0ea9a4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "999aaf44-7d20-4cdf-bee6-cc895eb098c6",
      "name": "заявки \"в работе\"",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        100,
        4580
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenance_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "0e5089ce-fbed-466c-871c-5c95604acb41",
      "name": "получим актуальный статус заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        5240
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "e2bd527b-9f76-4070-a8f5-0bdff3664d04",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1140,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "0fbb8aba-5cd9-4547-abc1-a91263a27fbf",
      "name": "данные водителя",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "c2b5465c-80d3-47ee-b6ac-29c9aba5a297",
      "name": "данные авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2000,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenance_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"maintenance_id\": {{ $('Execute Workflow Trigger').item.json.end_request_id }}\n}",
        "options": {}
      },
      "id": "2bb256f8-0bb1-4d30-bab0-d4b2a6d6b8cd",
      "name": "текст заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2220,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "867c928f-f8d3-4339-9c33-09fa2c2d011c",
      "name": "Получаем информацию о машине",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        5880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/update_oil_schedule",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"value\": {{ $json.odometer + 15000 }}\n}",
        "options": {}
      },
      "id": "cb8d226d-6167-42a9-94b2-8e7e3b17abf5",
      "name": "Обновление пробега при котором нужна будет замена масла1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        5880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n}  ",
        "options": {}
      },
      "id": "4b9a7b43-51ca-4e35-9223-8da21750c710",
      "name": "получаем рейсы по водителю1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        6880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0d370ade-d290-4e87-8089-096b280c37ee",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "17ec6d28-5dc3-4773-8da7-799cf2c89686",
      "name": "завершенные рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        160,
        6880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_quarry_works_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n}  ",
        "options": {}
      },
      "id": "e9e772d1-0941-438d-95f1-29d0cea6a04e",
      "name": "получаем работы по водителю1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -140,
        7100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "3e8e8ed6-cd14-4298-9fac-1a945d30052b",
      "name": "разделяем рейсы5",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -60,
        6880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "39cbca08-d179-458a-b45a-7970624cd40d",
      "name": "авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -40,
        7880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "412f69fa-dac5-403a-b790-8070ed9853b4",
      "name": "номер авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -640,
        9120
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation[0] }}\n}",
        "options": {}
      },
      "id": "6f05985a-7761-42e5-8538-5ebabd3e01d7",
      "name": "перевозки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1100,
        9100
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "168c6bb4-7918-4c19-b21a-b38b556fa41c",
      "name": "находим перевозки, которые выведем в кнопках",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1280,
        9100
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "1aef25d0-e83e-4f3d-b124-21de9e4aa89b",
      "name": "рейсы по водителю",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1920,
        9080
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2cc61638-35e0-402f-be88-bb23eb435f59",
              "leftValue": "={{ new Date(new Date($json.time_of_end.replace(' ', 'T')).setHours(new Date($json.time_of_end.replace(' ', 'T')).getHours() + 10)).toISOString().replace('T', ' ').split('.')[0] }}",
              "rightValue": "={{ $('сегодняшнее число').item.json.currentDate.slice(0,10) }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3e8ff93f-e141-4a43-9e52-279cd2b5ee5c",
      "name": "рейсы за сегодня",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2340,
        9080
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "891ed155-1e5c-4d85-b1b1-ccc50990ecb4",
      "name": "разделяем рейсы7",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2140,
        9080
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "e0627d7a-860c-4581-959c-c8015c005296",
      "name": "находим какая сейчас перевозка1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -20,
        9500
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n}",
        "options": {}
      },
      "id": "c38cccb3-4a14-4b04-88d0-205eaca34b8b",
      "name": "перевозки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -200,
        9500
      ]
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 496.7072782298619,
        "width": 2363.793958006972
      },
      "id": "145eb518-0ae1-4b75-9fc4-38ed555bad57",
      "name": "Sticky Note44",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -760,
        9680
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "863880b3-2e82-4d4e-9896-ac9bd172d8ce",
      "name": "получаем id выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -480,
        9900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "ttn"
            }
          ]
        },
        "options": {}
      },
      "id": "690a299a-bf8f-453c-b1e4-bc089021cec8",
      "name": "сколько рейсов без ттн",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        500,
        10020
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "2e883469-4e73-4ef4-b171-ccc0aa9b627f",
      "name": "сколько всего рейсов в перевозке по машине",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        500,
        9780
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "335c9343-f27f-47b3-b7ad-5efd51ca6a1d",
      "name": "объединяем кол-во в одно",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        760,
        9900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "62b9cd55-3ac5-4d9e-a1dc-c4f5c083d658",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": "={{ $json.count_ttn }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2f3c6e41-13c8-4ff4-bf44-5f2332d68f6c",
      "name": "сравниваем общее кол-во рейсов и рейсов без ттн",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        9900
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "❗Вы не загружали ТТН по данной перевозке.\nОтправьте фото для загрузки",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "35fcefb5-245c-4b15-9b7a-cb8109dc2c28",
      "name": "загрузите ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        9760
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "ТТН по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6eeff9d4-d767-4d4a-978c-97ac6347a3dc",
      "name": "ттн загружена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        9940
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "TTN_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b1d7235d-ab6d-4fc9-a216-d24f0a2247d2",
      "name": "меняем статус на отправку ТТН",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1460,
        9760
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "90904c51-7ecd-4102-a141-e776c38eda14",
      "name": "номер авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -700,
        9900
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто3').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "26f9cfc9-f365-4e7d-9d29-4fac70e05e55",
      "name": "находим рейсы  в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        9780
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто3').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "9523149d-f1e3-4707-b795-75f39af662ae",
              "leftValue": "={{ $json.ttn }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "73e9e29c-bc7d-4fbc-8b38-b06e5a765a01",
      "name": "находим рейсы без ттн в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        10020
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "cb3d2895-5c5b-48e1-a45f-b80a2a4aadb2",
      "name": "рейсы по авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -180,
        9780
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "e8fb99dc-76e6-48b5-a885-2209ae3f9ffb",
      "name": "разделяем рейсы8",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        60,
        9780
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "994e3b93-0cc3-48f9-9af2-2346edb6d4e3",
      "name": "рейсы по авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -180,
        10020
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "d4991c47-3fc5-43ef-aab7-2802824cde52",
      "name": "разделяем рейсы9",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        60,
        10020
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e7c177c7-7099-46f3-aa82-307a193e9655",
      "name": "получаем id выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        10380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Все весовые справки по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "323e7fdb-9829-46fc-9cb9-e3909a8e8174",
      "name": "весовые загружены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        580,
        10540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "211055ce-8e69-443a-9229-a0997cc776a2",
              "leftValue": "={{ $('находим рейсы без весовой в перевозке').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5d105cac-dea2-44cb-a091-b791e2f54d5c",
      "name": "есть рейсы или нет",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        10380
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "weight_certificate"
            }
          ]
        },
        "options": {}
      },
      "id": "3027fc73-f2d6-4344-b8a8-c3d4018c1576",
      "name": "сколько рейсов без весовой",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        580,
        10360
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "many_weight_photo",
            "count_weight_photo": "={{ $('сколько рейсов без весовой').item.json.count_weight_certificate }}",
            "count_weight_photo_sent": 0
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "8b87799b-a0ee-490c-ad07-f1df6d150b62",
      "name": "меняем статус на отправку нескольких весовых",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1020,
        10360
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=❗Загружены не все весовые справки по данной перевозке.\nОтправьте <b>{{ $json.count_weight_certificate }}</b> фото для загрузки ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ea4882d6-7565-4963-83ec-a8d3d753d4d4",
      "name": "загрузите весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        800,
        10360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "d2955969-8daa-4829-b09e-c92acb0de5d3",
      "name": "номер авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -780,
        10380
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто4').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "9523149d-f1e3-4707-b795-75f39af662ae",
              "leftValue": "={{ $json.weight_certificate }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1abde3e8-77ef-461f-ac1a-406c1f91dece",
      "name": "находим рейсы без весовой в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        120,
        10380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "29f9edb7-73ee-4068-9ff6-9703a4236350",
      "name": "рейсы по авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -340,
        10380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "5f204dce-dbe4-4015-be0a-f86b47afbfdf",
      "name": "разделяем рейсы10",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -100,
        10380
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ab2599b7-d238-4b88-bb49-bd3904b8bd0e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_back_to_menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "32f5ff63-66c6-41ab-b8ae-31db4b91a594",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_choise_warn",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5458e8a5-336f-4d88-b337-020b31a58c52",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_route",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ee338c82-2f82-4b33-ac41-5d054a850f9c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "f22cea61-2174-400d-9910-82a5ae6866c2",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2920,
        10100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "058f0f29-198c-4ed4-98ce-14ecdc555552",
      "name": "рейсы",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1860,
        10240
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "e0dd9d16-54c0-49de-a87d-da31803919af",
      "name": "номер авто5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2560,
        10240
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "20dcdf8d-e833-4862-a301-8ba9b0c983ac",
      "name": "рейсы по авто5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2320,
        10240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "10f6ed95-d889-4b9d-8096-49ef3cd171ce",
      "name": "разделяем рейсы11",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2080,
        10240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "75c2a374-469b-4105-b965-4fa003720e9a",
      "name": "рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1860,
        10440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "402aa343-a9a9-43de-912e-c5a688f9fb7b",
      "name": "номер авто6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2560,
        10440
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "39e40f90-5418-4423-96e8-377bd1b4f576",
      "name": "рейсы по авто6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2320,
        10440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "8d337782-ca6f-4c00-98d4-a79558e43348",
      "name": "разделяем рейсы12",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2080,
        10440
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "b6017b8d-9f59-4486-bed1-98da21d24124",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2100,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }},\n  \"start_date\": \"{{ $today.format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(23, 'hours').format('yyyy-MM-dd') }}\"\n}",
        "options": {}
      },
      "id": "8187041a-ab28-4552-b073-5eb0e6dec6d0",
      "name": "Odoo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1880,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.car[0] }}\n}",
        "options": {}
      },
      "id": "c88d9998-f8f1-44b8-b348-800ab5c6026a",
      "name": "Odoo1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1640,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "e2e7bf99-89db-4cf2-a931-ab8e17f0eed7",
      "name": "поиск текущего авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1700,
        12600
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "443437aa-8263-4fcf-b97a-fd15f79a60ec",
      "name": "поиск текущего авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2080,
        12960
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "250df3a9-2e33-4557-9aa0-acada53130ed",
      "name": "поиск текущего авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2200,
        13360
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n}",
        "options": {}
      },
      "id": "faf46d48-99ed-46bd-92e4-e3c4566aa465",
      "name": "перевозки2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -220,
        10820
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "b6068fa5-80b2-4bad-9c72-82a9c0208248",
      "name": "находим какая сейчас перевозка2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -40,
        10820
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Выберите документ, который хотите проверить по перевозке:\nОтправитель - {{ $json.sender[1] }}\nПолучатель - {{ $json.partner[1] }}\nМаршрут - {{ $json.place_from[1] }}-{{ $json.place_to[1] }}\nМатериал - {{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "b3c7e50e-16e7-477b-b7c6-fc0519b9ad81",
      "name": "загрузите ттн или весовые3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        10820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.current_transportation[0] }}\n} ",
        "options": {}
      },
      "id": "69b25d49-5390-4cf6-8484-29c8d2b1c510",
      "name": "ищем перевозку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        1560
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.id }}\n} ",
        "options": {}
      },
      "id": "98af8c7f-52b8-4bd4-9571-18529cc26135",
      "name": "рейсы по авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -20,
        9100
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "f6e33051-4891-4415-b4f3-dbaee9180059",
      "name": "разделяем рейсы6",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        220,
        9080
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "379c35f0-1b5a-4bfb-a91c-dedfe5e05d04",
              "leftValue": "={{ $json.ttn }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "289c8d6c-8066-47f0-947f-7be4d929ff55",
      "name": "находим рейсы без ттн",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        440,
        9080
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "2dc6aa12-a068-41b5-b324-2a2bf48bafed",
      "name": "ищем автомобиль с таким же сотрудником1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -400,
        6440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100636182,
          "callback_query": {
            "id": "2008109314257304851",
            "from": {
              "id": 467549384,
              "is_bot": false,
              "first_name": "Sergio",
              "username": "sergo_kf",
              "language_code": "ru",
              "is_premium": true
            },
            "message": {
              "message_id": 28639,
              "from": {
                "id": 7063451965,
                "is_bot": true,
                "first_name": "Everest n8n",
                "username": "myn8nbotbot"
              },
              "chat": {
                "id": 467549384,
                "first_name": "Sergio",
                "username": "sergo_kf",
                "type": "private"
              },
              "date": 1731921386,
              "edit_date": 1731921387,
              "text": "Отправить фотографию весовой справки?",
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "Отправить",
                      "callback_data": "document"
                    }
                  ],
                  [
                    {
                      "text": "Отправить в конце смены",
                      "callback_data": "final"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "-8293046807322593726",
            "data": "final"
          },
          "tg_id": "467549384",
          "odoo_id": 4,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 25,
          "fuel_liters": 15,
          "weight_measure": "30 м3 ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": 2,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 5,
          "end_round_message_id": 28637,
          "last_message_text": "Отлично, рейс активен. \n\nКарьер Ключевое - Карьер Ключевое\nПесок\nОстаток кубометров по текущей перевозке - 30\n\nПо его завершению нажмите на кнопку \"Завершить рейс\"",
          "logist_notifications": false,
          "creating_transportation": "657;\nКарьер Ключевое;",
          "round_active_msg_id": 28637,
          "no_taking_shift_logist_notify": false,
          "logist_template": null,
          "cookie": "session_id=2ebaa13c7ff63a0f9a902bde0af38c77a72d4582; Expires=Mon, 17 Nov 2025 16:32:51 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-25T16:13:16.893Z",
  "versionId": "df92b1da-c1ca-4514-a14a-6a2125d352b2"
}