{
  "active": false,
  "connections": {
    "проверка типа сообщения": {
      "main": [
        [
          {
            "node": "Проверка старта1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "инлайн кнопки для логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите текст для всех": {
      "main": [
        [
          {
            "node": "статус=ввод оповещения для всех",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей": {
      "main": [
        [
          {
            "node": "рассылка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную": {
      "main": [
        [
          {
            "node": "изменяем сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки": {
      "main": [
        [
          {
            "node": "проверка наличия перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим получателей без дубликатов": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия перевозок": {
      "main": [
        [
          {
            "node": "получим получателей без дубликатов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки": {
      "main": [
        [
          {
            "node": "отправляем сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите текст для получателя": {
      "main": [
        [
          {
            "node": "статус=ввод сообщения для получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "название получателя": {
      "main": [
        [
          {
            "node": "введите текст для получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопка оповещения1": {
      "main": [
        [
          {
            "node": "дефолтный статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "оповестить по перевозке?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки по получателю": {
      "main": [
        [
          {
            "node": "все рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы": {
      "main": [
        [
          {
            "node": "автомобили по рейсу на смене",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск машин на смене": {
      "main": [
        [
          {
            "node": "айди водителей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "автомобили по рейсу на смене": {
      "main": [
        [
          {
            "node": "айди водителей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей1": {
      "main": [
        [
          {
            "node": "рассылка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка1": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную1": {
      "main": [
        [
          {
            "node": "изменяем сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта1": {
      "main": [
        [
          {
            "node": "Приветственное сообщений",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка кнопок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все сегодняшние перевозки1": {
      "main": [
        [
          {
            "node": "проверка наличия перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия перевозок1": {
      "main": [
        [
          {
            "node": "получим получателей без дубликатов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим получателей без дубликатов1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение1": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки по получателю1": {
      "main": [
        [
          {
            "node": "все рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы1": {
      "main": [
        [
          {
            "node": "автомобили по рейсу на смене1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки2": {
      "main": [
        [
          {
            "node": "отправляем сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение2": {
      "main": [
        [
          {
            "node": "сохраним получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "автомобили по рейсу на смене1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто": {
      "main": [
        [
          {
            "node": "номер телефона",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер телефона": {
      "main": [
        [
          {
            "node": "Введите текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инлайн кнопки для логиста": {
      "main": [
        [
          {
            "node": "введите текст для всех",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопка оповещения1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск машин на смене",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "все сегодняшние перевозки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "выбор получателя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса": {
      "main": [
        [
          {
            "node": "действительно оповестить всех?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "оповестить по перевозке?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "оповестить по водителю?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "проверка типа сообщения",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад1": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "действительно оповестить всех?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "оповестить по водителю?": {
      "main": [
        [
          {
            "node": "убираем кнопку назад2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сохраним получателя": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Введите текст": {
      "main": [
        [
          {
            "node": "обновим статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад2": {
      "main": [
        [
          {
            "node": "сохраним текст логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор получателя": {
      "main": [
        [
          {
            "node": "название получателя",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "перевозки по получателю",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "перевозки по получателю1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "айди водителей2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди водителей2": {
      "main": [
        [
          {
            "node": "данные логиста",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рассылка2": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную2": {
      "main": [
        [
          {
            "node": "изменяем сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "изменяем сообщение2": {
      "main": [
        [
          {
            "node": "очищаем лишнее",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные логиста": {
      "main": [
        [
          {
            "node": "рассылка2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка кнопок": {
      "main": [
        [
          {
            "node": "берем данные машин",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопка оповещения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "берем данные машин": {
      "main": [
        [
          {
            "node": "проверка статусов и генерация единого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статусов и генерация единого сообщения": {
      "main": [
        [
          {
            "node": "Вывод свободных машин",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-04T16:54:49.582Z",
  "id": "BhdhuDzO4pyQie1N",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "prod_logist",
  "nodes": [
    {
      "parameters": {
        "content": "## Блок сценария для логиста",
        "height": 862.4168334078684,
        "width": 1437.5425755046085
      },
      "id": "f587afeb-8f82-4822-976e-1c518d070d2f",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1500,
        460
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Здравствуй, дорогой логист, приступим к работе?",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Просмотреть свободные машины",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповещение",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "923935c8-0861-4bc8-9607-e9e7937254e5",
      "name": "Приветственное сообщений",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "={{ $('проверка статусов и генерация единого сообщения').item.json.combinedMessages }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6ae80eda-03d0-43b0-b4f2-14de9508b540",
      "name": "Вывод свободных машин",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2520,
        560
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод свободных машин",
        "height": 265.6502317011321,
        "width": 807.4624422818633,
        "color": 5
      },
      "id": "97e7d805-9a07-4fde-9807-80d81dd41b16",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1940,
        480
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Выберите вариант оповещения водителей:",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить всех",
                    "additionalFields": {
                      "callback_data": "logist_alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить по выбранному получателю",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить конкретный автомобиль",
                    "additionalFields": {
                      "callback_data": "logist_alert_auto"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bc4c2d1a-6a85-41c1-94bb-1c401d394bb9",
      "name": "кнопка оповещения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2040,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "11c45e0d-196b-47f1-821e-bee57c9f070b",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ed488917-374c-4a74-9a44-7ac6c08fd444",
      "name": "проверка типа сообщения",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1140,
        1080
      ]
    },
    {
      "parameters": {
        "errorMessage": "123"
      },
      "id": "7ccb7d62-f3a6-4144-895d-bfd75b36cafc",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        960,
        1280
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите текст сообщения для всех водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "e74f1104-d7df-4919-a22f-9a083364b1fd",
      "name": "введите текст для всех",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1600,
        1480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_alert_for_all"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f20426c5-ca74-4373-983b-732f0b6c8a85",
      "name": "статус=ввод оповещения для всех",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1800,
        1480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите вариант оповещения водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить всех",
                    "additionalFields": {
                      "callback_data": "logist_alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить по выбранной перевозке",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить конкретный автомобиль",
                    "additionalFields": {
                      "callback_data": "logist_alert_auto"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "79bc3d05-ef3d-432e-ab8f-b6a0d86cd3e2",
      "name": "кнопка оповещения1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1600,
        1860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5d29cb73-14f4-451c-9ab0-3e9607feb164",
      "name": "айди водителей",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1800,
        2040
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей').item.json.tg_id }}",
        "text": "=Оповещение от логиста:\n<i>{{ $('Execute Workflow Trigger').item.json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c0446140-a6e0-4985-958f-852fff76ea36",
      "name": "рассылка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2040,
        2040
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "logist_alert_text": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b7fe991e-4a7a-447d-995b-325e4c587822",
      "name": "сохраним текст логиста",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3720,
        1440
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Оповещения для всех водителей на смене",
        "height": 799.4991199079257,
        "width": 1321.0782113186833,
        "color": 6
      },
      "id": "edf3e4f3-aaa6-4e9c-99cb-b22051a699bc",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1520,
        1420
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "2d35c5d1-6b8f-479f-960f-c73e91c18a01",
      "name": "преобразуем в 1 переменную",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2280,
        2040
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "date",
              "value": "={{ $today }}"
            }
          ]
        }
      },
      "id": "e366b991-3966-4ac6-84de-2a6ed51c6291",
      "name": "все сегодняшние перевозки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1600,
        1680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "partner[1]",
        "options": {}
      },
      "id": "062d9568-2db9-4897-b544-752115ae19d8",
      "name": "получим получателей без дубликатов",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        2040,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fa36ade5-63b9-49cc-adfb-5ba03dcf267a",
      "name": "проверка наличия перевозок",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1800,
        1680
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Перевозки на сегодня не найдены"
        }
      },
      "id": "62731ec1-f35d-4706-8784-94566372ff3e",
      "name": "заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2040,
        1800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.partner[1]}`,\n    callback_data: `AT_${item.json.partner[1]}` // AT - alert transportation\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на получателя\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "f0278ad9-2bc3-47b6-946b-0070217106a6",
      "name": "создаём динамически инлайн кнопки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2260,
        1620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "f4d8cbf7-6c9a-4bca-9fc7-033a32851d8d",
      "name": "отправляем сообщение",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2480,
        1620
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "14e40b48-0d6c-4578-907a-6ead6f7b5c76",
      "name": "удаляем прошлое сообщение с заявками",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2700,
        1620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выбрали получателя <b>{{ $json[\"AT_name\"] }}</b>. Введите текст сообщения для водителей:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "logist_alert_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "cb773050-44f0-493e-81f7-2ee44bad2944",
      "name": "введите текст для получателя",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1880,
        2980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "AT_name",
              "value": "={{ $json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9faf4d8a-b66d-4b9d-b2d4-f9701b79c325",
      "name": "название получателя",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1640,
        2980
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "inputing_alert_for_transportation",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "logist_recipient_name": "={{ $('название получателя').item.json.AT_name }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "1df315a7-2155-4057-ba73-5ab9bddd1bcb",
      "name": "статус=ввод сообщения для получателя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        2980
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить всех водителей по выбранному получателю?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_transportation"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "870958df-6556-4ecf-b339-5dc82136f4fe",
      "name": "оповестить по перевозке?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        1440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.inline_chat_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "8f7caa1b-d577-483e-b4ab-0290dff682c5",
      "name": "дефолтный статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1800,
        1860
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "partner",
              "value": "={{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}"
            },
            {
              "fieldName": "date",
              "value": "={{ $today }}"
            }
          ]
        }
      },
      "id": "795b9d73-3675-4f18-8d3e-d35718ed51ce",
      "name": "перевозки по получателю",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1640,
        3220
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = [];\nfor (const item of $input.all()) {\n  for(const round of item.json.rounds) {\n    rounds.push(round);\n  }\n}\n\nreturn {\"rounds\": rounds};"
      },
      "id": "7fd88201-e737-4866-844d-f46846ae16d7",
      "name": "все рейсы",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1880,
        3220
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "operator": "notEqual",
              "value": "={{ false }}"
            }
          ]
        }
      },
      "id": "905bdd2f-b81a-401a-bbd2-a41d083fb652",
      "name": "поиск машин на смене",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1600,
        2040
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "rounds",
              "value": "={{ $json.rounds }}"
            },
            {
              "fieldName": "driver_id",
              "operator": "notEqual",
              "value": "={{ false }}"
            }
          ]
        }
      },
      "id": "772ef268-ed87-40e5-aecf-f7b6700ab3c3",
      "name": "автомобили по рейсу на смене",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2100,
        3220
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.driver_id[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8cef5144-88b4-4cfe-9af6-d305262bfe3d",
      "name": "айди водителей1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2340,
        3220
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей1').item.json.tg_id }}",
        "text": "=Оповещение от логиста:\n<i>{{ $('Execute Workflow Trigger').all()[0].json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c38bfad0-132b-4494-97cb-84aca8c8700f",
      "name": "рассылка1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2560,
        3220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "7c1348fe-c556-47a7-80fc-340f53b44062",
      "name": "преобразуем в 1 переменную1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2800,
        3220
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено всем водителям с выбранным получателем",
        "additionalFields": {}
      },
      "id": "61d0931e-c76f-4501-ab2b-99ed228e15b8",
      "name": "изменяем сообщение1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3020,
        3220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Оповещения по получателю",
        "height": 496.20554104438617,
        "width": 1722.0426037145492,
        "color": 6
      },
      "id": "3a7bd155-920f-42f9-b15d-5c76b6b8586b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        2920
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ \"/start\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "94fd9180-1554-4c33-8ea7-aa615193f8f6",
      "name": "Проверка старта1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1520,
        980
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "date",
              "value": "={{ $today }}"
            }
          ]
        }
      },
      "id": "18c4b22e-4e1b-4b83-aa79-691cb6795351",
      "name": "все сегодняшние перевозки1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1620,
        2420
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4d3468e3-cdd4-4baa-b89d-dd8d19061426",
      "name": "проверка наличия перевозок1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1820,
        2420
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Перевозки на сегодня не найдены"
        }
      },
      "id": "ad6a83a0-e49e-47da-b199-34fc9a52321f",
      "name": "заявки не найдены1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2060,
        2540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "partner[1]",
        "options": {}
      },
      "id": "06471135-b186-44ab-9782-faa287204a3b",
      "name": "получим получателей без дубликатов1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        2060,
        2360
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.partner[1]}`,\n    callback_data: `CT_${item.json.partner[1]}` // CT - Choise Transportation for auto alert\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Чтобы найти автомобиль, выберите получателя:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "7b0a72c3-2b86-476f-baf6-eda6117350a4",
      "name": "создаём динамически инлайн кнопки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2280,
        2360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "aae49125-9319-4bb7-b394-72a71b0781f8",
      "name": "отправляем сообщение1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2500,
        2360
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "d18a1da4-7f9d-419c-a8e0-fb1106e48276",
      "name": "удаляем прошлое сообщение с заявками1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2720,
        2360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "partner",
              "value": "={{ $json.callback_query.data.substring(3) }}"
            },
            {
              "fieldName": "date",
              "value": "={{ $today }}"
            }
          ]
        }
      },
      "id": "89f3a9ea-43a9-43bd-998c-e5027b533a90",
      "name": "перевозки по получателю1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1620,
        3589
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar rounds = [];\nfor (const item of $input.all()) {\n  for(const round of item.json.rounds) {\n    rounds.push(round);\n  }\n}\n\nreturn {\"rounds\": rounds};"
      },
      "id": "760bfe6d-0dd4-4176-b5b9-b21662cc4ede",
      "name": "все рейсы1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        3589
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "rounds",
              "value": "={{ $json.rounds }}"
            },
            {
              "fieldName": "driver_id",
              "operator": "notEqual",
              "value": "={{ false }}"
            }
          ]
        }
      },
      "id": "939b0ff0-8d28-4f6c-a11b-5379364b52c5",
      "name": "автомобили по рейсу на смене1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2100,
        3589
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.number_car}`,\n    callback_data: `AA_${item.json.number_car}` // AA - Alert Auto\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: buttons.map(button => [button])\n};\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id \nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nvar partner = $('Execute Workflow Trigger').all()[0].json.callback_query.data.substring(3);\n\nconst message = {\n    chat_id: chatId,\n    text: \"Текущие автомобили на смене с получателем <b>\" + partner + \"</b>:\",\n    reply_markup: inlineKeyboard,\n    parse_mode: \"html\",\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message,\n        }\n    }\n];\n"
      },
      "id": "0408f811-6889-4f4d-8e72-e883594bb797",
      "name": "создаём динамически инлайн кнопки2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2360,
        3589
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "f7df9ea5-e7d9-4bba-907f-8f4b5dc58b96",
      "name": "отправляем сообщение2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2580,
        3589
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "93cc3e6d-4d27-409a-819c-ea4e5a372ed9",
      "name": "удаляем прошлое сообщение с заявками2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2980,
        3600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Выбор получателя при оповещении конкретного авто",
        "height": 458.39652118337546,
        "width": 1328.4103837921157,
        "color": 6
      },
      "id": "68239eff-5fb8-4a18-8ee2-8b35b92cf313",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        2280
      ]
    },
    {
      "parameters": {
        "content": "## Выбор авто при оповещении конкретного авто",
        "height": 291.3280243517646,
        "width": 1517.8363177636575,
        "color": 6
      },
      "id": "f9f5766f-a046-43b0-a543-68a2a4bb690e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        3500
      ]
    },
    {
      "parameters": {
        "content": "## Сокращения\nAT - alert transportation - оповещение по получателю\nCT - Choise Transportation - оповещение по конкретному авто\nAA - Alert Auto - оповещение по конкретному авто",
        "width": 385.0592683521705,
        "color": 4
      },
      "id": "cf73e8f5-1a4e-4602-b4a1-91780b58033f",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "number_car",
              "value": "={{ $json.callback_query.data.substring(3) }}"
            }
          ]
        }
      },
      "id": "4addc220-9f5a-4ec4-bdac-83819c440d84",
      "name": "данные авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1620,
        3880
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $json.driver_id[0] }}",
        "options": {
          "fieldsList": [
            "mobile_phone"
          ]
        }
      },
      "id": "eea8ecbc-612a-4b09-955a-b4f8a64a3b91",
      "name": "номер телефона",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1840,
        3880
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "424c6e2a-a988-406f-9a0a-13a079991adb",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "89372a57-be12-40be-9a51-4fa9938c8205",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "back_to_alert_menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "16d7aef0-6c20-4f44-a9ee-46c21e2a786f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5b842fea-b857-45e2-95ad-6e5dc9d17200",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "logist_alert_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "07c1bb2e-07a3-47dd-a075-ce4e35c28b3c",
      "name": "инлайн кнопки для логиста",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1340,
        1760
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_all",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "14da08f2-eaa2-4a05-a2ec-e02fa0ec245d",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "63789235-8337-4a36-b64f-d3c931980c3d",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_alert_for_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "2bb33886-c4cf-4f56-acac-f1cfa9ef14d3",
      "name": "проверка статуса",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3000,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}",
        "text": "Введите текст сообщения для всех водителей:",
        "additionalFields": {}
      },
      "id": "2a5222a4-f242-45bc-8572-ef357a8e4233",
      "name": "убираем кнопку назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3460,
        1240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "a416c922-150d-414f-9384-35c007cea672",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        600,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}",
        "text": "=Вы выбрали получателя <b>{{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}</b>. Введите текст сообщения для водителей:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "2a46dcda-6c97-4d9d-8fb4-dbc832a24675",
      "name": "убираем кнопку назад1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3460,
        1440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить всех водителей?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_all"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b2eb0f5a-d9ad-4873-9bbe-c3da9292b9f9",
      "name": "действительно оповестить всех?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        1240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено всем водителям на смене",
        "additionalFields": {}
      },
      "id": "a04fb745-5cfe-4260-a243-506a200e383b",
      "name": "изменяем сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2500,
        2040
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Действительно хотите оповестить водителя?</b>\n\nВаше сообщение:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Оповестить",
                    "additionalFields": {
                      "callback_data": "alert_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Вернуться к выбору",
                    "additionalFields": {
                      "callback_data": "back_to_alert_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "56af4088-cfae-4a3f-9672-5c4b3884cec3",
      "name": "оповестить по водителю?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        1660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Данные водителя",
        "height": 291.3280243517646,
        "width": 859.843468703775,
        "color": 6
      },
      "id": "cdbd7ffd-3ad0-4e14-bbed-efaa363fcd59",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        3820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "logist_recipient_name": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.data }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "22be5a42-7ef5-48d7-bdba-c5deaab9aa73",
      "name": "сохраним получателя",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2780,
        3580
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Текущий водитель {{ $('данные авто').item.json.number_car }}:\n{{ $('данные авто').item.json.driver_id[1] }} <a href=\"tel:{{ $json.mobile_phone }}\">{{ $json.mobile_phone }}</a>\n\nВведите текст сообщения:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ $('Execute Workflow Trigger').item.json.logist_recipient_name }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "babb5bbc-8197-4015-9537-6b02e422c263",
      "name": "Введите текст",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2060,
        3880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1 }}"
      },
      "id": "122f63db-4f2c-4f0a-b6a7-c2415b2b793e",
      "name": "убираем кнопку назад2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3460,
        1660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_alert_for_auto",
            "logist_recipient_name": "={{ $('данные авто').item.json.driver_id[0] }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "8b0c6019-e804-4c74-b4ab-d2c52239cc05",
      "name": "обновим статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2280,
        3880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"AT_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "954e80e5-89fc-4093-b0dc-fa39a23981d8",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a0342fdb-9d78-4568-a12f-78a834e4beb3",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"CT_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "46c02646-5c28-434d-9b36-e7122502fcd6",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"AA_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4b24e9f4-fcd8-46b6-a853-71cb4b316917",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "alert_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "2291a9e4-c038-442a-a64c-a1462c16a81c",
      "name": "выбор получателя",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1360,
        3260
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.logist_recipient_name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "08a9c2a1-3647-43b6-92d9-32f7d2c86405",
      "name": "айди водителей2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1620,
        4240
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('айди водителей2').item.json.tg_id }}",
        "text": "=Оповещение от логиста {{ $json.display_name }}:\n<i>{{ $('Execute Workflow Trigger').all()[0].json.logist_alert_text }}</i>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0fca7842-9c73-44ad-9f97-1897899bdd42",
      "name": "рассылка2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2060,
        4240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "30f5ebe1-6c48-45e7-8364-c8d985b29db5",
      "name": "преобразуем в 1 переменную2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2300,
        4240
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "Сообщение будет доставлено водителю",
        "additionalFields": {}
      },
      "id": "ced514b6-7697-48d2-a34a-d94796703d21",
      "name": "изменяем сообщение2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2520,
        4240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "authorized",
            "logist_alert_text": "={{ null }}",
            "logist_recipient_name": "={{null}}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "13ffc1ae-6579-4397-8873-6481d8ab36a2",
      "name": "очищаем лишнее",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2720,
        4240
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Рассылка конкретному водителю",
        "height": 291.3280243517646,
        "width": 1062.8959494683481,
        "color": 6
      },
      "id": "d4912d8e-9486-4113-992d-fb3eff224f4d",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        4160
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
        "options": {}
      },
      "id": "66608a1d-45fa-4b59-a70b-d36c98fa8b45",
      "name": "данные логиста",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1840,
        4240
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Просмотреть свободные машины",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "34002e05-61b0-40d3-884d-45ed94368732",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Оповещение",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "226de2e9-27a8-41c1-92b6-2d05c9a6078f",
      "name": "Проверка кнопок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1760,
        1000
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        }
      },
      "id": "02c757f8-518c-4f19-a88e-cfe9664aa3ea",
      "name": "берем данные машин",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2000,
        560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessagesFree = \"\";\nlet combinedMessagesNoDriver = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n  const driver = data.driver_id ? data.driver_id[1] : null;\n  const number_car = data.number_car;\n  const status = data.status;\n\n  if (driver && status === \"Нет груза\") {\n    if (!combinedMessagesFree) {\n      combinedMessagesFree = \"Сейчас свободны следующие автомобили:\\n\\n\";\n    }\n    combinedMessagesFree += `<b>${number_car}, ${driver}</b>\\n`;\n  } else if (!driver && status === \"Нет водителя\") {\n    if (!combinedMessagesNoDriver) {\n      combinedMessagesNoDriver = \"Текущие автомобили без водителя:\\n\\n\";\n    }\n    combinedMessagesNoDriver += `<b>${number_car}</b>\\n`;\n  }\n}\n\nlet finalMessage = (combinedMessagesFree + \"\\n\" + combinedMessagesNoDriver).trim();\n\nif (!finalMessage) {\n  finalMessage = \"На данный момент нет свободных автомобилей и автомобилей без водителей\";\n}\n\nreturn [{ json: { combinedMessages: finalMessage } }];\n"
      },
      "id": "e511f618-20e1-4bc4-ac01-991e21c64093",
      "name": "проверка статусов и генерация единого сообщения",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2240,
        560
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100626473,
          "message": {
            "message_id": 18263,
            "from": {
              "id": 7094417017,
              "is_bot": false,
              "first_name": "Сергей",
              "language_code": "ru"
            },
            "chat": {
              "id": 7094417017,
              "first_name": "Сергей",
              "type": "private"
            },
            "date": 1725438362,
            "text": "Просмотреть свободные машины"
          },
          "tg_id": "7094417017",
          "odoo_id": 22,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": 407,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 19,
          "fuel_liters": null,
          "weight_measure": "5 м3 ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": null,
          "count_weight_photo_sent": null,
          "current_quarry_hours": null,
          "end_round_message_id": null,
          "cookie": "session_id=a788be1b5b836c99bb65efcf2b18fe1934a82c6e; Expires=Thu, 04 Sep 2025 08:26:36 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-09-04T16:55:04.657Z",
  "versionId": "fded1872-72b2-47fd-8f24-9aab422cfcfd"
}