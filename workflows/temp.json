{
  "active": false,
  "connections": {
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "склеить имена водителей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто1": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение рейсов": {
      "main": [
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "получение рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "проверка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка": {
      "main": [
        [
          {
            "node": "корректно?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "корректно?": {
      "main": [
        [
          {
            "node": "вы ввели дату",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "неверная дата",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вы ввели дату": {
      "main": [
        [
          {
            "node": "задаём дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "задаём дату": {
      "main": [
        [
          {
            "node": "записываем дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-20T06:21:02.402Z",
  "id": "UybF1k3MQlnlzbo9",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "temp",
  "nodes": [
    {
      "parameters": {
        "content": "## Вывод перевозок на день в начале смены",
        "height": 318.97070094800966,
        "width": 1046.2058075770242,
        "color": 3
      },
      "id": "b74d3dca-b0ee-47c7-b8e1-e0e873c15610",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2400,
        1480
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "bc49ec74-6a5f-443e-a6f6-c6c8682c580e",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2660,
        1560
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "ae44da45-1a6c-4a93-8ab0-d9253fbd79b6",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2940,
        1500
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "511fa3eb-4716-4982-9e75-695fcd7592d7",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3140,
        1500
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "01c8ce77-a7fa-4ffb-8fd5-32a4526abdf6",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3560,
        1560
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "transportation_round[0].driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "5bf24e94-bfa4-4ae0-ac03-137fded231d4",
      "name": "склеить имена водителей",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4180,
        1580
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "id": "60954a4f-2419-479b-bfbe-141267c5adf6",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4420,
        1580
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_transportation_round0_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_transportation_round0_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "25b4fb7e-6e77-4795-999c-acdfe58d4d37",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4420,
        1440
      ]
    },
    {
      "parameters": {
        "content": "## Вывод водителей с той же перевозкой",
        "height": 357.7855900491362,
        "width": 1115.923707913178,
        "color": 6
      },
      "id": "7e4f1ad1-ffd1-4c04-a1fb-1a4793edeb3f",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3460,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e52eaa60-9f5e-48a6-85c7-64aeb535c928",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4640,
        1440
      ]
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "transportation_round[0].driver[0]",
        "options": {}
      },
      "id": "61f7799e-9730-4e5d-a9f0-a34c4f257b61",
      "name": "Remove Duplicates1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        4000,
        1580
      ],
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "9662dc17-4c9c-4439-bdfd-0804448beeef",
      "name": "поиск текущего авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2420,
        1560
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_round_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "round_id",
              "value": "={{ $json.rounds }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fb63586f-051f-41e4-b789-3c3038d72f9a",
      "name": "получение рейсов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3760,
        1300
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7461c3bc-d00a-4c55-abeb-1df6fa8be61f",
              "leftValue": "={{ $json.transportation_round[0].driver[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "1f7d17a3-1371-4099-accc-99a175e9238a",
              "leftValue": "={{ $json.transportation_round[0].driver[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d3eb29cb-2c83-46d7-a082-d45c3debb0f6",
      "name": "рейсы в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3980,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "rounds",
        "options": {}
      },
      "id": "fa0393f8-0e4f-4329-b778-273eadc67183",
      "name": "Split Out3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3760,
        1600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "2728af15-8b8c-45e1-af50-8a9485b9a9e2",
      "name": "перевозки+имена",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4180,
        1440
      ]
    },
    {
      "parameters": {},
      "id": "f743ca4f-57d6-4d75-8e9d-12797c196915",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        2000,
        2120
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $today }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "b1fba620-064a-4168-ba86-dac74fca1a99",
      "name": "форматируем",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "const isValidFullDate = (dateString) => {\n    const regex = /^(0[1-9]|[12][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(\\d{4})$/;\n    if (!regex.test(dateString)) return false;\n\n    const [day, month, year] = dateString.split('.').map(Number);\n    const date = new Date(year, month - 1, day);\n    \n    return date.getFullYear() === year && date.getMonth() === month - 1 && date.getDate() === day;\n};\n\nreturn {\"res\": isValidFullDate($input.first().json.date)}"
      },
      "id": "f91c39ed-e1e7-4ec3-932b-49206c5a5ea0",
      "name": "проверка",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2300,
        2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c7a4e683-cb95-468b-9a93-df03818cfb5c",
              "leftValue": "={{ $json.res }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6931001f-d89f-46e1-9b81-8262f5dede6d",
      "name": "корректно?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2520,
        2120
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дата введена неверно, попробуйте снова",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3fb5e1eb-bfce-4d20-b5a6-1df569f25af9",
      "name": "неверная дата",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2740,
        2260
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "=Вы ввели дату: {{ $('Execute Workflow Trigger').all()[0].json.message.text; }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать перевозку",
                    "additionalFields": {
                      "callback_data": "=continue_to_check"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "input_date"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "534935de-c2ad-45b9-bb1b-03881637de7f",
      "name": "вы ввели дату",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2660,
        1940
      ],
      "credentials": {
        "telegramApi": {
          "id": "rJQteGH5Ng1RKmF4",
          "name": "tg dev aleksey"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var res = $('Execute Workflow Trigger').all()[0].json.logist_template;\nres[\"date\"] = $('Execute Workflow Trigger').all()[0].json.message.text;\nreturn {\"data\": res};"
      },
      "id": "db594ce2-866f-4396-8716-8da20c58b49e",
      "name": "задаём дату",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2880,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "logist_template": "={{ $json.data }}",
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "no_taking_shift_logist_notify",
              "displayName": "no_taking_shift_logist_notify",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_template",
              "displayName": "logist_template",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f2002605-881c-4771-929e-424e7457a9e9",
      "name": "записываем дату",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3080,
        1940
      ],
      "credentials": {
        "postgres": {
          "id": "xrihBpyZE5y4OBiy",
          "name": "pg dev"
        }
      }
    }
  ],
  "pinData": {
    "получение перевозок4": [
      {
        "json": {
          "transportations": [
            {
              "id": 1600,
              "date": "2024-12-04",
              "earning_of_drivers": 5600,
              "total_price": 73841.54838709677,
              "comment": "89140706300 Дмитрий Ильин ",
              "comment_short": "89140706300 Дмитрий ...",
              "status": "Выполняется",
              "type": "Запланированная",
              "end_condition": "В течении смены",
              "round_quantity_for_car": 0,
              "required_cubic_metre": 20,
              "current_cubic_metre": 0,
              "diff_cubic_metre": 0,
              "required_ton": 0,
              "current_ton": 243.52,
              "diff_ton": 0,
              "balance_to_complete": 2,
              "tonnage_transported": 243.52,
              "cubic_metre_transported": 157.10967741935485,
              "cargo_volume_ton": "243.52 тонн",
              "cargo_volume_m3": "",
              "partner": [
                1,
                "ООО \"ЭВЕРЕСТ\""
              ],
              "carrier": [
                1,
                "ООО \"ЭВЕРЕСТ\""
              ],
              "material": [
                6,
                "Скальная вскрыша 1 кат. (Карьер Ключевое)"
              ],
              "material_domain": "[('quarry', '=', 1)]",
              "sender": [
                1,
                "ООО \"ЭВЕРЕСТ\""
              ],
              "place_from": [
                1,
                "карьер Ключевое"
              ],
              "place_to": [
                60,
                "Кипарисово (ферма)"
              ],
              "cars": [
                32,
                36,
                43,
                49
              ],
              "rounds": [
                8222,
                8217,
                8213,
                8207,
                8206,
                8195,
                8194,
                8192
              ],
              "cargo_volume_round": 157.10967741935485,
              "round_cars": "Р 635 ХМ - Т 332 НР",
              "round_drivers": "Олег Задора - Сергей Гончаренко",
              "cost_per_cubic_metre": 470,
              "delivery_cost_per_cubic_metre": 0,
              "cost_per_tonne": 305,
              "delivery_cost_per_tonne": 0,
              "driver_rate": 800,
              "trailer_driver_rate": 1400,
              "round_rate": 0,
              "color_of_status": "#FFFF00",
              "display_name": "2024-12-04 карьер Ключевое-Кипарисово (ферма)",
              "create_uid": [
                20,
                "ООО «Эверест»"
              ],
              "create_date": "2024-12-03 10:33:18",
              "write_uid": [
                20,
                "ООО «Эверест»"
              ],
              "write_date": "2024-12-04 02:01:56",
              "sequence": 0
            }
          ],
          "full_quarry_work": []
        }
      }
    ],
    "Сортировка перевозок и работ в карьере": [
      {
        "json": {
          "id": 1600,
          "date": "2024-12-04",
          "earning_of_drivers": 5600,
          "total_price": 73841.54838709677,
          "comment": "89140706300 Дмитрий Ильин ",
          "comment_short": "89140706300 Дмитрий ...",
          "status": "Выполняется",
          "type": "Запланированная",
          "end_condition": "В течении смены",
          "round_quantity_for_car": 0,
          "required_cubic_metre": 20,
          "current_cubic_metre": 0,
          "diff_cubic_metre": 0,
          "required_ton": 0,
          "current_ton": 243.52,
          "diff_ton": 0,
          "balance_to_complete": 2,
          "tonnage_transported": 243.52,
          "cubic_metre_transported": 157.10967741935485,
          "cargo_volume_ton": "243.52 тонн",
          "cargo_volume_m3": "",
          "partner": [
            1,
            "ООО \"ЭВЕРЕСТ\""
          ],
          "carrier": [
            1,
            "ООО \"ЭВЕРЕСТ\""
          ],
          "material": [
            6,
            "Скальная вскрыша 1 кат. (Карьер Ключевое)"
          ],
          "material_domain": "[('quarry', '=', 1)]",
          "sender": [
            1,
            "ООО \"ЭВЕРЕСТ\""
          ],
          "place_from": [
            1,
            "карьер Ключевое"
          ],
          "place_to": [
            60,
            "Кипарисово (ферма)"
          ],
          "cars": [
            32,
            36,
            43,
            49
          ],
          "rounds": [
            8222,
            8217,
            8213,
            8207,
            8206,
            8195,
            8194,
            8192
          ],
          "cargo_volume_round": 157.10967741935485,
          "round_cars": "Р 635 ХМ - Т 332 НР",
          "round_drivers": "Олег Задора - Сергей Гончаренко",
          "cost_per_cubic_metre": 470,
          "delivery_cost_per_cubic_metre": 0,
          "cost_per_tonne": 305,
          "delivery_cost_per_tonne": 0,
          "driver_rate": 800,
          "trailer_driver_rate": 1400,
          "round_rate": 0,
          "color_of_status": "#FFFF00",
          "display_name": "2024-12-04 карьер Ключевое-Кипарисово (ферма)",
          "create_uid": [
            20,
            "ООО «Эверест»"
          ],
          "create_date": "2024-12-03 10:33:18",
          "write_uid": [
            20,
            "ООО «Эверест»"
          ],
          "write_date": "2024-12-04 02:01:56",
          "sequence": 0
        }
      }
    ],
    "Execute Workflow Trigger": [
      {
        "json": {
          "date": "29.02.2024"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-12-04T11:06:24.992Z",
  "versionId": "0498370b-3041-4f22-a296-fdf6e2a9b709"
}