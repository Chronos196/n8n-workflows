{
  "active": false,
  "connections": {
    "Проверка типа входных данных": {
      "main": [
        [
          {
            "node": "Проверка медиа",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки к выполнению",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Проверка типа входных данных",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка медиа": {
      "main": [
        [
          {
            "node": "статус слесаря1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "статус слесаря",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта": {
      "main": [
        [
          {
            "node": "Приветственное сообщений",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка кнопок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Есть ли заявки на проверке": {
      "main": [
        [
          {
            "node": "выбор заявки(первая страница)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет заявок для выполнения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор заявки(первая страница)": {
      "main": [
        [
          {
            "node": "отправляем сообщение 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка кнопок": {
      "main": [
        [
          {
            "node": "неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление прошлого сообщения2": {
      "main": [
        [
          {
            "node": "Удаление прошлого сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обработка страниц с выбором заявки": {
      "main": [
        [
          {
            "node": "отправляем сообщение 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника": {
      "main": [
        [
          {
            "node": "объединяем заявки и сотрудника",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем заявки и сотрудника": {
      "main": [
        [
          {
            "node": "генерация сообщения для просмотра заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "генерация сообщения для просмотра заявки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки": {
      "main": [
        [
          {
            "node": "обновим статус на \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновим статус на \"в работе\"": {
      "main": [
        [
          {
            "node": "заявка взята в работу",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки к выполнению": {
      "main": [
        [
          {
            "node": "Удаление прошлого сообщения2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "неисправности",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим все неисправности4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки1": {
      "main": [
        [
          {
            "node": "получим актуальный статус заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим актуальный статус заявки": {
      "main": [
        [
          {
            "node": "заявка в работе?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка в работе?": {
      "main": [
        [
          {
            "node": "нужно вписать часы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявка уже изменена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно вписать часы": {
      "main": [
        [
          {
            "node": "обновим статус и номер текущей заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число5": {
      "main": [
        [
          {
            "node": "обновляем заявку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновляем заявку": {
      "main": [
        [
          {
            "node": "нужно ли приложить фото?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?": {
      "main": [
        [
          {
            "node": "возвращаем статус2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки1": {
      "main": [
        [
          {
            "node": "меняем на статус отправки фотографии",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки": {
      "main": [
        [
          {
            "node": "убираем номер заявки из пг",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем номер заявки из пг": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "проверка наличия механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков1": {
      "main": [
        [
          {
            "node": "данные слесаря",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст заявки": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "номер выбранной заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завершён процесс заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завершён процесс заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно ли приложить фото?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "загрузка фото исправления",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение фото из тг1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Фото доставлено2": {
      "main": [
        [
          {
            "node": "меняем статус на обычный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус на обычный": {
      "main": [
        [
          {
            "node": "поиск механиков3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков3": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков3": {
      "main": [
        [
          {
            "node": "проверка наличия механиков3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков3": {
      "main": [
        [
          {
            "node": "получим актуальный статус заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузка фото исправления": {
      "main": [
        [
          {
            "node": "Фото доставлено2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус слесаря1": {
      "main": [
        [
          {
            "node": "убираем кнопку \"назад\" у прикрепления фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку \"назад\" у прикрепления фото": {
      "main": [
        [
          {
            "node": "получение фото из тг1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим актуальный статус заявки1": {
      "main": [
        [
          {
            "node": "данные авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто2": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные слесаря": {
      "main": [
        [
          {
            "node": "текст заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус слесаря": {
      "main": [
        [
          {
            "node": "проверка на число5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка старта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "неисправности1": {
      "main": [
        [
          {
            "node": "получим все неисправности3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности3": {
      "main": [
        [
          {
            "node": "Есть ли заявки на проверке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "неисправности": {
      "main": [
        [
          {
            "node": "получим все неисправности",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности": {
      "main": [
        [
          {
            "node": "обработка страниц с выбором заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности4": {
      "main": [
        [
          {
            "node": "объединяем заявки и сотрудника",
            "type": "main",
            "index": 0
          },
          {
            "node": "данные сотрудника",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-02T15:31:45.535Z",
  "id": "0mRMYR1x8RkQK6fy",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "prod_locksmith",
  "nodes": [
    {
      "parameters": {},
      "id": "bbd5b387-d65a-4d8b-a429-bcf93664257e",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -180,
        2440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "11c45e0d-196b-47f1-821e-bee57c9f070b",
              "leftValue": "={{ $json.hasField(\"message\") }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f407161d-ed92-4b87-b82d-8b25dd4b8851",
      "name": "Проверка типа входных данных",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        140,
        2440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "2bd61e7b-a58d-4c5d-81d2-ec5f92c0ee0d",
              "leftValue": "={{ $json.message.photo[0].file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "beb896d6-88c5-4a2c-8278-489d76a2eca6",
              "leftValue": "={{ $json.message.voice.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "0228f7b6-101d-46f6-98b3-0fa3b02263be",
              "leftValue": "={{ $json.message.video_note.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "0bd83324-348f-4eae-aa8b-5f00ce5638ee",
              "leftValue": "={{ $json.message.video.file_unique_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2ce84b63-443e-45f2-aeae-13c6c08c8f82",
      "name": "Проверка медиа",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        240,
        1360
      ]
    },
    {
      "parameters": {
        "errorMessage": "3333"
      },
      "id": "f43a18b1-2376-40ba-8a6a-2529755a663f",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        60,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы авторизовались как слесарь",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заявки на ТО/Ремонт",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c506deb7-3bea-4188-8d4f-7fac9ff43dba",
      "name": "Приветственное сообщений",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1560,
        1720
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Приветствие и обработка реплай кнопок",
        "height": 559.9850883884588,
        "width": 1669.8027726960586
      },
      "id": "3d44c617-c19d-4ac9-be2f-9cba850b9079",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        1631.0845128986484
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ \"/start\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b707bcc1-bd22-417d-9171-78942dc9651c",
      "name": "Проверка старта",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1300,
        1940
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "Заявки на ТО/Ремонт",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c842b99e-56a5-4df7-8f8d-b9a7f940b581",
      "name": "Проверка кнопок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1680,
        1960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2a5d035d-235a-47f4-87f1-88ba998b6fe4",
              "leftValue": "={{ $('получим все неисправности3').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "25012e24-6f80-4f63-afb8-78847df50883",
      "name": "Есть ли заявки на проверке",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2220,
        1740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 6;\n\n// Задаем максимальное количество символов для описания заявки\nconst maxDescriptionLength = 16;\n\n// Получаем номер страницы из callback_data или оставляем 1 по умолчанию\nlet page = 1; // Стандартная первая страница\nlet messageId; // Для хранения message_id\n\n// Проверяем, есть ли callback_query\nconst callbackQuery = $('Execute Workflow Trigger').all()[0].json.callback_query;\nif (callbackQuery) {\n    const callbackData = callbackQuery.data;\n    const match = callbackData.match(/page_(\\d+)/);\n    if (match) {\n        page = parseInt(match[1], 10);\n    }\n    // Получаем message_id из callback_query\n    messageId = callbackQuery.message.message_id; // Получаем message_id из объекта callback_query\n} else {\n    // Если это не callback_query, возвращаемся к стандартному поведению\n    messageId = $('Execute Workflow Trigger').all()[0].json.message.message_id; // Получаем message_id из сообщения\n}\n\n// Определяем начальный и конечный индексы для отображаемых элементов на странице\nconst startIndex = (page - 1) * maxItemsPerPage;\nconst endIndex = startIndex + maxItemsPerPage;\n\n// Определяем, какие элементы будем выводить на текущей странице\nconst displayItems = items.slice(startIndex, endIndex);\n\n// Функция для обрезки описания с троеточием\nconst truncateDescription = (description) => {\n    if (description.length > maxDescriptionLength) {\n        return description.slice(0, maxDescriptionLength) + '…';\n    }\n    return description;\n};\n\n// Формируем массив кнопок с информацией по каждому элементу\nconst buttons = displayItems.map((item, index) => {\n    // Разделяем строку по дефису и оставляем только номер авто (первая часть)\n    const carInfo = item.json.car_id[1].split(' - ')[0];\n    // Обрезаем описание заявки, если оно слишком длинное\n    const truncatedDescription = truncateDescription(item.json.description_of_maintenance);\n    \n    return {\n        text: `${startIndex + index + 1}. ${carInfo} - ${truncatedDescription}`, // Используем startIndex для правильной нумерации\n        callback_data: `item_${item.json.id}_page_${page}` // Добавляем номер страницы\n    };\n});\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопки \"Следующая страница\" и \"Назад\", если нужно\nif (items.length > endIndex) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Следующая страница\", callback_data: `page_${page + 1}` }]);\n}\nif (page > 1) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Предыдущая страница\", callback_data: `page_${page - 1}` }]);\n}\n\n// Добавляем постоянную кнопку \"Назад\"\ninlineKeyboard.inline_keyboard.push([{ text: \"Назад\", callback_data: \"del_maintenances\" }]);\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id из входного JSON\nconst chatId = $('Execute Workflow Trigger').all()[0].json.message.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для отправки сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n// Формируем сообщение для отправки\nconst message = {\n    chat_id: chatId,\n    text: \"Ваши заявки для выполнения:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n\n// Обработка выбора заявки\nconst selectedCallbackData = callbackQuery.data;\nconst selectedMatch = selectedCallbackData.match(/item_(\\d+)_page_(\\d+)/);\nif (selectedMatch) {\n    const itemId = selectedMatch[1]; // ID выбранной заявки\n    const returnPage = parseInt(selectedMatch[2], 10); // Номер страницы для возврата\n\n    // Здесь можно добавить логику для обработки выбранной заявки\n    // Например, отправить информацию о заявке или выполнить другую логику\n\n    // После этого можно вернуться к странице с заявками\n    const returnMessage = {\n        chat_id: chatId,\n        message_id: messageId,\n        text: \"Заявки на проверке:\",\n        reply_markup: inlineKeyboard // Используем тот же inlineKeyboard с сохраненной страницей\n    };\n\n    return [\n        {\n            json: {\n                url,\n                message: returnMessage\n            }\n        }\n    ];\n}"
      },
      "id": "11f58f31-70a5-4ffd-ad9f-e4b7a33d4be4",
      "name": "выбор заявки(первая страница)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2460,
        1680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "ac6f2a8f-cd54-4f49-86e5-436cc43d7648",
      "name": "отправляем сообщение 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2680,
        1680
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "c1e0b262-3a5d-482b-9a4d-065076f39197",
      "name": "Удаление прошлого сообщения2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        940,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1}}"
      },
      "id": "2ea463a0-56ae-4ade-a9a1-4e129ec22b2b",
      "name": "Удаление прошлого сообщения3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1220,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "3a484275-81e6-4df9-9a49-3a3465aebcc2",
      "name": "отправляем сообщение 5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1320,
        3440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Определяем максимальное количество элементов на одной странице\nconst maxItemsPerPage = 6;\n\n// Задаем максимальное количество символов для описания заявки\nconst maxDescriptionLength = 16;\n\n// Получаем номер страницы из callback_data или оставляем 1 по умолчанию\nlet page = 1; // Стандартная первая страница\nlet messageId; // Для хранения message_id\n\n// Проверяем, есть ли callback_query\nconst callbackQuery = $('Execute Workflow Trigger').all()[0].json.callback_query;\nif (callbackQuery) {\n    const callbackData = callbackQuery.data;\n    const match = callbackData.match(/page_(\\d+)/);\n    if (match) {\n        page = parseInt(match[1], 10);\n    }\n    // Получаем message_id из callback_query\n    messageId = callbackQuery.message.message_id; // Получаем message_id из объекта callback_query\n} else {\n    // Если это не callback_query, возвращаемся к стандартному поведению\n    messageId = $('Execute Workflow Trigger').all()[0].json.message.message_id; // Получаем message_id из сообщения\n}\n\n// Определяем начальный и конечный индексы для отображаемых элементов на странице\nconst startIndex = (page - 1) * maxItemsPerPage;\nconst endIndex = startIndex + maxItemsPerPage;\n\n// Определяем, какие элементы будем выводить на текущей странице\nconst displayItems = items.slice(startIndex, endIndex);\n\n// Функция для обрезки описания с троеточием\nconst truncateDescription = (description) => {\n    if (description.length > maxDescriptionLength) {\n        return description.slice(0, maxDescriptionLength) + '…';\n    }\n    return description;\n};\n\n// Формируем массив кнопок с информацией по каждому элементу\nconst buttons = displayItems.map((item, index) => {\n    // Разделяем строку по дефису и оставляем только номер авто (первая часть)\n    const carInfo = item.json.car_id[1].split(' - ')[0];\n    // Обрезаем описание заявки, если оно слишком длинное\n    const truncatedDescription = truncateDescription(item.json.description_of_maintenance);\n    \n    // Используем startIndex для корректного отображения номера\n    const buttonIndex = startIndex + index + 1;\n\n    return {\n        text: `${buttonIndex}. ${carInfo} - ${truncatedDescription}`,\n        callback_data: `item_${item.json.id}_page_${page}` // Добавляем номер страницы в callback_data\n    };\n});\n\n// Создаем объект с inline-клавиатурой\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // Каждая кнопка на своей строке\n    ]\n};\n\n// Добавляем кнопки \"Следующая страница\" и \"Назад\", если нужно\nif (items.length > endIndex) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Следующая страница\", callback_data: `page_${page + 1}` }]);\n}\nif (page > 1) {\n    inlineKeyboard.inline_keyboard.push([{ text: \"Предыдущая страница\", callback_data: `page_${page - 1}` }]);\n}\n\n// Добавляем постоянную кнопку \"Назад\"\ninlineKeyboard.inline_keyboard.push([{ text: \"Назад\", callback_data: \"del_maintenances\" }]);\n\n// Логируем для отладки\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\n// Получаем chat_id из входного JSON\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\n\n// Токен бота\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n// URL для обновления сообщения через API Telegram\nconst url = `https://api.telegram.org/bot${token}/editMessageText`;\n\n// Формируем сообщение для обновления\nconst message = {\n    chat_id: chatId,\n    message_id: messageId,\n    text: \"Ваши заявки для выполнения:\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n\n// Обработка выбора заявки\nconst selectedCallbackData = callbackQuery.data;\nconst selectedMatch = selectedCallbackData.match(/item_(\\d+)_page_(\\d+)/);\nif (selectedMatch) {\n    const itemId = selectedMatch[1]; // ID выбранной заявки\n    const returnPage = parseInt(selectedMatch[2], 10); // Номер страницы для возврата\n\n    // Здесь можно добавить логику для обработки выбранной заявки\n    // Например, отправить информацию о заявке или выполнить другую логику\n\n    // После этого можно вернуться к странице с заявками\n    const returnMessage = {\n        chat_id: chatId,\n        message_id: messageId,\n        text: \"Заявки на проверке:\",\n        reply_markup: inlineKeyboard // Используем тот же inlineKeyboard с сохраненной страницей\n    };\n\n    return [\n        {\n            json: {\n                url,\n                message: returnMessage\n            }\n        }\n    ];\n}"
      },
      "id": "14367fee-b3ff-4a46-81b9-ca3b3c7f7b54",
      "name": "обработка страниц с выбором заявки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        3440
      ]
    },
    {
      "parameters": {
        "content": "## Просмотр заявок к выполнению",
        "height": 983.8498497724706,
        "width": 1172.0141081198585
      },
      "id": "85860e74-4095-4101-ac0d-ca2b6ed30e2e",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        760,
        3000
      ]
    },
    {
      "parameters": {
        "content": "## Удаление сообщений",
        "height": 230.02744518719146,
        "width": 496.32687483613483,
        "color": 5
      },
      "id": "fd7c0712-3503-4c19-838e-33478a07abe8",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        873,
        3089
      ]
    },
    {
      "parameters": {
        "content": "## Обработка страниц с выбором заявки",
        "height": 230.02744518719146,
        "width": 611.2775867471851,
        "color": 5
      },
      "id": "104de219-d3e9-4eda-976c-a5339d9323b4",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        853,
        3369
      ]
    },
    {
      "parameters": {
        "content": "## Подробный вывод заявки",
        "height": 311.6467894317699,
        "width": 1065.0613458914934,
        "color": 5
      },
      "id": "6b855693-a325-4d7a-b041-ca80aad4a664",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        3640
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.callback_query.data.split('_')[1] }}"
            }
          ]
        }
      },
      "id": "64626e79-0273-486f-974c-3a1ae3ee101a",
      "name": "получим все неисправности5",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2480,
        3620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.created_by[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "522d5f56-bcea-4f76-a57d-7e7a87464ed3",
      "name": "данные сотрудника",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1100,
        3820
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "e6d4fc77-d041-4b01-8977-4e21d87f6594",
      "name": "объединяем заявки и сотрудника",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1340,
        3720
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем все элементы из входных данных\nconst items = $input.all();\n\n// Получаем данные о колбэке из Execute Workflow Trigger\nconst callbackQuery = $('Execute Workflow Trigger').all()[0].json.callback_query;\nconst callbackData = callbackQuery ? callbackQuery.data : null;\n\n// Проверяем, был ли получен callbackData\nif (!callbackData) {\n    throw new Error(\"Callback data is undefined. Cannot proceed.\");\n}\n\n// Извлекаем message_id из callback_query\nconst messageId = callbackQuery.message.message_id;\n\n// Обработка выбора заявки\nconst selectedMatch = callbackData.match(/item_(\\d+)_page_(\\d+)/);\nif (selectedMatch) {\n    const itemId = selectedMatch[1]; // ID выбранной заявки\n    const returnPage = parseInt(selectedMatch[2], 10); // Номер страницы для возврата\n\n    // Получаем информацию о выбранной заявке\n    const selectedRequest = items.find(item => item.json.id == itemId);\n    // Извлекаем необходимые данные из JSON\n    const {\n        description_of_maintenance,\n        car_id,\n        created_by,\n        id\n    } = selectedRequest.json;\n\n    const descriptionText = description_of_maintenance === \"Нет описания\" \n        ? `${description_of_maintenance} (Смотреть фото в Odoo)` \n        : description_of_maintenance;\n\n    // Формируем текст сообщения\n    const carName = car_id[1].split(' - ')[0]; // Получаем только номер авто\n\n    // Ищем данные о водителе\n    const driverData = items.find(item => item.json.resource_id && item.json.resource_id[1] === created_by[1]);\n    \n    // Если данные о водителе найдены, извлекаем имя и телефон\n    const name = driverData ? driverData.json.name : 'Неизвестный водитель';\n    const mobile_phone = driverData ? driverData.json.mobile_phone : 'Телефон не указан';\n\n    // Формируем ссылку на заявку в Odoo\n    const odooLink = `https://everest.lamart.site/web#id=${itemId}&model=technical.maintenance&view_type=form`;\n\n    // Полное сообщение\n    const messageText = `У автомобиля: <b>${carName}</b> проблема:\\n\\n` +\n        `<i>${descriptionText}</i>\\n\\n`;\n\n    // Получаем chat_id из callback_query\n    const chatId = callbackQuery.from.id;\n\n    // Токен бота\n    const token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\n\n    // URL для редактирования сообщения через API Telegram\n    const url = `https://api.telegram.org/bot${token}/editMessageText`;\n\n    // Создаем объект с inline-клавиатурой в один столбик\n    const inlineKeyboard = {\n        inline_keyboard: [\n            [\n                { text: \"Взять в работу\", callback_data: `TR_${id}` } // Добавляем ID заявки\n            ],\n            [\n                { text: \"Назад\", callback_data: `page_${returnPage}` } // Устанавливаем номер страницы в колбэк\n            ]\n        ]\n    };\n\n    // Формируем сообщение для редактирования\n    const message = {\n        chat_id: chatId,\n        message_id: messageId,\n        text: messageText,\n        parse_mode: 'HTML', // Указываем, что текст содержит HTML\n        reply_markup: inlineKeyboard // Добавляем inline-клавиатуру\n    };\n\n    // Возвращаем данные для запроса\n    return [\n        {\n            json: {\n                url,\n                message\n            }\n        }\n    ];\n}\n"
      },
      "id": "25151a5d-657f-4a66-b814-de962b421cd6",
      "name": "генерация сообщения для просмотра заявки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        3720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "04d0b428-f0c0-45d9-b9e3-6943dccc8b7d",
      "name": "отправляем сообщение 11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1760,
        3720
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "status",
              "value": "К выполнению"
            },
            {
              "fieldName": "locksmith",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "515356aa-a4ae-478f-ab41-432a19835cb3",
      "name": "получим все неисправности2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2440,
        3400
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0c07e482-d8b9-40ad-9c9a-84e9b43c7d74",
      "name": "номер выбранной заявки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        800,
        4180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "ce1d8f15-b927-4f25-b76c-34fe2ab46ba5",
      "name": "обновим статус на \"в работе\"",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1020,
        4180
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Заявка <b>{{ $json.description_of_maintenance }}</b> автомобиля <b>{{ $json.car_id[1].split(' - ')[0] }}</b> взята в работу. Не забудьте отправить заявку на проверку после ремонта.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить заявку на проверку",
                    "additionalFields": {
                      "callback_data": "={{ \"ER_\"+$json.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "c099f256-7ee3-4af9-8028-6fc00bd1f464",
      "name": "заявка взята в работу",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1260,
        4126
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Ошибка Odoo: {{ $json.error }}",
        "additionalFields": {}
      },
      "id": "91feeed8-86a9-4d0c-bd08-27845cf722fb",
      "name": "если есть ошибки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1260,
        4286
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "del_maintenances",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6fe17b5e-971b-414d-b1e2-82872f01feae",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"page_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cab21627-7a55-4569-b357-b424c3905103",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"item_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c75d8f8d-3ed1-483c-9142-3d9375a18eb7",
      "name": "заявки к выполнению",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        240,
        3460
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "92c74f53-7894-4109-8945-1c7a90ec927b",
      "name": "номер выбранной заявки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        820,
        4560
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.TO_number }}"
            }
          ]
        }
      },
      "id": "c29e6d2b-e889-4b0a-bb3a-1c3a587a9d59",
      "name": "получим актуальный статус заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1020,
        4560
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fc7e922b-a871-4029-abf2-95687ecdcc6a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4fbdf600-69bb-4997-a132-e2820a61e18c",
      "name": "заявка в работе?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1240,
        4560
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите число затраченных часов на работу:",
        "additionalFields": {}
      },
      "id": "c56449d8-654e-4b3b-9685-2e3bdc753353",
      "name": "нужно вписать часы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1480,
        4480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Статус заявки должен быть \"В работе\""
        }
      },
      "id": "76d3d88c-959a-4a40-aafa-fcfc39d7b07e",
      "name": "заявка уже изменена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1620,
        4620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request_hours",
            "end_request_id": "={{ $('номер выбранной заявки1').item.json.TO_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "f2578cd6-6989-4226-9d4a-5a71a681efa5",
      "name": "обновим статус и номер текущей заявки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1780,
        4480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "100bf362-8d05-4fa9-abc3-a571dc39652f",
      "name": "проверка на число5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1460,
        1200
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, введите еще раз",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bd0aba82-bdbd-403d-b381-f82ce4914493",
      "name": "часы введены неверно2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1720,
        1380
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/end_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.end_request_id }},\n    \"hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }},\n    \"employee_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "466d0070-b8e8-4fe9-9326-99bb485c2bf8",
      "name": "обновляем заявку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1800,
        1180
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нужно приложить фото исправления?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "9f58136f-10f3-48a6-b8eb-04a3da476365",
      "name": "нужно ли приложить фото?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        1160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.chat_message_id -1}}",
        "text": "=Ошибка Odoo: {{ $json.error }}\n\nВведите количество часов заново",
        "additionalFields": {}
      },
      "id": "07186121-1345-458b-bc2b-fb1145a33d3b",
      "name": "если есть ошибки2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        1380
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4fcf784d-5c4c-47fa-b3cf-6f3c83075d11",
      "name": "возвращаем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2315,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Прикрепите фото исправления:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "d8b8b2da-b376-4148-8c30-b12161ba9f16",
      "name": "завершён процесс заявки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        900,
        4920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "adding_end_request_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "7ca7341f-1851-431d-97b3-dca8ae41f236",
      "name": "меняем на статус отправки фотографии",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1120,
        4920
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Заявка выполнена!",
        "additionalFields": {}
      },
      "id": "4d0a97f7-30fa-4630-9bf4-b3eebfe8474b",
      "name": "завершён процесс заявки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        900,
        5080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "end_request_id": "={{ null }}",
            "end_request_hours": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "968b25dd-05d0-488c-a9be-92055dced474",
      "name": "убираем номер заявки из пг",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1160,
        5080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Механик получает уведомление, когда слесарь завершает заявку",
        "height": 250.48240620104332,
        "width": 1538.2139291185106,
        "color": 5
      },
      "id": "9b5e76f7-7b81-423c-863e-b2bf0f06d565",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1480,
        5040
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "58e7b92e-8cda-46b8-8fa4-620122949ba0",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1545,
        5099
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "61153356-b70d-48cd-9bbb-df43c851b2eb",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1740,
        5100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5a0505f6-ea57-455b-b981-34ca2580d8e5",
      "name": "проверка наличия механиков1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1965,
        5099
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.end_request_id }}"
            }
          ]
        }
      },
      "id": "9b204365-712b-42ab-8231-a3628a85cdca",
      "name": "текст заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2460,
        5100
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('поиск тг айди механиков1').item.json.tg_id }}",
        "text": "={{ $json.car_id[1].split(' - ')[0] }} - {{ $('Execute Workflow Trigger').item.json.end_request_hours }} ч. - {{ $json.completed_by[1] }} (Слесарь) - {{ $('текст заявки').item.json.description_of_maintenance }}\n\n<b>Требуется проверить корректность выставленных часов</b> <a href=\"https://everest.lamart.site/web#id={{ $('Execute Workflow Trigger').item.json.end_request_id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Принять заявку✅",
                    "additionalFields": {
                      "callback_data": "={{\"accept_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отклонить заявку ❌",
                    "additionalFields": {
                      "callback_data": "={{\"reject_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "003916cb-94be-4220-8caa-08d00cc53cf7",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2720,
        5100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопок для отправки фото завершения заявки",
        "height": 369.7365490265316,
        "width": 579.6907768759479,
        "color": 5
      },
      "id": "b8c272c9-2720-49ae-9abd-ddc337187f59",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        760,
        4860
      ]
    },
    {
      "parameters": {
        "content": "## Отмена отправки фото исправления",
        "height": 207.35648349288545,
        "width": 487.077305180272,
        "color": 5
      },
      "id": "420d5bb9-3547-46bd-b885-67af5899cda6",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        5320
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Нужно приложить фото исправления?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "928aa1ef-60da-457d-8e20-2bae2d061ef5",
      "name": "нужно ли приложить фото?1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        900,
        5360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "fe89df36-8392-4aef-b659-0d91f17dd7d8",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1120,
        5360
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "={{ \"TR_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b41dcf43-0ef9-4fda-ba0b-8fa0c4f7626e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"ER_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d34f98ab-15c5-4595-acc4-f1674738011f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "yes_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc7ccf7b-5a9c-4cba-9ce4-15317c35b2c2",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "458b6e10-1a53-4982-a430-36d2e0faa3a0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "d29e9d53-28d1-4fba-baf1-7f9064e12daa",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        180,
        4640
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "e49d99b2-3687-4e55-96d7-a92f4a629b88",
      "name": "Extract from File1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1035,
        540
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Execute Workflow Trigger').item.json.message.photo.reduce((largest, current) => current.file_size > largest.file_size ? current : largest).file_id; }}"
      },
      "id": "83ca90c6-ee31-4744-a763-f847283b53cf",
      "name": "получение фото из тг1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        795,
        540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Заявка выполнена!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "31e68b2d-d68d-458e-9fca-ba97d5d4149a",
      "name": "Фото доставлено2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1520,
        540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ null }}",
            "end_request_id": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "cc3b8e55-e655-4b12-90ab-9bb6c80c008a",
      "name": "меняем статус на обычный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1735,
        540
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка фото завершения заявки",
        "height": 304.0187080264881,
        "width": 1480.2413619003405,
        "color": 6
      },
      "id": "62704c79-3ab2-4401-a563-f9713a7b92fa",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "38fbdfb5-f8b9-4d2f-a0b4-937f690901f3",
      "name": "поиск механиков3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2040,
        560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "60a391f7-9f65-48c6-9c12-5d4aea3785ce",
      "name": "поиск тг айди механиков3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2235,
        561
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e6a8410b-09b4-4ad5-b62a-1bde83425b64",
      "name": "проверка наличия механиков3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2460,
        560
      ]
    },
    {
      "parameters": {
        "content": "## Механик получает уведомление, когда слесарь завершает заявку",
        "height": 250.48240620104332,
        "width": 1545.548756095632,
        "color": 6
      },
      "id": "2b7a000e-2949-4b2b-aec4-9fcc7e92eb89",
      "name": "Sticky Note42",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1980,
        480
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/add_repaired_photo",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $('Execute Workflow Trigger').item.json.end_request_id }},\n    \"image\":  {{'\"'+ $('Extract from File1').item.json.data + '\"'}}\n}",
        "options": {}
      },
      "id": "2ccac408-6cb1-4703-89a1-c1fcd5496369",
      "name": "загрузка фото исправления",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1280,
        540
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.status }}",
                    "rightValue": "adding_end_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "8853d1c2-debc-44b2-bf98-e8f808b013d2",
      "name": "статус слесаря1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        80,
        580
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id - 1}}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Прикрепите фото исправления:",
        "additionalFields": {}
      },
      "id": "3db04bb6-a7f4-4c82-850c-8bbff2026725",
      "name": "убираем кнопку \"назад\" у прикрепления фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        540,
        540
      ],
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.end_request_id }}"
            }
          ]
        }
      },
      "id": "f651d3ea-7255-4271-8174-d06cb985fde6",
      "name": "получим актуальный статус заявки1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2720,
        540
      ],
      "executeOnce": false,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.car_id[0] }}"
            }
          ]
        }
      },
      "id": "ee2c9b8c-9506-44f2-a609-0bcb24b22090",
      "name": "данные авто2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2980,
        540
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('поиск тг айди механиков3').item.json.tg_id }}",
        "file": "={{ $('получение фото из тг1').item.json.result.file_id }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=Принять заявку✅",
                    "additionalFields": {
                      "callback_data": "={{\"accept_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отклонить заявку❌",
                    "additionalFields": {
                      "callback_data": "={{\"reject_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "caption": "={{ $json.number_car }} - {{ $('Execute Workflow Trigger').item.json.end_request_hours }} ч. - {{ $('получим актуальный статус заявки1').item.json.completed_by[1] }} (Слесарь) - {{ $('получим актуальный статус заявки1').item.json.description_of_maintenance }}\n\n<b>Требуется проверить корректность выставленных часов</b> <a href=\"https://everest.lamart.site/web#id={{ $('Execute Workflow Trigger').item.json.end_request_id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
          "parse_mode": "HTML"
        }
      },
      "id": "3a444e1e-2575-42bb-9c76-870561d6e41c",
      "name": "Отправка проблемы механикам3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3260,
        540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод часов заявки",
        "height": 478.3312834739607,
        "width": 1110.8752211101105,
        "color": 5
      },
      "id": "e4db20c8-c822-4443-87ef-33d7af2b8369",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        1108.0395431039242
      ]
    },
    {
      "parameters": {
        "content": "## Слесарь берет заявку",
        "height": 345.0604887980921,
        "width": 689.7997991620289,
        "color": 5
      },
      "id": "21900118-9df0-4dc3-9a94-385d11ac752d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        740,
        4100
      ]
    },
    {
      "parameters": {
        "content": "## Слесарь завершает заявку",
        "height": 345.0604887980921,
        "width": 1202.7584994749918,
        "color": 5
      },
      "id": "8905fce2-ee06-40fe-9c4f-281a3acbacc7",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        740,
        4460
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "e8e4a613-d127-40ae-b26c-95809f26dd6a",
      "name": "данные слесаря",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2200,
        5100
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.status }}",
                    "rightValue": "inputing_request_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "8690bde6-75b6-4807-8d49-4fdb1e3e43ec",
      "name": "статус слесаря",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        760,
        1560
      ]
    },
    {
      "parameters": {
        "content": "## Вывод первой страницы заявок \"К выполнению\" для слесаря",
        "height": 329.638781398251,
        "width": 969.9608169258066,
        "color": 5
      },
      "id": "2b4e2b43-ac48-442d-a39a-9317904339e3",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        1640
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_all_maintenances",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "87ecf927-8b4b-4b11-8f0a-e3813c76fe3d",
      "name": "неисправности1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1840,
        1800
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "030d374e-9358-4f14-a3f8-447482e95d7a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "К выполнению",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "a8d52b16-d080-44b7-be10-51bc6a96eceb",
              "leftValue": "={{ $json.locksmith[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d7aba968-9ca4-4dd4-9b90-cf8dcafe9ed8",
      "name": "получим все неисправности3",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2020,
        1740
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "На данный момент нет заявок для выполнения!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "del_maintenances"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "03a7ae0f-acbc-4e37-b895-7eafee37609c",
      "name": "нет заявок для выполнения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2560,
        1840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_all_maintenances",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "6e87e985-d0bc-4424-bbb6-657c917b350f",
      "name": "неисправности",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        3440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "030d374e-9358-4f14-a3f8-447482e95d7a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "К выполнению",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "a8d52b16-d080-44b7-be10-51bc6a96eceb",
              "leftValue": "={{ $json.locksmith[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a5b3145f-1a7f-4957-8975-7387bb26eda1",
      "name": "получим все неисправности",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        920,
        3440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenance_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "maintenance_id",
              "value": "={{ $json.callback_query.data.split('_')[1].toNumber() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "69e9536d-3881-4851-8470-28fbf0855883",
      "name": "получим все неисправности4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        840,
        3700
      ],
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100634587,
          "message": {
            "message_id": 27285,
            "from": {
              "id": 467549384,
              "is_bot": false,
              "first_name": "Sergio",
              "username": "sergo_kf",
              "language_code": "ru",
              "is_premium": true
            },
            "chat": {
              "id": 467549384,
              "first_name": "Sergio",
              "username": "sergo_kf",
              "type": "private"
            },
            "date": 1731066606,
            "text": "Заявки на ТО/Ремонт"
          },
          "tg_id": "467549384",
          "odoo_id": 4,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 25,
          "fuel_liters": 100,
          "weight_measure": "0 Тонны ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": 1,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 5,
          "end_round_message_id": 26283,
          "last_message_text": "Отлично, вы завершили рейс, хотите начать следующий?\nКарьер Ключевое - улица Карла Маркса, 43\nПесок (Карьер Ключевое)\nОстаток по текущей перевозке -  12.57 т.",
          "logist_notifications": false,
          "creating_transportation": null,
          "cookie": "session_id=b9c645092bc728c977a98c4be377c7c2ac0a2e9e; Expires=Mon, 03 Nov 2025 14:04:36 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-12-02T15:34:46.532Z",
  "versionId": "b307b227-85b9-4d56-8ab2-c5f4a23c8b1d"
}