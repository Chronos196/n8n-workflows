{
  "active": false,
  "connections": {
    "Ищем автомобиль по номеру": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля1": {
      "main": [
        [
          {
            "node": "запись одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка привязки к автомобилю": {
      "main": [
        [
          {
            "node": "создание заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нельзя создать заявку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков": {
      "main": [
        [
          {
            "node": "проверка наличия механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов": {
      "main": [
        [
          {
            "node": "проверка наличия логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия логистов": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет логистов": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение только для механика?": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто": {
      "main": [
        [
          {
            "node": "статус авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение даты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка правильности номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нельзя создать заявку": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем сегодняшнюю дату": {
      "main": [
        [
          {
            "node": "форматируем в удобный вид",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем разницу в днях": {
      "main": [
        [
          {
            "node": "округляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если истекло": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "скоро истекает": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "форматируем в удобный вид": {
      "main": [
        [
          {
            "node": "получаем разницу в днях",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем доки и форматированную дату": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем доки+дата с разницей во времени": {
      "main": [
        [
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "округляем": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "сколько дней до окончания срока",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "действует долго": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем в один список": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список1": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "соединяем в единое сообщение": {
      "main": [
        [
          {
            "node": "Получение даты1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли документы": {
      "main": [
        [
          {
            "node": "получаем сегодняшнюю дату",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "документы не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы не найдены": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли неисправности1": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат1",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат1": {
      "main": [
        [
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст1": {
      "main": [
        [
          {
            "node": "Добавляем теги",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Добавляем теги": {
      "main": [
        [
          {
            "node": "Разделяем по статусам",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку": {
      "main": [
        [
          {
            "node": "к выполнению2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку1": {
      "main": [
        [
          {
            "node": "в работе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку2": {
      "main": [
        [
          {
            "node": "требуется проверка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "к выполнению2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в работе": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "требуется проверка": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "в один текст объединяем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст объединяем": {
      "main": [
        [
          {
            "node": "заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если авто не привязан": {
      "main": [
        [
          {
            "node": "заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не привязан авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Преобразование одометра в число": {
      "main": [
        [
          {
            "node": "Проверка нужна ли замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка нужна ли замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масле для меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка уведомления о том, что требуется замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка уведомления о том, что требуется замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масла не нужна в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масле для меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масла не нужна в меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем инф. о масле в единое для меню ТО": {
      "main": [
        [
          {
            "node": "изменяем водителя",
            "type": "main",
            "index": 0
          },
          {
            "node": "получаем документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?": {
      "main": [
        [
          {
            "node": "возвращаем статус2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем номер": {
      "main": [
        [
          {
            "node": "Ищем автомобиль по номеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Получение инф. о водителе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка всего сообщения": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус авто": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число": {
      "main": [
        [
          {
            "node": "получаем данные автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "одометр введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число1": {
      "main": [
        [
          {
            "node": "данные смены введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число2": {
      "main": [
        [
          {
            "node": "литры введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "литры введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "литры введены": {
      "main": [
        [
          {
            "node": "записываем литры",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число3": {
      "main": [
        [
          {
            "node": "число меньше 100",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделяем по статусам": {
      "main": [
        [
          {
            "node": "добавим перевод на новую строку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запись одометра": {
      "main": [
        [
          {
            "node": "Преобразование одометра в число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто привязан?": {
      "main": [
        [
          {
            "node": "создание заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск механиков2",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск логистов3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения": {
      "main": [
        [
          {
            "node": "отправка сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов1": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка сообщения": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную4": {
      "main": [
        [
          {
            "node": "сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Сообщение отправлено",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам1": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "поиск логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "диспетчер1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки1": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск логистов1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновляем заявку": {
      "main": [
        [
          {
            "node": "нужно ли приложить фото?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов3": {
      "main": [
        [
          {
            "node": "Отправка проблемы диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "бессрочно": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список2": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли такие заявки": {
      "main": [
        [
          {
            "node": "Вывод с кнопкой \"завершить заявку\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод с кнопкой \"назад\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты": {
      "main": [
        [
          {
            "node": "получение машины из графика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли водитель в графике": {
      "main": [
        [
          {
            "node": "сообщение ввода автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "меняем статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус4": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов2": {
      "main": [
        [
          {
            "node": "маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "Сообщение отправлено2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения3": {
      "main": [
        [
          {
            "node": "айди диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка в чат": {
      "main": [
        [
          {
            "node": "Сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди логистов": {
      "main": [
        [
          {
            "node": "в один текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди диспетчера": {
      "main": [
        [
          {
            "node": "в один текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст1": {
      "main": [
        [
          {
            "node": "отправка в чат",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "привязан авто?": {
      "main": [
        [
          {
            "node": "введите сообщение",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужен авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите сообщение": {
      "main": [
        [
          {
            "node": "статус=ввод сообщения диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка логистам о доках": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения4": {
      "main": [
        [
          {
            "node": "отправка диспетчеру о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка диспетчеру о доках": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено2": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения5": {
      "main": [
        [
          {
            "node": "сообщение диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Сообщение отправлено3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад4": {
      "main": [
        [
          {
            "node": "возвращаем статус5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка правильности номера": {
      "main": [
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько дней до окончания срока": {
      "main": [
        [
          {
            "node": "бессрочно",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если истекло",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "скоро истекает",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "действует долго",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "маршрут": {
      "main": [
        [
          {
            "node": "айди логистов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отправка логистам о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты1": {
      "main": [
        [
          {
            "node": "документы",
            "type": "main",
            "index": 0
          },
          {
            "node": "документы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запланирован ли ремонт/ТО": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат2",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "объединяем данные о запланированных работах",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем данные о запланированных работах": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем сообщения": {
      "main": [
        [
          {
            "node": "объединение заявок и запланированных в одно сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединение заявок и запланированных в одно сообщение": {
      "main": [
        [
          {
            "node": "Меню ТО3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли неисправности2": {
      "main": [
        [
          {
            "node": "запланирован ли ремонт/ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат2": {
      "main": [
        [
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО3": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст2": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавляем теги1": {
      "main": [
        [
          {
            "node": "добавляем разделитель - новая строка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена1": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей1": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первой работа или перевозка": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день, работа первой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выводим информацию о перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Удаление кнопки в вводе часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число4": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные смены введены": {
      "main": [
        [
          {
            "node": "возвращаем статус1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          },
          {
            "node": "Проверка старта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение2": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение1": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем объём материала": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем тонны": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем м3": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "склеить имена водителей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число5": {
      "main": [
        [
          {
            "node": "обновляем заявку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке5": {
      "main": [
        [
          {
            "node": "айди последнего сообщения2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "авто привязан?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы по авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "объединяем сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта1": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем пустые списки": {
      "main": [
        [
          {
            "node": "есть ли неисправности2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса2": {
      "main": [
        [
          {
            "node": "данные сотрудника",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные сотрудника1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем данные автомобиля2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки для работы": {
      "main": [
        [
          {
            "node": "заявка создана",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка создана": {
      "main": [
        [
          {
            "node": "убираем кнопку назад",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "преобразуем в сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение1": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение2": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке9": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта": {
      "main": [
        [
          {
            "node": "команды",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Разделение reply-кнопок или иного ввода",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "водитель/наёмник3": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "считаем по дням кол-во рейсов и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "считаем часы и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "сортируем все данные, считаем итоги, преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "выводим недельную статистику",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "соединяем рейсы и работы": {
      "main": [
        [
          {
            "node": "сортируем все данные, считаем итоги, преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение работ в карьере4": {
      "main": [
        [
          {
            "node": "считаем часы и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл3": {
      "main": [
        [
          {
            "node": "считаем по дням кол-во рейсов и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Получение работ в карьере4",
            "type": "main",
            "index": 0
          },
          {
            "node": "рейсы для статы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделение reply-кнопок или иного ввода": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим авто по водителю",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса авторизации",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник1": {
      "main": [
        [
          {
            "node": "/start",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "/start1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "команды": {
      "main": [
        [
          {
            "node": "получаем роль",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем роль": {
      "main": [
        [
          {
            "node": "водитель/наёмник1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "число меньше 100": {
      "main": [
        [
          {
            "node": "записываем объём материала",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём не может быть >100",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объём не может быть >100": {
      "main": [
        [
          {
            "node": "сохраняем текст сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объём введён неверно": {
      "main": [
        [
          {
            "node": "сохраняем текст сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем кнопку назад и оставляем м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку назад и оставляем тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день, работа первой": {
      "main": [
        [
          {
            "node": "айди последнего сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение машины из графика": {
      "main": [
        [
          {
            "node": "Проверка есть ли водитель в графике",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем документы": {
      "main": [
        [
          {
            "node": "есть ли документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы": {
      "main": [
        [
          {
            "node": "получим все неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности1": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем пройденные ТО и остальные заявки": {
      "main": [
        [
          {
            "node": "убираем пустые списки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы1": {
      "main": [
        [
          {
            "node": "получим все пройденные ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все пройденные ТО": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть авто?": {
      "main": [
        [
          {
            "node": "привязан авто?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник2": {
      "main": [
        [
          {
            "node": "водитель/наёмник3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "получение рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение рейсов": {
      "main": [
        [
          {
            "node": "рейсы в перевозке1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы в перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке1": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "находим рейсы по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине": {
      "main": [
        [
          {
            "node": "проверка выполняющихся рейсов или работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка выполняющихся рейсов или работы в карьере": {
      "main": [
        [
          {
            "node": "в одно сообщение1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "в одно сообщение2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "работы по авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "рейсы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в карьере": {
      "main": [
        [
          {
            "node": "есть рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим авто по водителю": {
      "main": [
        [
          {
            "node": "если авто не привязан",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки": {
      "main": [
        [
          {
            "node": "есть ли неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки": {
      "main": [
        [
          {
            "node": "получим все заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки1": {
      "main": [
        [
          {
            "node": "получим все заявки \"В работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки \"В работе\"": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Проверка есть ли такие заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля": {
      "main": [
        [
          {
            "node": "проверка привязки к автомобилю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение инф. о водителе": {
      "main": [
        [
          {
            "node": "поиск механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса авторизации": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "форматируем номер",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем данные автомобиля",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус1": {
      "main": [
        [
          {
            "node": "номер автомобиля",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер автомобиля": {
      "main": [
        [
          {
            "node": "сохраняем карьер часы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов1": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск диспетчера": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков2": {
      "main": [
        [
          {
            "node": "механики и логисты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов3": {
      "main": [
        [
          {
            "node": "механики и логисты",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "механики и логисты": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника1": {
      "main": [
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "диспетчер3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер3": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля2": {
      "main": [
        [
          {
            "node": "создание заявки для работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто1": {
      "main": [
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "выполняющиеся",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов2": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер1": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст": {
      "main": [
        [
          {
            "node": "диспетчер2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер2": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работы по авто": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы для статы": {
      "main": [
        [
          {
            "node": "Split Out4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out4": {
      "main": [
        [
          {
            "node": "Получаем рейсы2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем рейсы2": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем литры": {
      "main": [
        [
          {
            "node": "убираем кнопку назад1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-10T15:15:27.025Z",
  "id": "nDVW72mPMIi49eVK",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "prod_driver_reply",
  "nodes": [
    {
      "parameters": {
        "content": "## Создание запроса на обслуживание ",
        "height": 454.79006974581796,
        "width": 1082.1649756719262,
        "color": 6
      },
      "id": "47f6948e-7b06-40ab-bcd9-f85bd884f34a",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2059,
        5116.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a8c84348-84e8-4bec-a1e1-9cd4cf5dc64b",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1895,
        2276.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## После нажатия кнопки \"приступить к работе\"",
        "height": 421.69740650535715,
        "width": 1023.3011191444527,
        "color": 6
      },
      "id": "f2158672-736e-429e-9741-5ac502d4b4e0",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1140,
        1776.0968769440176
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "number_car",
              "value": "={{ $json.number }}"
            }
          ]
        }
      },
      "id": "ddf6fce1-db60-46da-b2cb-997fe90e72eb",
      "name": "Ищем автомобиль по номеру",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1555,
        3576.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2d8d7e2a-65cb-4b38-aa15-f440b4307d9f",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1775,
        3576.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Ввод номера автомобиля",
        "height": 510.0261823387185,
        "width": 1060.8242082088582,
        "color": 6
      },
      "id": "ec13d1af-37b2-45be-94cc-21d292063dab",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1315,
        3316.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Изменение водителя в ОДУ\n",
        "height": 258.8309220721088,
        "width": 421.1900237988659,
        "color": 6
      },
      "id": "a495315c-525e-49cc-ad15-f8657632d56b",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2055,
        4656.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a77c816a-1081-489a-9472-c66c0a0b1093",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2075,
        3636.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e1d745bc-4745-4ec3-aa92-1c2f43874e19",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2580,
        3496.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.car_id_while_inputing}}"
            }
          ]
        }
      },
      "id": "10e9428f-075a-4046-8653-80be87906343",
      "name": "получаем данные автомобиля1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        745,
        4436.096876944018
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод одометра",
        "height": 271.1847873311224,
        "width": 511.5414015853248
      },
      "id": "b452d0ee-db8d-4bc7-b57b-e63a2825dbeb",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        635,
        4356.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Ввод данных смены\nэти данные пока никуда не сохраняются",
        "height": 297.5961132589107,
        "width": 906.4857111284805,
        "color": 6
      },
      "id": "001b0c8e-2ad4-4294-8997-8e7fa95f3b91",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        835,
        4816.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "531fafa1-5105-4032-825d-f6c62d23625d",
      "name": "возвращаем статус1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1145,
        4916.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b90db41-fe8e-46f1-8e7e-aead67e43183",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "187764a0-593a-4813-aad3-d4d7ac9f57c5",
      "name": "проверка привязки к автомобилю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2350,
        5377.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ff7b9c71-ee52-472a-9828-b9dfbf52de73",
      "name": "поиск тг айди механиков",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3830,
        5337.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c54976b3-929b-4b15-a992-25252f67b884",
      "name": "проверка наличия механиков",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4050,
        5337.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Отправка механикам\n",
        "height": 476.1450016967405,
        "width": 1329.7955997843726,
        "color": 6
      },
      "id": "ccc1fdc4-073b-407e-b975-2b7f16f15a77",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3595,
        5136.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "31be07cd-2129-4b18-80f0-5c37dfa97653",
      "name": "поиск тг айди логистов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5650,
        5417.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "66bc401e-b4dd-463e-a512-22bd18f6f4f1",
      "name": "проверка наличия логистов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5870,
        5417.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Логисты не найдены",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0324f82d-3747-4002-909a-3f47405b60b6",
      "name": "нет логистов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6090,
        5497.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "ca15ba25-208f-405f-84cd-52214ce0eb9f",
      "name": "преобразуем в 1 переменную",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4470,
        5197.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f4a04b7f-8758-49ca-b7cd-8e933dc9137d",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.only_mech }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "791809aa-b6de-478a-be06-0c6f67a7ddc1",
      "name": "Сообщение только для механика?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5130,
        5337.096876944018
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "62b46d4c-42f8-4016-98d1-d98f2bae568b",
      "name": "преобразуем в 1 переменную1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        6310,
        5277.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Отправка логистам",
        "height": 547.6404091736987,
        "width": 1505.9827533603946,
        "color": 6
      },
      "id": "140c058f-c4ff-434f-8e97-02f6fb10f43d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5295,
        5176.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0abb9479-d939-4325-9326-5ac7c9a540af",
      "name": "если сотрудник уже занял авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        1876.0968769440176
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.driver_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f53bd05b-b4f6-4be1-a2cd-e057a6a0ab9f",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1995,
        3476.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к водителю: <b>{{ $('Ищем автомобиль по номеру').item.json[\"driver_id\"][1] }}</b>. \nВы не можете занять этот автомобиль\n<b>Введите другой номер автомобиля</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "79c3bc14-6099-428a-8e64-d394a6016efa",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2175,
        3356.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы не можете создать заявку, ни один автомобиль не привязан к вам",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9ff8329f-c6d5-4772-8677-3cd049fa4c8f",
      "name": "нельзя создать заявку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2630,
        5377.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно",
        "height": 256.48901597526793,
        "width": 538.9510110344839,
        "color": 6
      },
      "id": "8d7b0fa5-7c50-4b60-a1ec-bba24df92d60",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1775,
        2196.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "486384e1-0886-43a5-ab81-f7c6affb84aa",
      "name": "меняем статус на дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2850,
        5377.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "50234410-7520-4ff2-a146-4c0d6a323f25",
      "name": "меняем статус на дефолтный1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        7115,
        5376.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "97a217a8-be71-49f7-b4f4-2d6fb8e46fba",
      "name": "получаем сегодняшнюю дату",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2752,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $json.currentDate }}",
        "endDate": "={{ $('получаем документы').item.json.expiration_date }}",
        "options": {}
      },
      "id": "e49bc484-e72a-4ad1-90d5-46db9ba2443c",
      "name": "получаем разницу в днях",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3232,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=❗ {{ -$json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} назад истёк срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (был действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4efcda7a-a5d2-4fc8-869c-9392efed8f73",
      "name": "если истекло",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4452,
        4136.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e9831e9-427c-43c6-a1e1-d9248aca50a2",
              "name": "status",
              "value": "=⚠️ Через {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} истекает срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f721dc94-a0d8-42ee-a36a-e91763c360f5",
      "name": "скоро истекает",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4452,
        4296.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $('получаем документы').item.json.expiration_date }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "57789d70-af5c-47e7-b513-a6ad72820635",
      "name": "форматируем в удобный вид",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2972,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "8dad0505-f575-4a16-9b0a-9e8e85af6ed9",
      "name": "объединяем доки и форматированную дату",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3132,
        4296.096876944018
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "1a85ad40-7fdf-4303-9bff-006ce0917bf9",
      "name": "объединяем доки+дата с разницей во времени",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3712,
        4296.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0bd3f1ff-9963-406f-b40f-8c9e47ba7e30",
              "name": "timeDifference",
              "value": "={{ $json.timeDifference.days.round() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "8798f50c-4d80-4862-a01a-21632d690f2c",
      "name": "округляем",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3452,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n    days = abs(item.json.timeDifference)\n    if days % 100 // 10 == 1:\n        item.json.sklonenie = \"дней\"\n    elif days % 10 == 1:\n        item.json.sklonenie = \"день\"\n    elif days % 10 in [2, 3, 4]:\n        item.json.sklonenie = \"дня\"\n    else:\n        item.json.sklonenie = \"дней\"\nreturn _input.all()"
      },
      "id": "17299129-e827-4675-8fb0-92a2bdec65f7",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3932,
        4296.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b226ac9f-94b7-41b3-93d2-ad88173c7799",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует ещё {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} (действителен до {{ $json[\"formattedDate\"] }}) ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f361b06c-1998-4dad-9efc-c2149c2147cf",
      "name": "действует долго",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4452,
        4476.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "e0c8de56-e9ab-4df5-ac6a-90a9595a8668",
      "name": "объединяем в один список",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4660,
        4236.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "44a0d570-ed2b-469f-a418-0ba1ff7f2108",
      "name": "объединяем в один список1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4840,
        4416.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Создание сообщения с датой документов",
        "height": 882.2499632258869,
        "width": 3233.963243636995,
        "color": 6
      },
      "id": "51e85cdd-0094-40d0-ab1b-abd06f09d8ec",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2135,
        4016.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "status",
              "separateBy": "other",
              "customSeparator": "={{ \"\\n\\n\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9354da64-aaa0-47de-b7b1-a3ca240b70ca",
      "name": "соединяем в единое сообщение",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        5220,
        4316.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dd03a5e3-6831-4754-9d0f-c649dc32d482",
              "leftValue": "={{$json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c0f4af8c-7fcc-45e1-9430-2b8928131865",
      "name": "есть ли документы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2550,
        4476.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1156af14-1187-4476-bcfb-82042687aa0b",
              "name": "status",
              "value": "Документы не найдены!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "da3c8168-60b4-4d35-9ac1-f38314bde3aa",
      "name": "документы не найдены",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4890,
        4636.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $json.id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b4a15db-c370-4c88-bfc8-17ffd3a909df",
      "name": "есть ли неисправности1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2130,
        2816.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {
          "timezone": true
        }
      },
      "id": "073a621e-ea12-476a-bdcb-e46a9c613a45",
      "name": "форматируем время в удобный формат1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2410,
        2616.096876944018
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "1dc94dda-3c20-4c4a-b95d-135327eae426",
      "name": "объединяем время и текст1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2650,
        2716.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "988c91e8-36b4-4f3f-9131-b8cf97b1dd63",
              "name": "=date_description",
              "value": "={{ $('объединяем время и текст1').item.json[\"formattedDate\"] }} - <b>{{ $('объединяем время и текст1').item.json[\"description_of_maintenance\"] }}</b>",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "1e876d6a-2d18-48e9-a1b6-5d63b020e9da",
      "name": "Добавляем теги",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2875,
        2716.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "e220a199-cf9b-46e4-b43b-c89008828e73",
      "name": "добавим перевод на новую строку",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3555,
        2496.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "a91df982-1687-4226-97cc-4503aa359c6a",
      "name": "добавим перевод на новую строку1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3635,
        2676.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "aefeb08f-adf2-465e-93a7-b87a3a812e80",
      "name": "добавим перевод на новую строку2",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3635,
        2856.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Можно взять в работу:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f0fd35d5-2956-43f3-afd8-3307ed9d9383",
      "name": "к выполнению2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3775,
        2496.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>В работе:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8751dd58-61b9-4be0-a341-fe0d19a370d1",
      "name": "в работе",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3855,
        2676.096876944018
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Ожидают проверки механиком:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8a1cc6cb-f8c7-47e9-bd37-d23720915f6b",
      "name": "требуется проверка",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3855,
        2856.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "a13297cb-8df6-4bbd-b95e-c84ae9c4c393",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4115,
        2636.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "875b988a-d856-41e5-a251-a03d73efb95a",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4355,
        2696.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "concatenated_date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "3ae6441a-144f-4271-9fd2-6699d9c35486",
      "name": "в один текст объединяем",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4575,
        2696.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Вывод всех заявок",
        "height": 774.298011427,
        "width": 3433.7723550403643,
        "color": 6
      },
      "id": "651ae39b-3718-4753-9714-d03e8fb864d1",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1355,
        2476.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d2976151-29cb-4bb1-8c9a-c68b3e769f61",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2503e92a-6108-499a-bf92-606c23f70f3f",
      "name": "если авто не привязан",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1635,
        2776.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы увидеть заявки, нужно быть привязанным к автомобилю",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "7bc4df58-0897-4379-9e0c-1516a4b06acc",
      "name": "не привязан авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1855,
        2996.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.chat_message_id -1}}",
        "text": "=Ошибка Odoo: {{ $json.error }}\n\nВведите количество часов заново",
        "additionalFields": {}
      },
      "id": "104262d6-06f6-4eb5-a9b7-2157c04cd926",
      "name": "если есть ошибки2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1935,
        6076.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод часов заявки",
        "height": 455.96505135718655,
        "width": 669.8315772631973,
        "color": 6
      },
      "id": "b86d9ae4-001d-418a-94d4-c1ef3aac8726",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1695,
        5776.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3765df7a-35ff-469e-b2b9-92e76010d0ab",
              "name": "oil",
              "value": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "ab4d371c-26c7-4158-ad3b-e35a55e056fe",
      "name": "Преобразование одометра в число",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1215,
        4376.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a4b091e-3f7b-43b9-9a07-1ce686ad3dfd",
              "leftValue": "={{ $('получаем данные автомобиля1').item.json.oil_change_schedule }}",
              "rightValue": "={{ $json.oil }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5255a91f-a9b4-475b-9eb2-8d8874a5541f",
      "name": "Проверка нужна ли замена масла",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1415,
        4296.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, показания вашего одометра говорят о том, что пора заменить масло",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заменил",
                    "additionalFields": {
                      "callback_data": "oil"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bc785d67-e5be-4503-b20f-6a3aedacfcec",
      "name": "Отправка уведомления о том, что требуется замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1595,
        4436.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"<b>До замены масла осталось {{$('получаем данные автомобиля1').item.json.oil_change_schedule - $('Преобразование одометра в число').item.json.oil }} км.</b>\",\n}\n",
        "options": {}
      },
      "id": "d6fb40a9-43b2-4353-8500-31135cf60a2d",
      "name": "инф. о замене масле для меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1615,
        4276.096876944018
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"\",\n}\n",
        "options": {}
      },
      "id": "cb27c38e-2f85-4c25-a270-05e8e110c8d6",
      "name": "инф. о замене масла не нужна в меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1775,
        4436.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "my_field_2"
            }
          ]
        },
        "options": {}
      },
      "id": "09248a82-4808-43d4-a458-01428bfd10d4",
      "name": "преобразуем инф. о масле в единое для меню ТО",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1935,
        4276.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Сравнение текущего показания одометра с регламентом замены масла",
        "height": 316.4822932808388,
        "width": 898.8728138140585
      },
      "id": "70064459-dbd7-4248-b14c-d5a297e4ff6f",
      "name": "Sticky Note39",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1175,
        4236.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нужно приложить фото исправления?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "22010bb8-7a9a-47b9-8229-2530bf30763a",
      "name": "нужно ли приложить фото?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2015,
        5876.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e3eec774-101e-4e1a-a9b8-247280f8363c",
      "name": "возвращаем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2235,
        5876.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nvar data = $('Execute Workflow Trigger').all()[0].json;\nvar number = data.message.text;\n\nconst cleanedNumber = number.replace(/\\s+/g, '').toUpperCase(); //убираем пробелы и приводим к верхнему регистру\nconst withSpaces = cleanedNumber[0] + ' ' + cleanedNumber.slice(1, 4) + ' ' + cleanedNumber.slice(4); //добавляем пробелы\nreturn {\"number\": withSpaces};"
      },
      "id": "e0045708-b1d8-49e0-bc47-329db7254bc4",
      "name": "форматируем номер",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1375,
        3576.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c72d298-2725-455b-8e85-73a899505532",
              "name": "message",
              "value": "={{ \"Заявка создана в Odoo\\n\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4fc6192d-7fdf-47df-a3fb-f11ae5222c82",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2855,
        5176.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a6d2923-aede-446a-8052-961fdb771cf2",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Сообщение доставлено механикам\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f8ad9cc7-e80b-4bcf-8c78-85f25b243757",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4655,
        5196.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "024d9c8f-dbc9-42c0-a939-d9c930d27923",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Сообщение доставлено логистам\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2907aa20-8d90-4a55-be22-a73cefcc4307",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6555,
        5276.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6ac48f8b-389e-463f-842c-e20e5d3145a7",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Механики не найдены\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "448c3629-6f4a-40a0-886e-e085ea155559",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4575,
        5416.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75b10d33-872d-42eb-8a45-8447b1dee3e7",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Логисты не найдены\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ea3de46a-7d14-494d-942a-ebddfdd6d04e",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6315,
        5496.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "127b0caf-d553-411e-bdf5-58a48a36758b",
      "name": "отправка всего сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6895,
        5376.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "29f8f851-1606-4cac-b82b-2cec8c237333",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Нет груза",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "195edae4-181d-435c-a4bf-0511f0a2eeca",
              "leftValue": "={{ $json.status }}",
              "rightValue": "На ремонте",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ce1142e5-882b-408b-a3fd-deccaf6523ef",
      "name": "статус авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1720,
        1816.0968769440176
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "966826c6-e02a-4a3c-b913-6978d0973ef1",
      "name": "проверка на число",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        535,
        4596.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_auto",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n\"number_car\": {{ '\"' + $('получаем данные автомобиля1').item.json.number_car + '\"' }},\n\"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "ee425743-f816-48b0-86c0-ec6545a34638",
      "name": "изменяем водителя",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2155,
        4756.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/finish_shift",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \n\"quarry_hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}\n}",
        "options": {}
      },
      "id": "d4ad408a-5130-4cdc-9dcc-5a03e1de1470",
      "name": "сохраняем карьер часы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1615,
        4916.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b4e5200-ada3-4be5-a8a8-fb9bda2414fa",
      "name": "проверка на число1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        515,
        4876.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "1af9832a-2a86-4399-922a-99415834129d",
      "name": "часы введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        955,
        5076.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b46621ac-9e80-422a-a5f0-9479ed2bb92e",
      "name": "проверка на число2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -165,
        5396.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Ввод топлива",
        "height": 385.7962170846879,
        "width": 536.8852760490331,
        "color": 6
      },
      "id": "cb9be1cd-94e8-4206-9ef2-fe49a04626bd",
      "name": "Sticky Note57",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        155,
        5396.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Литры введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c10b3766-cc88-4858-8515-825448f4ba19",
      "name": "литры введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        275,
        5596.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "У вас сохранился чек?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "4c81735d-1750-43a3-8612-4a3aad55c6d6",
      "name": "литры введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        235,
        5436.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "fuel_liters": "={{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "2de8c416-8951-4b49-87c1-3ba6d229ecbb",
      "name": "записываем литры",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        455,
        5436.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "281df0a2-e90c-4292-bef5-8c49cd1d0b3a",
      "name": "проверка на число3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -760,
        6056.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Ввод объёма материала",
        "height": 385.7962170846879,
        "width": 1050.6652263488745,
        "color": 6
      },
      "id": "9f612f10-f672-491d-be2e-359f7cc5e49d",
      "name": "Sticky Note62",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        84.07644979595693,
        5856.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Объём введён неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "dcb3f1e0-27f6-4d07-89dd-56a722a5979a",
      "name": "объём введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        120,
        6096.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели объём материала",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d9549451-3d4a-478e-a0ea-809a076c9efd",
      "name": "объём введён",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1000,
        5976.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "К выполнению",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "84c7a41e-05e5-4497-b42a-1e5102906729",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "В работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "dea7aa17-5f44-45d5-a497-9cea75e85820",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Требуется проверка",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "66f4b451-7055-452f-adbb-7969c7d95c56",
      "name": "Разделяем по статусам",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3135,
        2716.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/update_odometer",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \"odometer\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}}",
        "options": {}
      },
      "id": "aa43292e-4b3d-464c-ad4e-7bb84bb777e1",
      "name": "запись одометра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        975,
        4436.096876944018
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## вывод перевозок на день",
        "height": 495.6002744918392,
        "width": 2268.621133488497,
        "color": 6
      },
      "id": "d0b2bddc-0f98-405b-be9b-62274003500f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2474.297154333599,
        1348.0623773800876
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2a5d44f6-7b7d-4402-abdc-f0f1ca00161f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7d724863-38da-42cf-bc40-26f1584b4f69",
      "name": "авто привязан?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        0,
        6676.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cec06a67-26af-458d-adf5-05e1a219a595",
      "name": "айди для отправки сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        660,
        6996.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У водителя {{ $('данные сотрудника').item.json.resource_id[1] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема(автомобиль не указан):  \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "f478c5c2-bbd7-4fa8-b2a4-dfb865ba8fa6",
      "name": "отправка сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        880,
        6996.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "78bd097b-a29e-46b5-af12-68d7d8425a6e",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        840,
        6416.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "72583c3e-6d2f-42c9-b13b-711a33d90306",
      "name": "преобразуем в 1 переменную2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1240,
        6416.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "75ac975e-f819-492c-ac91-6a8c4c4ce68b",
      "name": "поиск тг айди логистов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        840,
        6596.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "82cc76a9-fc22-43d5-99d5-1ab415f60c7a",
      "name": "преобразуем в 1 переменную4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1120,
        6996.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Номер авто не указан!\nСообщение отправлено механикам и логистам/диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "35360738-f98d-4b35-b78e-2d11385ff7f1",
      "name": "сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        6996.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно: автомобиль: просто текст",
        "height": 952.8208880612963,
        "width": 2285.9105554802254,
        "color": 6
      },
      "id": "37da84b1-73b9-47e0-9ced-b33e2f1de4e9",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        240,
        6296.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Если номер авто указан",
        "height": 617.7370004574938,
        "width": 1937.6611321746518,
        "color": 7
      },
      "id": "ebdbd632-549c-4c26-89cf-7116066ac8a0",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        400,
        6349.590656645529
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "886cbace-546d-4258-b5e8-5d4382257989",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1240,
        6596.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "16caf824-7a00-4284-b25b-bc72aa5905eb",
              "name": "message",
              "value": "={{ \"Создана заявка на тех. обслуживание\\nСообщение отправлено механику\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "98540b26-b8d3-41c3-8189-d4481090704c",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1440,
        6416.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено логисту\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a2fd1209-68f0-49e8-976a-f2bf7196464f",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1440,
        6596.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "87a60df5-2c94-48d7-be29-8a21f5dc54b2",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1640,
        6516.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "message",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "35833c17-17c0-4c55-a142-fb5e5e1e1140",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1980,
        6676.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.concatenated_message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "89aa32e4-7399-478a-9726-c949d6bc0036",
      "name": "Сообщение отправлено",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2160,
        6676.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "ded6e0f9-da29-4112-ab6a-03d904861ee2",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2260,
        7076.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>\n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки1').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>\n\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Провести ТО",
                    "additionalFields": {
                      "callback_data": "do_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять в ремонт",
                    "additionalFields": {
                      "callback_data": "take_to_fix"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "93eedbd9-5f75-4b82-a51d-53fbbea3239e",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1060,
        6416.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0442bd0c-939c-4067-a7a5-c274f041e0a1",
      "name": "Отправка проблемы логистам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1060,
        6596.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "4b4ad506-c3e3-4c12-a2c5-dcaf635e381c",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        60,
        7576.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о маршруте логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a4031bd7-53fe-4244-bd3c-1970c8fe24f7",
      "name": "Сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2660,
        7556.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "82907450-b229-40a1-a379-94375a50d124",
      "name": "возвращаем статус4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2980,
        7556.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно (маршрут: только текст)",
        "height": 258.83086086517716,
        "width": 1617.001312107392,
        "color": 6
      },
      "id": "cf05f3c4-c9e7-4efc-b3f9-bebcf12ffa9b",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1160,
        7496.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "aae0dabc-9eef-4cb4-addd-2fd08b4f5733",
      "name": "Aggregate2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1380,
        7816.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Срочно (документы: только текст)",
        "height": 249.85481449883417,
        "width": 1370.1136540203677,
        "color": 6
      },
      "id": "455cd63c-68ba-4f58-a957-9f3f2912329b",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        7760.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "962b86e4-2b0c-4bd6-8cc9-aa96b7496fde",
      "name": "Выводим информацию о перевозке5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3900,
        2196.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "8f097240-e5b7-441a-bf7a-507eb57de074",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2880,
        1996.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6064169d-edba-4ad6-a777-4c3a5f239162",
      "name": "Выводим информацию о перевозке4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4380,
        1964.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод текущей перевозки",
        "height": 432.36801840109257,
        "width": 1150.356787433489,
        "color": 6
      },
      "id": "46e23c8e-d54a-42d6-93f7-1b015066d8b1",
      "name": "Sticky Note49",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2520,
        1916.0968769440176
      ]
    },
    {
      "parameters": {
        "content": "## рейс выполняется",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "84382bdc-3866-4f24-bae4-88a65ac2b208",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3880,
        1896.0968769440176
      ]
    },
    {
      "parameters": {
        "content": "## рейс назначен",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "109e4f49-498a-4bbc-934e-0157b531794e",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3660,
        2156.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "99b545ff-eda3-493a-a952-d3ade0088821",
      "name": "создание заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2620,
        5176.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "name": "description",
              "value": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
            },
            {
              "name": "employee_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "name": "urgently",
              "value": "={{ true }}"
            },
            {
              "name": "hours",
              "value": "={{ 1 }}"
            },
            {
              "name": "tech_maintenance",
              "value": "={{ false }}"
            },
            {
              "name": "cost",
              "value": "={{ 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4edf225e-c7fe-4791-bbaf-e270cf05fdf3",
      "name": "создание заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        440,
        6596.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/end_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.end_request_id }},\n    \"hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }},\n    \"employee_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "26faa46d-0cd2-4620-abcc-d36bc547960f",
      "name": "обновляем заявку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1720,
        5916.096876944018
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b324dadf-b6a2-4b69-ad44-a34be5a0341c",
      "name": "поиск тг айди логистов3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        840,
        6776.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "e9302ea7-777d-432a-833c-40a10234484a",
      "name": "Aggregate3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1240,
        6776.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено диспетчеру\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "26a45250-25f6-4162-bc87-6f917f91fde2",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1440,
        6776.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "a97c07c4-8af3-4348-b20d-f4631fbe041d",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1800,
        6656.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует бессрочно",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e826abe6-c07d-47b4-b1df-85eafb9c95d8",
      "name": "бессрочно",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4440,
        3976.096876944018
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {},
      "id": "ad438790-7e49-4c29-836f-62e361927445",
      "name": "объединяем в один список2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4980,
        4156.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "230d2a2f-75dd-40a3-a8c7-0ba67887863f",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4b4f5707-da51-454a-8255-eed31b04ffc8",
      "name": "Проверка есть ли такие заявки",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5220,
        2696.096876944018
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6763fe12-8f65-4c54-8656-3d78c661863f",
      "name": "Получение даты",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1660,
        1956.0968769440176
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "25225955-cb86-434c-be8e-0b0a19d69a22",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "24b50c1a-f072-4607-bfba-d45fa6d36740",
      "name": "Проверка есть ли водитель в графике",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        1956.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "08bb18b9-0678-4571-89d2-222abf0aa19a",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2160,
        2076.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=По графику ваш автомобиль  \n<b>{{ $json.car[1] }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выбрать",
                    "additionalFields": {
                      "callback_data": "pick_car"
                    }
                  },
                  {
                    "text": "Взять другой",
                    "additionalFields": {
                      "callback_data": "other_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c2995c85-0f24-4ea4-9d95-b8fc186aa458",
      "name": "сообщение ввода автомобиля1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2240,
        1836.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "b8be3356-9640-4893-b3e6-8d2cd418920e",
      "name": "меняем статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2340,
        2136.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Подтвердите правильность автомобиля и номера:\n<b>{{ $json.model }} - {{ $json.number_car }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Подтвердить",
                    "additionalFields": {
                      "callback_data": "correct_number"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести номер авто заново",
                    "additionalFields": {
                      "callback_data": "back_to_input_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "040a4493-0269-4de7-87b5-ba71ebc32242",
      "name": "проверка правильности номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2360,
        3496.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "a0c82a99-b214-4cdc-a18a-812d894554d4",
      "name": "Отправка проблемы диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1060,
        6776.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Отправьте сообщение, фото, видео, запись диктофона или кружок",
        "additionalFields": {}
      },
      "id": "d5b00721-c7ab-43fd-be12-481406c78a4a",
      "name": "убираем кнопку назад3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3100,
        7216.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a3e4014a-60d6-4c9c-8812-f3a5685d624c",
      "name": "поиск тг айди логистов2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        740,
        7590.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6d89e7d0-b6df-4e6c-a888-4f823ed9dd39",
      "name": "айди для отправки сообщения3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1780,
        7556.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "7009fb8a-d7b3-4028-a934-f41068558830",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2060,
        7816.096876944018
      ]
    },
    {
      "parameters": {
        "errorMessage": "driver reply"
      },
      "id": "837b33d7-4787-4ba2-9fe2-6daaa46cff87",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1165,
        2196.096876944018
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "-1002392592613",
        "text": "=У водителя <a href=\"tg://user?id={{ $('Execute Workflow Trigger').item.json.message.chat.id }}\">{{ $('данные сотрудника').all()[0].json.name }}</a>(авто {{ $('номер авто').all()[0].json.number_car }}) проблема на маршруте <b>{{ $('актуальный рейс').all()[0].json.transportation[1].substring(11) }}</b>: <i>{{ $('Execute Workflow Trigger').all()[0].json[\"message\"][\"text\"] }}</i>\n\n{{ $('в один текст').item.json.concatenated_logists != `@<a href=\"tg://user?id=\">Логист</a>` ? $('в один текст').item.json.concatenated_logists : \"\"}}\n{{ $('в один текст1').item.json.concatenated_dispatchers != `@<a href=\"tg://user?id=\">Диспетчер</a>` ?  $('в один текст1').item.json.concatenated_dispatchers : \"\"}}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b5cab1b2-3b2f-4451-b439-bba87e27806f",
      "name": "отправка в чат",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2440,
        7556.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "logists",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "c0165e12-bef7-4579-a37d-14da9bf0224d",
      "name": "в один текст",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1403,
        7559.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "logists",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Логист</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c1d43f95-4783-45b9-a5ee-ad6e91483b1a",
      "name": "айди логистов",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1203,
        7559.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "dispatchers",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Диспетчер</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "94e584d0-6b9c-4ddc-b76f-42522dc8c0a3",
      "name": "айди диспетчера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1980,
        7556.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dispatchers",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "6ec05aeb-093e-4b11-81d5-39203fb931d6",
      "name": "в один текст1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2220,
        7556.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "aa34d759-7ed5-432a-990f-a196eae48734",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "15880b27-1f2e-4a54-b571-8ea846f03c01",
      "name": "привязан авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        256,
        2914.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы написать диспетчеру, нужно пройти утренний осмотр автомобиля",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "217100e3-02f1-4ff7-b6fc-6d5988792efa",
      "name": "нужен авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        496,
        2974.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Введите ваше сообщение диспетчеру",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0bb5c9c9-c8cb-4217-ac6c-291a9be752fe",
      "name": "введите сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        496,
        2814.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "inputing_to_dispatcher"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "5458b587-3f51-4d16-978c-f1f8c7a493c4",
      "name": "статус=ввод сообщения диспетчеру",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        716,
        2814.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Сообщение диспетчеру",
        "height": 315.0421795158151,
        "width": 863.4674878401926,
        "color": 6
      },
      "id": "2a1d6def-4367-4cae-92b2-0be530cda3ec",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        2796.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').all()[0].json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').all()[0].json.mobile_phone }}\">{{ $('данные сотрудника').all()[0].json.mobile_phone }}</a>(авто {{ $('номер авто').all()[0].json[\"number_car\"] }}) на маршруте {{ $('актуальный рейс').all()[0].json.transportation[1].substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').all()[0].json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').all()[0].json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d43463ce-4fed-4a96-9ee0-7c337d26ea23",
      "name": "отправка логистам о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1220,
        7810.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "09bb2933-b596-407e-a1a3-afd69caf1a23",
      "name": "айди для отправки сообщения4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1720,
        7816.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').all()[0].json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').all()[0].json.mobile_phone }}\">{{ $('данные сотрудника').all()[0].json.mobile_phone }}</a>(авто {{ $('номер авто').all()[0].json[\"number_car\"] }}) на маршруте {{ $('актуальный рейс').all()[0].json.transportation[1].substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').all()[0].json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').all()[0].json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "94a7ebea-8fd7-4c6f-b944-f44401013493",
      "name": "отправка диспетчеру о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        7816.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о документах логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "2de6c1f5-e049-4ffd-a04e-18ad6fa5ab0b",
      "name": "Сообщение отправлено2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2260,
        7816.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "af87652d-06cd-41b0-b704-74d397af2291",
      "name": "айди для отправки сообщения5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -60,
        7876.096876944018
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Несрочное сообщение",
        "height": 233.01808081143514,
        "width": 1709.1877305719204,
        "color": 6
      },
      "id": "12e1c439-45b7-4c7d-8c4e-65d6edb82731",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -684.3380515945937,
        7816.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "f1b8b908-17da-45a7-8dd2-913776da8bfb",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        320,
        7876.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили сообщение диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "bef14edd-0112-41f8-8de7-64041afc72cc",
      "name": "Сообщение отправлено3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        520,
        7876.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Введите ваше сообщение диспетчеру",
        "additionalFields": {}
      },
      "id": "ec216980-ffbb-4ca1-b115-f3adfaed9833",
      "name": "убираем кнопку назад4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        720,
        7876.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f9f64d5f-29ff-4de9-85af-75b74803b035",
      "name": "возвращаем статус5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        900,
        7876.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Сообщение от водителя автомобиля {{ $('номер авто1').item.json.number_car }}, {{ $('данные сотрудника1').item.json.name }}, <a href=\"tel:{{ $('данные сотрудника1').item.json.mobile_phone }} \">{{ $('данные сотрудника1').item.json.mobile_phone }}</a>:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ответить на сообщение",
                    "additionalFields": {
                      "callback_data": "=answer_to_not_urgent_{{ $('Execute Workflow Trigger').item.json.message.chat.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0589a6d5-2a00-41b1-94a8-a879081ae56f",
      "name": "сообщение диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        120,
        7876.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.formattedDate }}",
                    "rightValue": "01.01.1970",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4d8ac404-b74b-4df3-8919-0de5596a2e53",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c7b85a8b-0464-40f1-becb-57f1a23f84b7",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 31,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "e595660d-2c06-4f78-89f4-65f68dd866d4",
      "name": "сколько дней до окончания срока",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4152,
        4296.096876944018
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "route",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "cd6ec3dc-180b-43ea-8c12-a7d7e91ea930",
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "02fe287e-c70b-4eff-8818-0e4f3e039c00",
      "name": "маршрут",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        940,
        7590.096876944018
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bf27ad89-be6f-41c1-bfb3-135051efec45",
      "name": "Получение даты1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        5500,
        4316.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6160867c-892e-41f3-8005-31ea66475bd6",
              "leftValue": "={{ $('есть ли неисправности2').item.json.date }}",
              "rightValue": "={{ $('Получение даты1').item.json.currentDate }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fc6aaff6-54a4-4086-89f2-2f8c4210f16c",
      "name": "запланирован ли ремонт/ТО",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6748,
        4176.096876944018
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $json[\"data\"];\n\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return day + '.' + month + '.' + year;\n}\n\nlet combinedMessage = '';\n\nitems.forEach(item => {\n    const formattedDate = formatDate(item[\"date\"]);\n    let message = '';\n    let description = '';\n    if (item[\"description_of_maintenance\"] != false) {\n        description = ' (' + item[\"description_of_maintenance\"] + ')';\n    } else {\n        description = '';\n    }\n\n    if (item[\"tech_maintenance\"]) {\n        message = '<b>🛠У вас запланировано ТО' + description +'</b> на ' + '<b>' + formattedDate + '</b>';\n    } else {\n        message = '<b>🛠У вас запланирован ремонт' + description + '</b> на ' + '<b>' + formattedDate + '</b>';\n    }\n\n    combinedMessage += message + '\\n';\n});\n\nconst finalMessage = '\\n' + combinedMessage.trim() + '\\n';\n\nreturn [{\n    json: {\n        message: finalMessage\n    }\n}];"
      },
      "id": "b1a921c8-e611-4fc5-81b2-da6e33ab2078",
      "name": "текст для запланированного ТО/Ремонта",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7588,
        4336.096876944018
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "da86fce3-46f6-4bc0-b4d6-32d59c827b59",
      "name": "объединяем данные о запланированных работах",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        7140,
        4336.096876944018
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3de9d806-b5bb-464c-b35b-535ff90e94d0",
      "name": "объединяем сообщения",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        8260,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $json[\"data\"] || [];\n\nlet concatenatedData = \"\";\nlet messageData = \"\";\n\ndata.forEach(item => {\n    if (item.result) {\n        concatenatedData = item.result;\n    }\n    if (item.message) {\n        messageData = item.message;\n    }\n});\n\nlet finalMessage = \"\";\n\nif (concatenatedData) {\n    finalMessage += \"\\n\" + concatenatedData + \"\\n\";\n}\n\nif (messageData) {\n    finalMessage += messageData;\n}\n\nreturn [\n    {\n        json: {\n            finalMessage: finalMessage\n        }\n    }\n];"
      },
      "id": "dd3d3d10-268b-44cd-af1a-c9d8aa4882c8",
      "name": "объединение заявок и запланированных в одно сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8480,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').item.json[\"concatenated_status\"] }}\n\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').item.json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').item.json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').item.json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').item.json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "37639144-69e1-4d1a-bea3-fca5faa02cf0",
      "name": "Меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6880,
        4556.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "caee0556-ccf3-4fcf-ab06-2b9f2ec7be63",
      "name": "возвращаем статус6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        8708,
        4536.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $('убираем пустые списки').item.json }}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d6318b90-f467-4bf9-a418-18e810cbeaf4",
      "name": "есть ли неисправности2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6460,
        4316.096876944018
      ]
    },
    {
      "parameters": {
        "content": "## Вывод неисправностей и напоминаний о запланированных ТО/ремонтов перед сменой",
        "height": 702.728777590311,
        "width": 3479.9961837874575,
        "color": 6
      },
      "id": "6d120c90-92af-4b65-bcad-d59ffa4ae313",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5459.1101003847225,
        4036.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {}
      },
      "id": "bf2aa2de-d74e-4436-ae17-7be1fd809f43",
      "name": "форматируем время в удобный формат2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7120,
        4056.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').all()[0].json[\"concatenated_status\"] }}\n{{ $json.finalMessage }}\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').all()[0].json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').all()[0].json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "919549db-71d0-4330-ba0c-eb070d4a83c6",
      "name": "Меню ТО3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        8728,
        4136.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "fc8f5eca-bcef-4f95-9cad-b99003fb9609",
      "name": "объединяем время и текст2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        7340,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90695d8c-3cb9-4dd0-a519-10f98ad471c2",
              "name": "dateAndText",
              "value": "={{ $('объединяем время и текст2').item.json.formattedDate }} - <b>{{ $('объединяем время и текст2').item.json.description_of_maintenance }}</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a7f9eeb2-e07b-4bd7-96e4-990a8fa52278",
      "name": "добавляем теги1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7260,
        3636.096876944018
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dateAndText",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "4cd3e5aa-1428-48e5-bb8d-b3797cb87cb4",
      "name": "добавляем разделитель - новая строка1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        7500,
        3636.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "cd854d52-f48b-43d6-a949-ae6bcd95a991",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2780,
        1516.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "1de02d21-65e4-45d0-9152-caf91c71d6f1",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3060,
        1456.0968769440176
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "93f0f347-96a4-4fd6-8633-45d6db49e9fa",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3260,
        1456.0968769440176
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a57e63e8-1f34-4fac-acc5-8b0f5c7391a5",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3680,
        1516.0968769440176
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    let material =data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_transportation_round0_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_transportation_round0_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "3142b605-749d-4d8b-b5ea-4bedbf66e1b7",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4520,
        1396.0968769440176
      ]
    },
    {
      "parameters": {},
      "id": "c28471a3-57d1-4bb8-81f0-332c9734b199",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4520,
        1536.0968769440176
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "ad389b19-aa6f-4004-b5b6-3757c443ad0c",
      "name": "перевозки+имена1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4280,
        1396.0968769440176
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "transportation_round[0].driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "f474707e-8066-477c-abee-d404b34ef971",
      "name": "склеить имена водителей1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4280,
        1536.0968769440176
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "140b3d17-4f1f-4222-a787-f52f2e8e9ba6",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4760,
        1396.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c2938540-8884-4cb8-99db-0a9bd0366b85",
      "name": "Вывод перевозок на день, работа первой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5040,
        1316.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "47e340eb-b43d-458d-950f-659ebbb7becb",
      "name": "Выводим информацию о перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5040,
        1516.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
            "current_quarry_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a84610cf-4372-4451-b7d8-3b0320e324d0",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1380,
        5236.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод карьер-часов",
        "height": 476.3912289841209,
        "width": 940.444874510144,
        "color": 6
      },
      "id": "e11e0521-d420-4f6d-9271-0bd76096d566",
      "name": "Sticky Note58",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1940,
        5156.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "10157a96-a40c-4709-af50-1d53967dceeb",
      "name": "проверка на число4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1920,
        5256.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d5c41037-fb34-494a-84d1-d05c5737d3d1",
      "name": "часы введены неверно1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1620,
        5436.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы ввели карьер-часы - <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_quarry_hours"
                    }
                  },
                  {
                    "text": "Ввести заново",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ebe35832-4d86-4508-a6cc-1e8d9201674a",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1600,
        5236.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели данные, смена завершена!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3a3a81cb-c7a1-4c90-ba82-83bcb5646413",
      "name": "данные смены введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        925,
        4916.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Произошла ошибка, повторите ввод данных одометра",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b582b615-175e-4214-9895-baeb196a2b37",
      "name": "одометр введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        875,
        4656.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id-1 }}",
        "text": "=Введите количество карьер-часов. Пример: \"8\"",
        "additionalFields": {}
      },
      "id": "70074ed3-64c6-42a2-93e4-fda845414936",
      "name": "Удаление кнопки в вводе часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1160,
        5236.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "8fefc843-de26-4a96-9d64-82ab08881dcc",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1400,
        1976.0968769440176
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "weight_measure": "={{ $('Execute Workflow Trigger').item.json.message.text }} {{ $('Execute Workflow Trigger').item.json.weight_measure}} "
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "6c312a07-f766-476b-bbdc-a0b1c700dd9a",
      "name": "записываем объём материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        140,
        5896.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "13a1e3f7-b6f8-4365-be04-cc3f71c3595f",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2560,
        1976.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "cab99bb5-5dad-42bd-b31b-a3b7bb7d3e7f",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2700,
        2156.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $('Limit').all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "bedaca1b-5d49-41e3-930f-75c2365878e6",
      "name": "в одно сообщение2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3740,
        2216.096876944018
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $('Limit').all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n  \n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "4e6de50b-4b19-494d-8e46-280003168111",
      "name": "в одно сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        1956.0968769440176
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "43f9e861-2b57-45a7-a3af-7ece313fbf72",
      "name": "убираем кнопку назад и оставляем тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        800,
        6076.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "04e8ad3c-c9ca-42ad-a745-45b630ee768e",
      "name": "убираем кнопку назад и оставляем м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        800,
        5876.096876944018
      ],
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "transportation_round[0].driver[1]",
        "options": {}
      },
      "id": "ba65165c-05ad-45a3-8752-7d30e609c273",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        4100,
        1536.0968769440176
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1928431f-3d75-4e84-8976-9b1728b8106e",
      "name": "проверка на число5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        5916.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, введите еще раз",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "e316f753-826c-4be2-80c1-0d3f94bfef5f",
      "name": "часы введены неверно2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        6096.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "c34a5b4d-25a8-4c1f-9ca8-37f7ae0f0304",
      "name": "айди последнего сообщения2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4100,
        2216.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b> водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i> \n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Провести ТО",
                    "additionalFields": {
                      "callback_data": "do_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять в ремонт",
                    "additionalFields": {
                      "callback_data": "take_to_fix"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b05469c2-f34c-4db7-89e5-343d36742685",
      "name": "Отправка проблемы механикам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4270,
        5197.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: {{ $('Execute Workflow Trigger').item.json.message.text }} ",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "50502ef1-fab7-4f75-a68b-b8af59e9f340",
      "name": "Отправка проблемы логистам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6080,
        5276.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы уже авторизованы",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Срочно",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Моя статистика",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заявки по авто",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Мой график",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "4ae336c5-45cc-4807-ad30-864ce49d3faf",
      "name": "/start",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        340,
        1596.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "={{ \"\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "784a95a5-7cf9-4ba6-93de-364b0e4a87cb",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -260,
        7076.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "f1bc054e-4eb9-403d-8225-3a4dc49bd56c",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        8020,
        4236.096876944018
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем данные из предыдущего шага\nconst items = $input.all();\n\n// Переменные для хранения итоговых сообщений\nlet maintenanceText = \"\";\nlet nonMaintenanceText = \"\";\n\n// Флаги для отслеживания, были ли добавлены заголовки\nlet maintenanceHeaderAdded = false;\nlet nonMaintenanceHeaderAdded = false;\n\n// Проходим по каждому элементу из массива заявок\nfor (let item of items) {\n  const formattedDate = item.json.formattedDate;\n  const description = item.json.description_of_maintenance;\n\n  // Проверка для техобслуживания (ТО)\n  if (item.json.tech_maintenance === true && item.json.status === 'Готово') {\n    // Добавляем заголовок только один раз\n    if (!maintenanceHeaderAdded) {\n      maintenanceText += `<b>Пройденные ТО:</b>\\n`;\n      maintenanceHeaderAdded = true;\n    }\n    maintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n  \n  // Проверка для заявок на техобслуживание\n  if (item.json.tech_maintenance === false) {\n    // Добавляем заголовок только один раз\n    if (!nonMaintenanceHeaderAdded) {\n      nonMaintenanceText += `\\n<b>Найдены заявки на техобслуживание:</b>\\n`;\n      nonMaintenanceHeaderAdded = true;\n    }\n    nonMaintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n}\n\n// Формируем финальный текст\nlet finalText = \"\";\n\n// Если есть текст по ТО, добавляем его\nif (maintenanceText) {\n  finalText += maintenanceText;\n}\n\n// Если есть текст по заявкам на техобслуживание, добавляем его\nif (nonMaintenanceText) {\n  finalText += nonMaintenanceText;\n}\n\n// Возвращаем результат\nreturn [\n  {\n    json: {\n      result: finalText.trim() // Возвращаем итоговый текст, убрав лишние пробелы\n    }\n  }\n];\n"
      },
      "id": "41aebf04-4df2-4f48-8286-a21babc1bd00",
      "name": "текст для запланированного ТО/Ремонта1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7608,
        4136.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ae491c28-3b50-427e-b12d-f77d6b4ed1d9",
              "leftValue": "={{ $('объединяем пройденные ТО и остальные заявки').item.json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e0e4f938-bed9-4053-9000-18262d5ce3ab",
      "name": "убираем пустые списки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.1,
      "position": [
        6220,
        4316.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Заявки по авто не найдены",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_TO"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c1277938-cd25-43d2-a3a4-97a5b2a7c7a9",
      "name": "Заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2740,
        3036.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку",
                    "additionalFields": {
                      "callback_data": "finish_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "69426530-b505-456c-980b-29bdda881dd0",
      "name": "Вывод с кнопкой \"завершить заявку\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5480,
        2596.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_TO"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "029c085c-9ee9-44e2-924c-8093b42715c3",
      "name": "Вывод с кнопкой \"назад\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5460,
        2816.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_warn_message",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5f0d2bb4-f1ab-41cf-87ff-a91e750353da",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_to_dispatcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ee7793b8-a9d7-44b9-a746-766fe1cb0d94",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_create_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "d5068d36-8218-402d-a67a-fd5e0695562e",
      "name": "проверка статуса2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -840,
        7556.096876944018
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }},\n    \"urgently\": {{ false }}\n}   ",
        "options": {}
      },
      "id": "71961edb-1ec3-4a26-a1a3-64d2348b7903",
      "name": "создание заявки для работы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -540,
        8268.096876944017
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "Заявка создана! Какое будет ваше дальнейшее действие?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к выполнению заявки",
                    "additionalFields": {
                      "callback_data": "=TR_{{ $json.id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "В меню",
                    "additionalFields": {
                      "callback_data": "list_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "1721d540-a1f1-4850-bcec-d71567de7b73",
      "name": "заявка создана",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -300,
        8268.096876944017
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Напишите <b>текстом</b> описание заявки для работы.",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "0d95df81-6f74-4b42-b87b-3937ce3c5e51",
      "name": "убираем кнопку назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -20,
        8268.096876944017
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Создание заявки для работ по авто",
        "height": 230.0052364677437,
        "width": 935.9344095910992
      },
      "id": "15bfd161-b464-46f5-9160-5ecbfbdb349a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        8216.096876944017
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "96e8bb62-db18-435b-9236-e0676701eaf1",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9a35b9c2-833c-4ad1-820e-524eb3bff88c",
      "name": "есть рейсы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4940,
        2016.0968769440176
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = $('Limit').all()[0].json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "6b977d20-0bee-4b39-ae6b-daecd7236706",
      "name": "преобразуем в сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5120,
        1856.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы выполняете:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "9b67160b-ff23-474b-8bcf-5bed9ce7b5b0",
      "name": "Выводим информацию о перевозке8",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5300,
        1856.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = $('Limit').all()[0].json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    } else {message += `\\nУсловие завершения - в течении смены`}\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "15ad0462-858c-4a47-bc17-cc622816e19c",
      "name": "преобразуем в сообщение2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5120,
        2136.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша следующая перевозка:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d93d4930-eeab-4b2f-b56b-9def8ab69cbf",
      "name": "Выводим информацию о перевозке9",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5300,
        2136.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Рейсы в карьере\nУ рейсов время utc + 0, поэтому их можно сравнивать с $today",
        "height": 385.9376061699952,
        "width": 833.2513752650746,
        "color": 6
      },
      "id": "c33882ed-2e91-4e2c-9495-f4411f5dd4fd",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4680,
        1876.0968769440176
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "9a48b16e-1ef7-4ff0-8725-3c5664daad52",
      "name": "айди последнего сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5480,
        2136.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b87d7233-023f-45ee-9fdf-389baf30e4e3",
      "name": "Проверка старта",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -860,
        1916.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы уже авторизованы",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d3215b51-f287-4243-84cf-d19d3c91d8b0",
      "name": "/start1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        340,
        1756.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "187e5f42-7d03-4cc3-b4e1-bb32c719e265",
      "name": "Нет доступных перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4200,
        1676.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8e909687-9baa-451f-9849-7aa0a6d79704",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "858372a2-23b6-4851-b3a6-71fe2b2c4f97",
      "name": "водитель/наёмник3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3960,
        1756.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "1f00da3a-b691-4ae3-835a-b7fd3b0aa512",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4380,
        1756.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "I2puLLeW53njfVKI",
          "mode": "id"
        },
        "options": {}
      },
      "id": "642408da-c267-4611-b1be-954cf2373535",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -1300,
        7956.096876944018
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "I2puLLeW53njfVKI",
          "mode": "id"
        },
        "options": {}
      },
      "id": "dea8e457-d1c9-475f-8a00-155a3b92f934",
      "name": "Execute Workflow1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        4596.096876944018
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для добавления 10 часов ко времени\nfunction addHoursToTime(timeStr, hours) {\n    const dateObj = new Date(timeStr.replace(\" \", \"T\")); // Преобразуем строку времени в объект Date\n    dateObj.setHours(dateObj.getHours() + hours); // Добавляем 10 часов\n    return dateObj.toISOString().replace(\"T\", \" \").split(\".\")[0]; // Преобразуем обратно в строку и убираем миллисекунды\n}\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Добавляем 10 часов ко времени\n            const adjustedTime = addHoursToTime(time_of_start, 10);\n\n            // Извлекаем только дату из скорректированного времени\n            const date = adjustedTime.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "91a09291-70ac-4c97-8eb4-ce75edf8e1f5",
      "name": "считаем по дням кол-во рейсов и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        556.0968769440176
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, start_time } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            // Добавляем 10 часов к дате\n            const adjustedDate = new Date(start_time);\n            adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        // Добавляем 10 часов к дате\n        const adjustedDate = new Date(start_time);\n        adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "98e7d445-8d53-47ca-ae56-f58720d90fb8",
      "name": "считаем часы и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1320,
        756.0968769440176
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные через items\nconst inputData = items.map(item => item.json);\n\n// Задаем текущую дату для тестирования\nconst today = new Date(); //'2024-10-11T00:00:00'\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60));\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1)); // Учитываем воскресенье как последний день недели\n\n// Функция для обнуления времени в дате\nfunction resetTime(date) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0); // Убираем компоненты времени\n    return newDate;\n}\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    const resetDate = resetTime(date);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === resetDate.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' });\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за месяц\nfunction getMonthlyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    const start = resetTime(startDate);\n    const end = resetTime(endDate);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        if (entryDate >= start && entryDate <= end) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours;\n                totalEarnings += entry.total;\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Определяем начало и конец текущего месяца\nconst startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Последний день месяца\n\n// Получаем отчет за текущий месяц\nconst currentMonthReport = getMonthlyReport(startOfMonth, today);\n\n// Проверка на вывод отчета за прошлый месяц\nlet previousMonthText = '';\nconst firstOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst isInFirstTenDays = today >= firstOfMonth && today < new Date(today.getFullYear(), today.getMonth(), 11, 5, 0, 0);\n\n// Если нужно вывести отчет за прошлый месяц\nif (isInFirstTenDays) {\n    const startOfPreviousMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n    const endOfPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0); // Последний день прошлого месяца\n\n    const previousMonthReport = getMonthlyReport(startOfPreviousMonth, endOfPreviousMonth);\n\n    previousMonthText = `\n📊 <b>Отчет за прошлый месяц</b>\n\n🚚 Количество рейсов: ${previousMonthReport.count}\n🕑 Карьерные часы: ${previousMonthReport.quarry_hours} ч\n💵 Заработок: ${previousMonthReport.total} руб.\\n`;\n}\n\n// Формируем отчет за текущую неделю\nlet textMessage = getCurrentWeekReport();\n\n// Формируем отчет за текущий месяц\nlet currentMonthText = `📊 <b>Отчет за текущий месяц</b>\n\n🚚 Количество рейсов: ${currentMonthReport.count}\n🕑 Карьерные часы: ${currentMonthReport.quarry_hours} ч\n💵 Заработок: ${currentMonthReport.total} руб.\\n`;\n\n// Добавляем месячные отчеты\ntextMessage += currentMonthText;\n\n// Добавляем отчет за прошлый месяц в самом конце, если это необходимо\nif (previousMonthText) {\n    textMessage += previousMonthText;\n}\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "162a5d13-de35-4549-be93-563cada831ec",
      "name": "сортируем все данные, считаем итоги, преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2120,
        636.0968769440176
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.from.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "За месяц",
                    "additionalFields": {
                      "callback_data": "month_stats_reply"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "f7009054-9dc4-4cfc-9fac-2bdf4231f737",
      "name": "выводим недельную статистику",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2400,
        636.0968769440176
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "8f9dcc42-aaf7-43ab-9bc3-1c9bf104da0c",
      "name": "соединяем рейсы и работы",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1820,
        636.0968769440176
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=quarry.work",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "quarry_hours",
            "price_for_driver",
            "create_date",
            "start_time"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $json.odoo_id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершены"
            }
          ]
        }
      },
      "id": "db1fa3cd-5c64-4909-8239-16622015f9f3",
      "name": "Получение работ в карьере4",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        800,
        756.0968769440176
      ],
      "alwaysOutputData": false,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "df89b16a-8461-4f5e-8af3-11e8e71883bc",
      "name": "Объединение рейсов в один файл3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1260,
        496.0968769440176
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "a8ad92cb-df63-4c1a-b0f6-c81d0851cc44",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        540,
        656.0968769440176
      ]
    },
    {
      "parameters": {
        "content": "## Недельная статистика",
        "height": 485.8229350991478,
        "width": 2105.433654111054
      },
      "id": "141b08dd-d70f-4b3a-86b3-84a11243c7fb",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Моя статистика",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "46700892-d6f7-4494-9b30-6e3a9344bc28",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Приступить к работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e9d1379d-cad3-4666-a782-5366de1a5ead",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Срочно",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "41f0fd84-a2a8-4d16-8bd0-ea0e5824d5dc",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Заявки по авто",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0d0a1a6d-fc12-4cdd-9ac1-c419d96eae91",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Связь с диспетчером",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "845a0698-4b3a-4108-a91e-da8e65b76bb3",
      "name": "Разделение reply-кнопок или иного ввода",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -645,
        2316.096876944018
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8e909687-9baa-451f-9849-7aa0a6d79704",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "3bdbd6c2-70e3-486c-9e4a-27dcf5c2eae8",
      "name": "водитель/наёмник1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        180,
        1676.0968769440176
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "f3e7cee8-fe04-4063-8f57-8c7b8ca9067e",
      "name": "команды",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.1,
      "position": [
        -300,
        1716.0968769440176
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d4cd5c75-94eb-41dd-b6fe-379df323cb67",
      "name": "получаем роль",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -60,
        1696.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ea00556e-5e08-4182-9109-71b93bee03b8",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1160,
        1896.0968769440176
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c6b7ef24-8af5-4d1a-985f-65285e6949ca",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\").toNumber() }}",
              "rightValue": 100,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7dbe8945-5c8a-472b-8f93-d1984dc08238",
      "name": "число меньше 100",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -640,
        5796.096876944018
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Объём материала не может быть больше <b>100</b>, повторите попытку",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "fa183bae-1852-48ff-893e-2106556e80cb",
      "name": "объём не может быть >100",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -420,
        5936.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
            "last_message_text": "={{ $json.result.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "851ee20b-d296-4690-9a46-722ee98db495",
      "name": "сохраняем текст сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -220,
        5936.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ed84ad24-98e7-4584-a559-db08c6609a8e",
              "leftValue": "={{ $json.last_message_text }}",
              "rightValue": "Объём материала не может",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            },
            {
              "id": "79d57745-532f-40de-9515-216db50ff0e5",
              "leftValue": "={{ $json.last_message_text }}",
              "rightValue": "Объём введён неверно",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "1d17b2c6-587a-4fa2-af93-3c7dcbd99cb6",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        360,
        5896.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
            "last_message_text": "={{ $json.result.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d4e34749-bd3a-4093-8850-75ae27d08c8b",
      "name": "сохраняем текст сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        320,
        6096.096876944018
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "230cea80-4652-42d7-829c-5af71a745417",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        560,
        5916.096876944018
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "61755549-02ca-49ac-a973-7fc8db5aa146",
      "name": "айди последнего сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5340,
        1436.0968769440176
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "name": "start_date",
              "value": "={{ $today.format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(23, 'hours').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "24b95d53-1a75-4123-8fd2-376e1d016db9",
      "name": "получение машины из графика",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1820,
        2076.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_documents_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "64c60adc-5756-4465-93b7-55534bd0c96a",
      "name": "получаем документы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2220,
        4276.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "name": "start_date",
              "value": "={{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(100, 'years').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "569d5b0a-346d-4f6c-b7e3-71e8f1a461e2",
      "name": "документы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5640,
        4496.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "663be262-40c3-4867-8d97-962ecd8afc9f",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Готово",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "50724e5b-b65b-474b-b214-5f1e89786f7b",
      "name": "получим все неисправности1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        5820,
        4456.096876944018
      ]
    },
    {
      "parameters": {},
      "id": "b54d8091-e842-48af-9ee0-382dd5bd3702",
      "name": "объединяем пройденные ТО и остальные заявки",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6000,
        4316.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "name": "start_date",
              "value": "={{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(100, 'years').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7206b066-e65e-4e8a-9950-db6a71f832f8",
      "name": "документы1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5660,
        4116.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "663be262-40c3-4867-8d97-962ecd8afc9f",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Готово",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "de3dcebb-e03b-4154-90af-a00927d5c1c5",
              "leftValue": "={{ $json.tech_maintenance }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7c02d730-47d0-4a42-a512-795e670a9b2c",
      "name": "получим все пройденные ТО",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        5840,
        4116.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8f11b51c-0252-4142-86fc-20ca7c5119a0",
      "name": "есть авто?",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        40,
        2916.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a1f07203-2f26-40f1-8524-728ba9aa104c",
      "name": "водитель/наёмник2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3520,
        1736.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "rounds",
        "options": {}
      },
      "id": "cffb094a-bb0b-41b7-b9c1-161193308c12",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3840,
        1196.0968769440176
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_round_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "round_id",
              "value": "={{ $json.rounds }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9d044bd4-ed3b-4248-adf7-9214e32e86fa",
      "name": "получение рейсов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4100,
        1076.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7461c3bc-d00a-4c55-abeb-1df6fa8be61f",
              "leftValue": "={{ $json.transportation_round[0].driver[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "1f7d17a3-1371-4099-accc-99a175e9238a",
              "leftValue": "={{ $json.transportation_round[0].driver[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c478c243-6ee8-4582-8aa4-2d7676de2905",
      "name": "рейсы в перевозке1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4380,
        1016.0968769440176
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "e3f68fed-0f19-4da0-881d-0a5199a6c10e",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3240,
        2216.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef6bb9da-6331-4456-b8f9-e12858340f2b",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('ищем автомобиль с таким же сотрудником').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "90d4791e-185c-4fcd-b9c5-292bcbe41221",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3380,
        2216.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "54f660c4-6df7-4b68-b01c-1acf917bf308",
      "name": "находим рейсы по машине",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3520,
        2196.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "transportation_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a00e448b-92a1-498b-afa5-6298c364509c",
      "name": "рейсы в перевозке",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3040,
        2216.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Выполняется",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8f16fd18-1271-49f2-a3b2-81e9f3ef31f4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Назначен",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "60e14a74-a750-4ebb-9d16-42b0d1b2faa9",
                    "leftValue": "={{ $('Limit').item.json.quarry_works }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3f455ab4-6124-4889-8574-757996ec4c14",
      "name": "проверка выполняющихся рейсов или работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3380,
        1956.0968769440176
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "quarry_works",
        "options": {}
      },
      "id": "ab110adf-f705-4c76-a033-08b3faeacf36",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4500,
        2116.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0862f744-72f2-43df-abc6-3e94067e781f",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняются",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "165006a6-8338-4ee8-9167-e7c60b390813",
              "leftValue": "={{ new Date($json.start_time) }}",
              "rightValue": "={{ $today }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ae44e925-7935-4c60-8aee-4bdfa2c24628",
      "name": "рейсы в карьере",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4720,
        2116.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3b52ad60-21af-437a-afe5-acfef978dc42",
      "name": "получим авто по водителю",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1400,
        2776.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e8fddd1-1783-420c-9b6e-c989ef8c94e1",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Готово",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a2e80869-5cf2-4c62-9b0d-4654f4f23423",
      "name": "получим все заявки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2000,
        2636.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "name": "start_date",
              "value": "={{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(100, 'years').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d1cae509-4915-485b-a1e8-f38547c1c3e0",
      "name": "заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1820,
        2636.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "name": "start_date",
              "value": "={{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(100, 'years').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0a5acc6f-5a79-4af4-8b4a-7701cd855a16",
      "name": "заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4720,
        2916.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "c85fab7a-ec9f-46c2-ba6f-fc808eaaabcb",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5180,
        2916.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e8fddd1-1783-420c-9b6e-c989ef8c94e1",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "40255d5b-ab52-4a50-904b-a5d69af4f655",
      "name": "получим все заявки \"В работе\"",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4960,
        2916.096876944018
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "592ebe7a-437b-41df-bcb0-eada5e060ab8",
      "name": "получаем данные автомобиля",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2080,
        5396.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e2da85b5-a868-4a7e-9fc1-9727ebae1200",
      "name": "Получение инф. о водителе",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3280,
        5356.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "2971e2d9-a6f7-450c-817e-c55e680398cd",
      "name": "поиск механиков",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3600,
        5356.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "d9ae67d5-fa79-4590-844d-8f3369dcb170",
      "name": "поиск логистов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5360,
        5456.096876944018
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c328907d-5e2f-4059-b43d-dec7c9a2136a",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "authorized",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ed5a4e82-0574-4022-a4e9-a9e3d492e32f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_car_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "27af43d5-2d5c-4cf3-9fd6-11b9316f9089",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_odometer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c2794bc8-e2a0-40b4-b9a7-bf906ac1f32b",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_data_after_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "886fe962-d8ac-4fe7-bfc6-53735b1d1c2f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b1352144-6e5b-4776-aed7-ef2b3b1af6ea",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "03354b42-0d53-4fdf-8303-664dfa71f703",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_fuel_count",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a7622408-5f09-4a62-aa84-c23ede0d56a4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "119a2411-e4a8-48a4-bece-f74c47e3c9d1",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a189e2ab-0dd0-4d33-be97-f781fbdf2e34",
      "name": "проверка статуса авторизации",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -520,
        4816.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4f59a78c-6622-43e3-bba9-ec0f1987f5eb",
      "name": "номер автомобиля",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1380,
        4916.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b2d87c5c-e4fa-424a-b1fc-4542eb4f235b",
      "name": "номер авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -500,
        7036.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "a13a78a2-5f37-4c23-bd58-249d9346dc35",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        660,
        6416.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "1012a920-47a4-4fa1-a3d1-5e3d9ca4dbac",
      "name": "поиск логистов1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        660,
        6596.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_dispatchers",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "7c22d854-0719-4a15-bd5c-5878f7f9235b",
      "name": "поиск диспетчера",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        660,
        6776.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4dbcb544-6150-413f-b3ec-81d737a58723",
      "name": "данные сотрудника",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -680,
        7216.096876944018
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "fdba4bd3-7f3e-4b51-bf3f-37c61a98acf9",
      "name": "поиск механиков2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        240,
        6896.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "875096e5-80bf-4d5d-96c3-37f89a863896",
      "name": "поиск логистов3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        240,
        7036.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "5f81f775-b00d-425d-bf0f-e1247314f5da",
      "name": "механики и логисты",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        480,
        6996.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4a623576-e56b-45bf-b95f-efafa11f51fd",
      "name": "данные сотрудника1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -660,
        7876.096876944018
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "43ef2b94-93a5-4c7d-a6da-41ba0a9fd8e7",
      "name": "номер авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -480,
        7876.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_dispatchers",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "223f98c3-a8e0-44a4-8590-0fe5ee829e29",
      "name": "диспетчер3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        7876.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "561a2395-e2bb-417c-b097-b8d12417c5e7",
      "name": "получаем данные автомобиля2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -780,
        8276.096876944017
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "63478df1-c2df-4fcb-982c-e01a5208e50f",
      "name": "рейсы по авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -80,
        7356.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "9ffbad5e-0203-4a77-8fed-475c30f163f7",
      "name": "Split Out3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        7336.096876944018
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "62ddc085-f339-4782-840d-37de5939bd00",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d8439609-896a-4709-92f8-501e34631a4a",
      "name": "выполняющиеся",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        360,
        7336.096876944018
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "3061998c-352e-4473-b874-dc20aaf36cfc",
      "name": "поиск логистов2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        380,
        7576.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_dispatchers",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "660ff803-9797-4748-9795-440be8b03f17",
      "name": "диспетчер1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1540,
        7816.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_dispatchers",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "0a50851c-ab57-4a6b-9af1-a99144ff565b",
      "name": "диспетчер2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1580,
        7556.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_quarry_work_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $('ищем автомобиль с таким же сотрудником').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c7f99681-8170-4009-9100-0028b3b5f5c2",
      "name": "работы по авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4280,
        2116.096876944018
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "107d4ece-3f63-4d09-ab3b-6fd1c29e0597",
      "name": "рейсы для статы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        720,
        516.0968769440176
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e8ae4282-14b8-4fba-b58f-4c4829df241c",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f47ecc06-aa3a-433b-a969-7bddc196a899",
      "name": "Получаем рейсы2",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1080,
        496.0968769440176
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "7ba4eab6-13bd-4743-bfa4-e850eb982ee0",
      "name": "Split Out4",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        900,
        496.0968769440176
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.message.message_id - 1}}",
        "text": "Сколько литров вы заправили в автомобиль? Введите число, например: 100",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d8aea2c1-84a9-458a-91a9-2ce1be151641",
      "name": "убираем кнопку назад1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        640,
        5476.096876944018
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100633556,
          "message": {
            "message_id": 26190,
            "from": {
              "id": 700956969,
              "is_bot": false,
              "first_name": "Алексей",
              "username": "Chronos196",
              "language_code": "ru"
            },
            "chat": {
              "id": 700956969,
              "first_name": "Алексей",
              "username": "Chronos196",
              "type": "private"
            },
            "date": 1730365264,
            "text": "Приступить к работе"
          },
          "tg_id": "700956969",
          "odoo_id": 2,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 18,
          "fuel_liters": 40,
          "weight_measure": "20 м3 ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": 1,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 1,
          "end_round_message_id": 26181,
          "last_message_text": "Отлично, рейс активен. \n\nКарьер Ключевое - Торг. порт\nЩебень (Карьер Ключевое)\nОстаток кубометров по текущей перевозке - 90\n\nПо его завершению нажмите на кнопку \"Завершить рейс\"",
          "logist_notifications": false,
          "creating_transportation": null,
          "cookie": "session_id=79266f2c0e575e562fb29ee8040fb9799f9baa5b; Expires=Sat, 25 Oct 2025 06:12:48 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-10T15:16:26.806Z",
  "versionId": "2ebacf00-c9f6-479c-86f9-3292fba40bfa"
}