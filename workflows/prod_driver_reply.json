{
  "active": false,
  "connections": {
    "Ищем автомобиль по номеру": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля": {
      "main": [
        [
          {
            "node": "проверка привязки к автомобилю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля1": {
      "main": [
        [
          {
            "node": "запись одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус1": {
      "main": [
        [
          {
            "node": "номер автомобиля",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка привязки к автомобилю": {
      "main": [
        [
          {
            "node": "создание заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нельзя создать заявку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков": {
      "main": [
        [
          {
            "node": "проверка наличия механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение инф. о водителе": {
      "main": [
        [
          {
            "node": "поиск механиков",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов": {
      "main": [
        [
          {
            "node": "проверка наличия логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия логистов": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет логистов": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение только для механика?": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто": {
      "main": [
        [
          {
            "node": "статус авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение даты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка правильности номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нельзя создать заявку": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем сегодняшнюю дату": {
      "main": [
        [
          {
            "node": "форматируем в удобный вид",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем разницу в днях": {
      "main": [
        [
          {
            "node": "округляем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если истекло": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "скоро истекает": {
      "main": [
        [
          {
            "node": "объединяем в один список",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "форматируем в удобный вид": {
      "main": [
        [
          {
            "node": "получаем разницу в днях",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем доки и форматированную дату": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем доки+дата с разницей во времени": {
      "main": [
        [
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "округляем": {
      "main": [
        [
          {
            "node": "объединяем доки+дата с разницей во времени",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "сколько дней до окончания срока",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "действует долго": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем в один список": {
      "main": [
        [
          {
            "node": "объединяем в один список1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список1": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "соединяем в единое сообщение": {
      "main": [
        [
          {
            "node": "Получение даты1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем документы": {
      "main": [
        [
          {
            "node": "есть ли документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли документы": {
      "main": [
        [
          {
            "node": "получаем сегодняшнюю дату",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем доки и форматированную дату",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "документы не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "документы не найдены": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли неисправности1": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат1",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат1": {
      "main": [
        [
          {
            "node": "объединяем время и текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст1": {
      "main": [
        [
          {
            "node": "Добавляем теги",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки": {
      "main": [
        [
          {
            "node": "есть ли неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Добавляем теги": {
      "main": [
        [
          {
            "node": "Разделяем по статусам",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку": {
      "main": [
        [
          {
            "node": "к выполнению2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку1": {
      "main": [
        [
          {
            "node": "в работе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавим перевод на новую строку2": {
      "main": [
        [
          {
            "node": "требуется проверка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "к выполнению2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в работе": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "требуется проверка": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "в один текст объединяем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст объединяем": {
      "main": [
        [
          {
            "node": "получим все заявки \"В работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим авто по водителю": {
      "main": [
        [
          {
            "node": "если авто не привязан",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если авто не привязан": {
      "main": [
        [
          {
            "node": "получим все заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "не привязан авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Преобразование одометра в число": {
      "main": [
        [
          {
            "node": "Проверка нужна ли замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка нужна ли замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масле для меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка уведомления о том, что требуется замена масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка уведомления о том, что требуется замена масла": {
      "main": [
        [
          {
            "node": "инф. о замене масла не нужна в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масле для меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "инф. о замене масла не нужна в меню ТО": {
      "main": [
        [
          {
            "node": "преобразуем инф. о масле в единое для меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем инф. о масле в единое для меню ТО": {
      "main": [
        [
          {
            "node": "изменяем водителя",
            "type": "main",
            "index": 0
          },
          {
            "node": "получаем документы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?": {
      "main": [
        [
          {
            "node": "возвращаем статус2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем номер": {
      "main": [
        [
          {
            "node": "Ищем автомобиль по номеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Получение инф. о водителе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Сообщение только для механика?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "отправка всего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка всего сообщения": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус авто": {
      "main": [
        [
          {
            "node": "находим машину по odoo id9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число": {
      "main": [
        [
          {
            "node": "получаем данные автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "одометр введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число1": {
      "main": [
        [
          {
            "node": "данные смены введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер автомобиля": {
      "main": [
        [
          {
            "node": "сохраняем карьер часы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число2": {
      "main": [
        [
          {
            "node": "литры введены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "литры введены неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "литры введены": {
      "main": [
        [
          {
            "node": "записываем литры",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число3": {
      "main": [
        [
          {
            "node": "записываем объём материала",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём введён неверно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Нет заявок для отображения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделяем по статусам": {
      "main": [
        [
          {
            "node": "добавим перевод на новую строку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "добавим перевод на новую строку2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запись одометра": {
      "main": [
        [
          {
            "node": "Преобразование одометра в число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто привязан?": {
      "main": [
        [
          {
            "node": "создание заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "механики и логисты",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения": {
      "main": [
        [
          {
            "node": "отправка сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов1": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов1": {
      "main": [
        [
          {
            "node": "Отправка проблемы логистам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка сообщения": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в 1 переменную4": {
      "main": [
        [
          {
            "node": "сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Сообщение отправлено",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам1": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "получим перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим перевозку": {
      "main": [
        [
          {
            "node": "поиск логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено1": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "диспетчер1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id9": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "находим рейсы по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки по рейсам1": {
      "main": [
        [
          {
            "node": "в одно сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки по рейсам": {
      "main": [
        [
          {
            "node": "в одно сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки1": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск логистов1",
            "type": "main",
            "index": 0
          },
          {
            "node": "поиск диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновляем заявку": {
      "main": [
        [
          {
            "node": "нужно ли приложить фото?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов3": {
      "main": [
        [
          {
            "node": "Отправка проблемы диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск диспетчера": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "бессрочно": {
      "main": [
        [
          {
            "node": "объединяем в один список2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем в один список2": {
      "main": [
        [
          {
            "node": "соединяем в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все заявки \"В работе\"": {
      "main": [
        [
          {
            "node": "Проверка есть ли такие заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли такие заявки": {
      "main": [
        [
          {
            "node": "Вывод с кнопкой \"завершить заявку\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод с кнопкой \"назад\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты": {
      "main": [
        [
          {
            "node": "Получение машины из графика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение машины из графика": {
      "main": [
        [
          {
            "node": "Проверка есть ли водитель в графике",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка есть ли водитель в графике": {
      "main": [
        [
          {
            "node": "сообщение ввода автомобиля1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "меняем статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов2": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "механики и логисты": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "возвращаем статус4": {
      "main": [
        [
          {
            "node": "убираем кнопку назад3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов2": {
      "main": [
        [
          {
            "node": "маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер1": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер2": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate4": {
      "main": [
        [
          {
            "node": "Сообщение отправлено2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения3": {
      "main": [
        [
          {
            "node": "айди диспетчера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка в чат": {
      "main": [
        [
          {
            "node": "Сообщение отправлено1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст": {
      "main": [
        [
          {
            "node": "диспетчер2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди логистов": {
      "main": [
        [
          {
            "node": "в один текст",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди диспетчера": {
      "main": [
        [
          {
            "node": "в один текст1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в один текст1": {
      "main": [
        [
          {
            "node": "отправка в чат",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть авто?": {
      "main": [
        [
          {
            "node": "привязан авто?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "привязан авто?": {
      "main": [
        [
          {
            "node": "введите сообщение",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужен авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "введите сообщение": {
      "main": [
        [
          {
            "node": "статус=ввод сообщения диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка логистам о доках": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения4": {
      "main": [
        [
          {
            "node": "отправка диспетчеру о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка диспетчеру о доках": {
      "main": [
        [
          {
            "node": "Aggregate4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено2": {
      "main": [
        [
          {
            "node": "возвращаем статус4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "диспетчер3": {
      "main": [
        [
          {
            "node": "айди для отправки сообщения5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди для отправки сообщения5": {
      "main": [
        [
          {
            "node": "сообщение диспетчеру",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные сотрудника1": {
      "main": [
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "диспетчер3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Сообщение отправлено3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение отправлено3": {
      "main": [
        [
          {
            "node": "убираем кнопку назад4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад4": {
      "main": [
        [
          {
            "node": "возвращаем статус5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка правильности номера": {
      "main": [
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сообщение диспетчеру": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько дней до окончания срока": {
      "main": [
        [
          {
            "node": "бессрочно",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если истекло",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "скоро истекает",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "действует долго",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "маршрут": {
      "main": [
        [
          {
            "node": "айди логистов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отправка логистам о доках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение даты1": {
      "main": [
        [
          {
            "node": "получим все неисправности1",
            "type": "main",
            "index": 0
          },
          {
            "node": "получим все пройденные ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запланирован ли ремонт/ТО": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат2",
            "type": "main",
            "index": 0
          },
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "объединяем данные о запланированных работах",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "объединяем данные о запланированных работах": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем сообщения": {
      "main": [
        [
          {
            "node": "объединение заявок и запланированных в одно сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединение заявок и запланированных в одно сообщение": {
      "main": [
        [
          {
            "node": "Меню ТО3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все неисправности1": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "есть ли неисправности2": {
      "main": [
        [
          {
            "node": "запланирован ли ремонт/ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат2": {
      "main": [
        [
          {
            "node": "объединяем время и текст2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Меню ТО3": {
      "main": [
        [
          {
            "node": "возвращаем статус6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем время и текст2": {
      "main": [
        [
          {
            "node": "текст для запланированного ТО/Ремонта1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "добавляем теги1": {
      "main": [
        [
          {
            "node": "добавляем разделитель - новая строка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "рейсы в перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена1": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке1": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей1": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первой работа или перевозка": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день, работа первой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выводим информацию о перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Удаление кнопки в вводе часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число4": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные смены введены": {
      "main": [
        [
          {
            "node": "возвращаем статус1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          },
          {
            "node": "Проверка старта",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем кнопку назад и оставляем м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопку назад и оставляем тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине": {
      "main": [
        [
          {
            "node": "проверка выполняющихся рейсов или работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок1": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере2": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id": {
      "main": [
        [
          {
            "node": "получение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение2": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в одно сообщение1": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "записываем объём материала": {
      "main": [
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем тонны": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку назад и оставляем м3": {
      "main": [
        [
          {
            "node": "объём введён",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "склеить имена водителей1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка на число5": {
      "main": [
        [
          {
            "node": "обновляем заявку",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "часы введены неверно2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка выполняющихся рейсов или работы в карьере": {
      "main": [
        [
          {
            "node": "находим перевозки по рейсам",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "находим перевозки по рейсам1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейсы не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке5": {
      "main": [
        [
          {
            "node": "айди последнего сообщения2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы механикам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка проблемы логистам": {
      "main": [
        [
          {
            "node": "преобразуем в 1 переменную1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка старта": {
      "main": [
        [
          {
            "node": "команды",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Разделение reply-кнопок или иного ввода",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "авто привязан?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса авторизации": {
      "main": [
        [
          {
            "node": "Неизвестная команда",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "форматируем номер",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем данные автомобиля",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка на число4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "объединяем сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим все пройденные ТО": {
      "main": [
        [
          {
            "node": "объединяем пройденные ТО и остальные заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для запланированного ТО/Ремонта1": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем пустые списки": {
      "main": [
        [
          {
            "node": "есть ли неисправности2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем пройденные ТО и остальные заявки": {
      "main": [
        [
          {
            "node": "убираем пустые списки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "команды": {
      "main": [
        [
          {
            "node": "/start",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим авто по водителю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка статуса2": {
      "main": [
        [
          {
            "node": "данные сотрудника",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные сотрудника1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем данные автомобиля2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем данные автомобиля2": {
      "main": [
        [
          {
            "node": "создание заявки для работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создание заявки для работы": {
      "main": [
        [
          {
            "node": "заявка создана",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка создана": {
      "main": [
        [
          {
            "node": "убираем кнопку назад",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем рейсы": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Получение работ в карьере2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе": {
      "main": [
        [
          {
            "node": "Получаем рейсы",
            "type": "main",
            "index": 0
          },
          {
            "node": "Получение работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в карьере": {
      "main": [
        [
          {
            "node": "есть рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "преобразуем в сообщение2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение1": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение2": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке9": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Разделение reply-кнопок или иного ввода": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получим авто по водителю",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "проверка статуса авторизации",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Получаем рейсы1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Получение работ в карьере3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge7": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем рейсы1": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение работ в карьере3": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл1": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-29T17:44:23.021Z",
  "id": "2xsxknjH8vCtVanM",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "prod_driver_reply",
  "nodes": [
    {
      "parameters": {
        "content": "## Создание запроса на обслуживание ",
        "height": 454.79006974581796,
        "width": 1082.1649756719262,
        "color": 6
      },
      "id": "d265f1df-1545-444e-9697-49a2f2f2acad",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2499,
        6040
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a8bd9b92-5f01-4100-964f-2f78aebda720",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2335,
        3200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## После нажатия кнопки \"приступить к работе\"",
        "height": 421.69740650535715,
        "width": 1023.3011191444527,
        "color": 6
      },
      "id": "abb68793-1691-48b8-82bf-062282e327c5",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        2700
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "number_car",
              "value": "={{ $json.number }}"
            }
          ]
        }
      },
      "id": "2bc7caee-efc2-40f6-a200-f64c8bf54ce4",
      "name": "Ищем автомобиль по номеру",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1995,
        4500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0d977366-0d04-41e0-9d22-ed46435d0c14",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2215,
        4500
      ]
    },
    {
      "parameters": {
        "content": "## Ввод номера автомобиля",
        "height": 510.0261823387185,
        "width": 1060.8242082088582,
        "color": 6
      },
      "id": "f004ba1f-82e4-455f-a936-8901617706c6",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1755,
        4240
      ]
    },
    {
      "parameters": {
        "content": "## Изменение водителя в ОДУ\n",
        "height": 258.8309220721088,
        "width": 421.1900237988659,
        "color": 6
      },
      "id": "3b6fcfcc-c63d-43be-a176-3a5c681bcea9",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2495,
        5580
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b06da34c-29cd-4bd6-a68b-8cc7218f4502",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2515,
        4560
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "a91bfeb6-2ce5-4583-9bbe-0a09880ebaff",
      "name": "получаем данные автомобиля",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2575,
        6300
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль <b>{{ $json.model }} {{ $json.number_car }}</b> найден!\nВведите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести номер авто заново",
                    "additionalFields": {
                      "callback_data": "back_to_input_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "1d794045-6d53-42ad-8b65-352482016b12",
      "name": "ввод одометра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3240,
        4260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a4035ee6-2c8a-421c-a454-164b7ca9413e",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3020,
        4420
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.car_id_while_inputing}}"
            }
          ]
        }
      },
      "id": "b74875c3-07a9-4017-a5cb-13630c1709b4",
      "name": "получаем данные автомобиля1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1185,
        5360
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод одометра",
        "height": 271.1847873311224,
        "width": 511.5414015853248
      },
      "id": "51305008-d956-479d-aa85-fa2853061a47",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1075,
        5280
      ]
    },
    {
      "parameters": {
        "content": "## Ввод данных смены\nэти данные пока никуда не сохраняются",
        "height": 297.5961132589107,
        "width": 906.4857111284805,
        "color": 6
      },
      "id": "52e8acf8-1467-43aa-b112-96109e6fc4dc",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1275,
        5740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1da559cb-1710-4589-8928-2440344a5a4f",
      "name": "возвращаем статус1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1585,
        5840
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b90db41-fe8e-46f1-8e7e-aead67e43183",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "43717576-a6b1-4e43-afa7-01817237496d",
      "name": "проверка привязки к автомобилю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2790,
        6301
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "4c608d67-ffd6-4729-a521-b0fb7073f8f2",
      "name": "поиск механиков",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4075,
        6260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "96895e18-93bc-4526-b3c9-e875b9243449",
      "name": "поиск тг айди механиков",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4270,
        6261
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d156b5f9-03b1-4d00-a89d-b994134c16a5",
      "name": "проверка наличия механиков",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4490,
        6261
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
        "options": {}
      },
      "id": "d2d0b74d-6511-4451-af58-fae42cdae407",
      "name": "Получение инф. о водителе",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        3735,
        6200
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Отправка механикам\n",
        "height": 476.1450016967405,
        "width": 1329.7955997843726,
        "color": 6
      },
      "id": "1b907e17-c86b-4438-8a6e-d942b5e6037e",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4035,
        6060
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Логист"
            }
          ]
        }
      },
      "id": "89ddf498-98b7-4a59-86d9-58894c50a227",
      "name": "поиск логистов",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        5870,
        6341
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "27842cdc-0ae1-4406-b007-65cbb2a5d884",
      "name": "поиск тг айди логистов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        6090,
        6341
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "21aaba87-32ee-4812-b3f3-6c1fa860289e",
      "name": "проверка наличия логистов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6310,
        6341
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Логисты не найдены",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "49525b58-30f4-4111-84dc-8d92bd71ceb2",
      "name": "нет логистов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6530,
        6421
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "a7ba6cc2-9cdb-42b7-9d4c-bf61e74cd281",
      "name": "преобразуем в 1 переменную",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4910,
        6121
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f4a04b7f-8758-49ca-b7cd-8e933dc9137d",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.only_mech }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "86e6f582-c049-46f8-9718-c67d783ff307",
      "name": "Сообщение только для механика?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5570,
        6261
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3e1117c3-42de-4ba8-abc5-1ed59bb276c0",
      "name": "преобразуем в 1 переменную1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        6750,
        6201
      ]
    },
    {
      "parameters": {
        "content": "## Отправка логистам",
        "height": 547.6404091736987,
        "width": 1505.9827533603946,
        "color": 6
      },
      "id": "04e43d32-e99e-464d-b9aa-e08d97fea2c3",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5735,
        6100
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "ba45c502-f381-4a2b-91f3-5c7f15dc6eea",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1680,
        2800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7fdd9938-1cdc-4061-8378-6eb0c6e33dcf",
      "name": "если сотрудник уже занял авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1860,
        2800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.driver_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "613c8dc8-b72d-443c-87a7-4d048f8ad85d",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2435,
        4400
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к водителю: <b>{{ $('Ищем автомобиль по номеру').item.json[\"driver_id\"][1] }}</b>. \nВы не можете занять этот автомобиль\n<b>Введите другой номер автомобиля</b>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c5b17da1-acb5-40ea-9729-e92ea1712d50",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2615,
        4280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы не можете создать заявку, ни один автомобиль не привязан к вам",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b6fa87ff-0f66-44e1-9f3d-a552bbead5b4",
      "name": "нельзя создать заявку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3070,
        6301
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно",
        "height": 256.48901597526793,
        "width": 538.9510110344839,
        "color": 6
      },
      "id": "44d3ca5f-365d-42bb-b974-adbfa9466d32",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2215,
        3120
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Неизвестная команда",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "81c32b24-8026-4ac9-9a8e-41d5c523dfd4",
      "name": "Неизвестная команда",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1315,
        4200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "0001de1d-30f9-4398-98e8-9fe216974b99",
      "name": "меняем статус на дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3290,
        6301
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "29720e2a-eced-4214-a3a7-0c16f4d81c88",
      "name": "меняем статус на дефолтный1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        7555,
        6300
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f6069ecf-b96c-42cd-8de0-637c30f41501",
      "name": "получаем сегодняшнюю дату",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3192,
        5060
      ]
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $json.currentDate }}",
        "endDate": "={{ $('получаем документы').item.json.expiration_date }}",
        "options": {}
      },
      "id": "d0a37027-bb0e-4b89-886f-4c9e7eef36cb",
      "name": "получаем разницу в днях",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3672,
        5060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=❗ {{ -$json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} назад истёк срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (был действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "71d46741-0944-4eb5-a079-ed6870f32618",
      "name": "если истекло",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e9831e9-427c-43c6-a1e1-d9248aca50a2",
              "name": "status",
              "value": "=⚠️ Через {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} истекает срок действия документа <b>{{ $json.type_of_document_id[1] }}</b> (действителен до {{ $json[\"formattedDate\"] }})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a4bfe802-76ff-462c-9605-1cbab7082fba",
      "name": "скоро истекает",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5220
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $('получаем документы').item.json.expiration_date }}",
        "format": "=dd.MM.yyyy",
        "options": {}
      },
      "id": "c79d4db8-dbf6-43ee-8018-ae8951b83859",
      "name": "форматируем в удобный вид",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3412,
        5060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "bc34fc2d-0eff-490b-a290-50992931a99e",
      "name": "объединяем доки и форматированную дату",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3572,
        5220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "e1172f99-9b5a-48c7-810c-9776c653d7bc",
      "name": "объединяем доки+дата с разницей во времени",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4152,
        5220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0bd3f1ff-9963-406f-b40f-8c9e47ba7e30",
              "name": "timeDifference",
              "value": "={{ $json.timeDifference.days.round() }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "6a981ab7-b70f-4399-8075-5c91865e65ec",
      "name": "округляем",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3892,
        5060
      ]
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n    days = abs(item.json.timeDifference)\n    if days % 100 // 10 == 1:\n        item.json.sklonenie = \"дней\"\n    elif days % 10 == 1:\n        item.json.sklonenie = \"день\"\n    elif days % 10 in [2, 3, 4]:\n        item.json.sklonenie = \"дня\"\n    else:\n        item.json.sklonenie = \"дней\"\nreturn _input.all()"
      },
      "id": "68967eb6-9f44-421a-ba9b-71bd6e64638a",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4372,
        5220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b226ac9f-94b7-41b3-93d2-ad88173c7799",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует ещё {{ $json[\"timeDifference\"] }} {{ $json[\"sklonenie\"] }} (действителен до {{ $json[\"formattedDate\"] }}) ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b36ec2b4-6498-4704-adde-256a897a9551",
      "name": "действует долго",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4892,
        5400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "310205b6-6f4e-44f9-aa14-7c5bc69e8787",
      "name": "объединяем в один список",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5100,
        5160
      ]
    },
    {
      "parameters": {},
      "id": "dbbaeccc-a677-4fe0-aa3d-11cd82b6b0bb",
      "name": "объединяем в один список1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5280,
        5340
      ]
    },
    {
      "parameters": {
        "content": "## Создание сообщения с датой документов",
        "height": 882.2499632258869,
        "width": 3233.963243636995,
        "color": 6
      },
      "id": "6ce184a2-7f21-4057-9ce8-34e28aa57501",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2575,
        4940
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "status",
              "separateBy": "other",
              "customSeparator": "={{ \"\\n\\n\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "adcaffee-3851-4730-9232-c42994c6d5a9",
      "name": "соединяем в единое сообщение",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        5660,
        5240
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "documents.documents",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            }
          ]
        }
      },
      "id": "261a7a44-218c-43c1-b58c-f5241580aca0",
      "name": "получаем документы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2680,
        5200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dd03a5e3-6831-4754-9d0f-c649dc32d482",
              "leftValue": "={{$json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "84e77814-2cfd-4c7b-99ab-0a94b607569e",
      "name": "есть ли документы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2990,
        5400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1156af14-1187-4476-bcfb-82042687aa0b",
              "name": "status",
              "value": "Документы не найдены!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "97416904-2e69-4ad2-a363-ff6a8c998657",
      "name": "документы не найдены",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5330,
        5560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $json.id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c04c0bdd-f07a-42cb-8420-14ab0b266333",
      "name": "есть ли неисправности1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2570,
        3740
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {
          "timezone": true
        }
      },
      "id": "6990c70f-7226-4dd2-a30c-9e98d842ecc9",
      "name": "форматируем время в удобный формат1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2850,
        3540
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "e2ebe879-4842-4a3d-9190-a01ed313a42a",
      "name": "объединяем время и текст1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3090,
        3640
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "operator": "notEqual",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "8cac6394-60fd-470e-9912-20ac06d9daa4",
      "name": "получим все заявки",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2350,
        3740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "988c91e8-36b4-4f3f-9131-b8cf97b1dd63",
              "name": "=date_description",
              "value": "={{ $('объединяем время и текст1').item.json[\"formattedDate\"] }} - <b>{{ $('объединяем время и текст1').item.json[\"description_of_maintenance\"] }}</b>",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "311c4661-1883-45fa-b119-ace756d01985",
      "name": "Добавляем теги",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3315,
        3640
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "7e1f8716-e9e9-42f9-b02c-b24a0818b73a",
      "name": "добавим перевод на новую строку",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3995,
        3420
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "46636616-5b35-4239-84e6-38742f5f7dfc",
      "name": "добавим перевод на новую строку1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4075,
        3600
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "593b13cb-0a1d-42f0-bd76-ca6e4a48d628",
      "name": "добавим перевод на новую строку2",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4075,
        3780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Можно взять в работу:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cd495d76-8b57-4e15-b1bd-d9ec37f84638",
      "name": "к выполнению2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4215,
        3420
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>В работе:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f4f0ce86-f787-45b0-893f-dd337cd9f1e2",
      "name": "в работе",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4295,
        3600
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fee6eb4-9862-4619-a904-ede2a98a73ae",
              "name": "concatenated_date_description",
              "value": "=<b>Ожидают проверки механиком:</b>\n\n{{ $json.concatenated_date_description }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fb9ed527-83c8-471f-9d22-b15667ce16d5",
      "name": "требуется проверка",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4295,
        3780
      ]
    },
    {
      "parameters": {},
      "id": "2d1d8c0e-3aa2-4dff-9c86-b41e3ba659c5",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4555,
        3560
      ]
    },
    {
      "parameters": {},
      "id": "04396c2b-6490-42ca-af74-4c31d99f69b5",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4795,
        3620
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "concatenated_date_description",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "8cd15e16-a121-4463-bf03-1f00419ae580",
      "name": "в один текст объединяем",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        5015,
        3620
      ]
    },
    {
      "parameters": {
        "content": "## Вывод всех заявок",
        "height": 774.298011427,
        "width": 3433.7723550403643,
        "color": 6
      },
      "id": "c72346eb-a46e-45d0-864e-692c502000f0",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1795,
        3400
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "610ef236-d70d-4813-abf5-a73edf1fc25b",
      "name": "получим авто по водителю",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1855,
        3700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d2976151-29cb-4bb1-8c9a-c68b3e769f61",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d1c66f6f-3270-42b1-a121-7525e5f4d1d5",
      "name": "если авто не привязан",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2075,
        3700
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы увидеть заявки, нужно быть привязанным к автомобилю",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "b0f07f95-448c-48a5-9bd9-2ae75e713252",
      "name": "не привязан авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2295,
        3920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.chat_message_id -1}}",
        "text": "=Ошибка Odoo: {{ $json.error }}\n\nВведите количество часов заново",
        "additionalFields": {}
      },
      "id": "e1830ad1-a453-4286-8701-75ad892d7da5",
      "name": "если есть ошибки2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2375,
        7000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод часов заявки",
        "height": 455.96505135718655,
        "width": 669.8315772631973,
        "color": 6
      },
      "id": "58b37ee5-6e3c-4e6c-894d-7f6af6b001f8",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2135,
        6700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3765df7a-35ff-469e-b2b9-92e76010d0ab",
              "name": "oil",
              "value": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "d7656e63-ba0a-495e-8f5c-82c02cdd8ef4",
      "name": "Преобразование одометра в число",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1655,
        5300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a4b091e-3f7b-43b9-9a07-1ce686ad3dfd",
              "leftValue": "={{ $('получаем данные автомобиля1').item.json.oil_change_schedule }}",
              "rightValue": "={{ $json.oil }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b8c0b921-5fad-477a-89bd-cf53071c2ffc",
      "name": "Проверка нужна ли замена масла",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1855,
        5220
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Дорогой водитель, показания вашего одометра говорят о том, что пора заменить масло",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заменил",
                    "additionalFields": {
                      "callback_data": "oil"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "365c8bb3-f18b-434a-9e86-fe7abc9041c2",
      "name": "Отправка уведомления о том, что требуется замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2035,
        5360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"<b>До замены масла осталось {{$('получаем данные автомобиля1').item.json.oil_change_schedule - $('Преобразование одометра в число').item.json.oil }} км.</b>\",\n}\n",
        "options": {}
      },
      "id": "6c2f01df-e73c-48f1-b51a-7a1ff55d1acd",
      "name": "инф. о замене масле для меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2055,
        5200
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"my_field_1\": \"value\",\n  \"my_field_2\": \"\",\n}\n",
        "options": {}
      },
      "id": "9038639b-37b1-42d5-9aff-0eaf000cfe36",
      "name": "инф. о замене масла не нужна в меню ТО",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2215,
        5360
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "my_field_2"
            }
          ]
        },
        "options": {}
      },
      "id": "aef94a39-042e-4d51-b680-43d39b784330",
      "name": "преобразуем инф. о масле в единое для меню ТО",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2375,
        5200
      ]
    },
    {
      "parameters": {
        "content": "## Сравнение текущего показания одометра с регламентом замены масла",
        "height": 316.4822932808388,
        "width": 898.8728138140585
      },
      "id": "e4c89c92-cb20-46da-a839-0d8d1bbe0f88",
      "name": "Sticky Note39",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1615,
        5160
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нужно приложить фото исправления?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "7babf996-fd8e-4c99-bdb7-92086cff9e79",
      "name": "нужно ли приложить фото?",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2455,
        6800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "9959b803-b8db-40c9-a4b0-02218771837a",
      "name": "возвращаем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2675,
        6800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nvar data = $('Execute Workflow Trigger').all()[0].json;\nvar number = data.message.text;\n\nconst cleanedNumber = number.replace(/\\s+/g, '').toUpperCase(); //убираем пробелы и приводим к верхнему регистру\nconst withSpaces = cleanedNumber[0] + ' ' + cleanedNumber.slice(1, 4) + ' ' + cleanedNumber.slice(4); //добавляем пробелы\nreturn {\"number\": withSpaces};"
      },
      "id": "b870d3ef-454e-436c-8359-e43b346eb046",
      "name": "форматируем номер",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1815,
        4500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c72d298-2725-455b-8e85-73a899505532",
              "name": "message",
              "value": "={{ \"Заявка создана в Odoo\\n\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6bf34edd-ebea-43a4-9c30-22b2e88530d3",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3295,
        6100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a6d2923-aede-446a-8052-961fdb771cf2",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Сообщение доставлено механикам\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d7343101-c849-4c61-b694-3e1c17da99d2",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5095,
        6120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "024d9c8f-dbc9-42c0-a939-d9c930d27923",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Сообщение доставлено логистам\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "568a5a8a-e955-4258-9c2f-aa8e6a58a36c",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6995,
        6200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6ac48f8b-389e-463f-842c-e20e5d3145a7",
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.message + \"Механики не найдены\\n\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "77482e88-4d4d-4489-a9b4-030df3d0a10a",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5015,
        6340
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75b10d33-872d-42eb-8a45-8447b1dee3e7",
              "name": "message",
              "value": "={{ $('Сообщение только для механика?').item.json.message + \"Логисты не найдены\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1309b866-792b-4ac7-8535-c5bd3ce1b059",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6755,
        6420
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "53dc7dce-c1ba-48cc-8a42-832d9e49231b",
      "name": "отправка всего сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        7335,
        6300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "29f8f851-1606-4cac-b82b-2cec8c237333",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Нет груза",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "195edae4-181d-435c-a4bf-0511f0a2eeca",
              "leftValue": "={{ $json.status }}",
              "rightValue": "На ремонте",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7c11741b-1f04-480b-8edf-fd6adea9a371",
      "name": "статус авто",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2160,
        2740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "449e1c36-9931-4c8c-8df4-bf31404188f1",
      "name": "проверка на число",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        975,
        5520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_auto",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n\"number_car\": {{ '\"' + $('получаем данные автомобиля1').item.json.number_car + '\"' }},\n\"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "12856db0-d7b2-490f-b002-d555e7f96450",
      "name": "изменяем водителя",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2595,
        5680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/finish_shift",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \n\"quarry_hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}\n}",
        "options": {}
      },
      "id": "2509b4f9-53b4-40f4-942c-134eb70d1f1c",
      "name": "сохраняем карьер часы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2055,
        5840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e48069d1-02cf-4727-9ad8-a296ddabafdc",
      "name": "проверка на число1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        955,
        5800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "891e6a28-f421-4f0e-8986-27bed2ad8042",
      "name": "часы введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1395,
        6000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "52aabe97-0773-4e29-8095-c97dea678fd1",
      "name": "номер автомобиля",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1815,
        5840
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0b259d38-7be0-42a3-a0a5-de4c13cdeedf",
      "name": "проверка на число2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        275,
        6320
      ]
    },
    {
      "parameters": {
        "content": "## Ввод топлива",
        "height": 385.7962170846879,
        "width": 536.8852760490331,
        "color": 6
      },
      "id": "05a85fdd-4581-4429-96a6-c680e08b7f75",
      "name": "Sticky Note57",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        595,
        6320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Литры введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "51f49bc8-4d35-4293-b240-b9d517b90713",
      "name": "литры введены неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        715,
        6520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "У вас сохранился чек?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "5260fada-a7db-4770-9e50-50bd30fc0c16",
      "name": "литры введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        675,
        6360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "fuel_liters": "={{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "edad841b-5b34-4552-bb8d-d02dd4c9c2a7",
      "name": "записываем литры",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        895,
        6360
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9162f782-dc2b-4f0d-aa38-ed9286cde276",
      "name": "проверка на число3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        275,
        6780
      ]
    },
    {
      "parameters": {
        "content": "## Ввод объёма материала",
        "height": 385.7962170846879,
        "width": 979.7416761448314,
        "color": 6
      },
      "id": "9fa558bc-7931-476d-90c0-43c6b0c8ad36",
      "name": "Sticky Note62",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        595,
        6780
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Объём введён неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d8b66157-95c0-4b78-b8f4-477d9d91a3f4",
      "name": "объём введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        715,
        6980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели объём материала",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3cca3850-760a-4297-8233-1c923ae07ff3",
      "name": "объём введён",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1400,
        6900
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Нет заявок для отображения",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "814bf1ba-4b4d-4ef3-980b-65ce3021e29c",
      "name": "Нет заявок для отображения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3995,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "7cabd745-dae8-4f5d-8a88-8d00f55af8c6",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3795,
        3880
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "К выполнению",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "84c7a41e-05e5-4497-b42a-1e5102906729",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "В работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "dea7aa17-5f44-45d5-a497-9cea75e85820",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Требуется проверка",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "765b327f-daf0-4c59-87f8-7c9452a7144e",
      "name": "Разделяем по статусам",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3575,
        3640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/update_odometer",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"number_car\": {{ '\"' + $json.number_car + '\"' }}, \"odometer\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }}}",
        "options": {}
      },
      "id": "589ad414-cb8f-4800-8cf7-50a920c239eb",
      "name": "запись одометра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1415,
        5360
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## вывод перевозок на день",
        "height": 495.6002744918392,
        "width": 2268.621133488497,
        "color": 6
      },
      "id": "50742550-eab9-42a1-980f-b98e4dd1ca19",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2914.297154333599,
        2271.96550043607
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $json.odoo_id }}",
        "options": {}
      },
      "id": "2c25eaf2-53c4-4bc5-8921-b841a16331ad",
      "name": "данные сотрудника",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -200,
        8260
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "931906b3-c0a5-4270-8b20-0b446d8069ba",
      "name": "номер авто",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        20,
        8260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2a5d44f6-7b7d-4402-abdc-f0f1ca00161f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "da885881-59ae-49bc-995a-2751fbf61580",
      "name": "авто привязан?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        640,
        7580
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9d0ea043-1ace-476a-a547-7e4bbb41eee8",
      "name": "айди для отправки сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1100,
        7920
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У водителя {{ $('данные сотрудника').item.json.resource_id[1] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема(автомобиль не указан):  \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "733478d9-877a-43fa-ba79-49048236bfa6",
      "name": "отправка сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1320,
        7920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Механик"
            }
          ]
        }
      },
      "id": "6b825555-d954-492f-be4a-75b87cdeccf5",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4017d6f6-c56d-4272-98c6-eed81d1a76f1",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "047e5877-d643-424b-baf9-2286d98b0245",
      "name": "преобразуем в 1 переменную2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7340
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Логист"
            }
          ]
        }
      },
      "id": "95604c53-1cdb-4085-80e6-f943cb912d27",
      "name": "поиск логистов1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "21b1fcba-0421-492d-bf7a-cf29f022a364",
      "name": "поиск тг айди логистов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3f47eac3-fc6e-4c78-84e0-770aa2a43aab",
      "name": "преобразуем в 1 переменную4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1560,
        7920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Номер авто не указан!\nСообщение отправлено механикам и логистам/диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ecf5c622-efc0-4a95-9a30-f171e4d892fb",
      "name": "сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1800,
        7920
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно: автомобиль: просто текст",
        "height": 952.8208880612963,
        "width": 2285.9105554802254,
        "color": 6
      },
      "id": "cc4ec0f3-2975-476c-ab7a-cd7bde545ab7",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        617.0869954435207,
        7220.64235686831
      ]
    },
    {
      "parameters": {
        "content": "## Если номер авто указан",
        "height": 617.7370004574938,
        "width": 1937.6611321746518,
        "color": 7
      },
      "id": "8c076948-ba58-49aa-a2d1-417f177bb43f",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        7273.493779701511
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "981302b3-8b3d-45fd-9534-a69ccea62073",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "16caf824-7a00-4284-b25b-bc72aa5905eb",
              "name": "message",
              "value": "={{ \"Создана заявка на тех. обслуживание\\nСообщение отправлено механику\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "02fcec90-df48-4d0d-82a4-26da77428c33",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено логисту\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cde57dae-c380-4cbe-aa10-132a42815b3c",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7520
      ]
    },
    {
      "parameters": {},
      "id": "0483936c-4a4a-49aa-88a3-e2b59c143b02",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2080,
        7440
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "message",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "e0736676-4a80-455c-90f6-4fec3a56887b",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2420,
        7600
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.concatenated_message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "f9584582-1dad-4b95-ad77-2d26d83fd4d3",
      "name": "Сообщение отправлено",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2600,
        7600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "00e72ce9-028e-46fd-9ed4-acd4188456bf",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2700,
        8000
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>\n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки1').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>\n\n",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "fd6ec0e9-ee47-4cab-9f7b-d518784ed0fa",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "5556b4dd-f977-48d2-ac5c-75f94307403c",
      "name": "Отправка проблемы логистам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "options": {
          "fieldsList": [
            "transportation"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняется"
            }
          ]
        }
      },
      "id": "625008d4-b9de-4999-8017-cac91adad024",
      "name": "рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        280,
        8500
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "10ffa321-c79e-48ac-9e03-450d3ebb52f6",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        500,
        8500
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "get",
        "customResourceId": "={{ $json.transportation[0] }}",
        "options": {}
      },
      "id": "9f5db563-c622-4c25-ac35-b778bbb8de59",
      "name": "получим перевозку",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        720,
        8500
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о маршруте логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ae993e27-290d-487c-a074-24ed528003da",
      "name": "Сообщение отправлено1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3100,
        8480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "69a67e20-8e7f-473f-809d-9fd6567e6973",
      "name": "возвращаем статус4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3420,
        8480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Срочно (маршрут: только текст)",
        "height": 258.83086086517716,
        "width": 1617.001312107392,
        "color": 6
      },
      "id": "286f45ca-6f99-48cd-98eb-24fcda0a79a3",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1620,
        8407.002636411891
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "a26c3990-f48d-452e-b511-2ec40945e78d",
      "name": "Aggregate2",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1820,
        8740
      ]
    },
    {
      "parameters": {
        "content": "## Срочно (документы: только текст)",
        "height": 249.85481449883417,
        "width": 1370.1136540203677,
        "color": 6
      },
      "id": "d2a6b9b2-cb4d-4089-94a1-9882cc6f0541",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1620,
        8684
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "af2524b6-9631-4d26-b22b-4e0913587cd5",
      "name": "находим машину по odoo id9",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2940,
        2440
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "f7270ac6-7c86-4e11-902a-07c2cf6b6a2c",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3940,
        2620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "72f14b22-480a-4050-a7e9-191a10ec0ad0",
      "name": "Выводим информацию о перевозке5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4600,
        3148
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.round",
        "operation": "getAll",
        "limit": 1,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "transportation",
              "value": "={{ $json.id }}"
            }
          ]
        }
      },
      "id": "3a1a7dac-d26f-494b-b68c-238bc5786580",
      "name": "находим рейсы по машине",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        3540,
        2920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "9a400d57-6b0d-40a9-92ea-a00f2d4aa26f",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3320,
        2920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша текущая перевозка:\n\n{{ $json.combinedMessage }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "893f376d-f54d-4a90-bd6b-6ea69ac5b942",
      "name": "Выводим информацию о перевозке4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4600,
        2888
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод текущей перевозки",
        "height": 432.36801840109257,
        "width": 1150.356787433489,
        "color": 6
      },
      "id": "ad901814-e2e0-4cca-b247-e769ed1e356d",
      "name": "Sticky Note49",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2960,
        2840
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.transportation[0] }}"
            }
          ]
        }
      },
      "id": "79209eb3-e485-423c-b968-5a83ccd5b26c",
      "name": "находим перевозки по рейсам1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4160,
        3148
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## рейс выполняется",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "7e5fe7e6-19ac-4b65-ab3a-fd4c16a99198",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4120,
        2828
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "transportation.transportation",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('статус авто').item.json.current_transportation[0] }}"
            }
          ]
        }
      },
      "id": "bc434808-05a9-4597-a29b-fc8ff11dc612",
      "name": "находим перевозки по рейсам",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4160,
        2888
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "content": "## рейс назначен",
        "height": 230.92355020404312,
        "width": 630.9042185664699
      },
      "id": "634db0fd-61cd-4036-b2fa-badcbd2db6b8",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4120,
        3088
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "e2248e76-5851-4b96-a7cf-4b4427c5c499",
      "name": "создание заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3060,
        6100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "a6219bbd-fa7b-47f2-a0aa-7edf62dd7b99",
      "name": "создание заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        880,
        7520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/end_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.end_request_id }},\n    \"hours\": {{ $('Execute Workflow Trigger').item.json.message.text.replace(\",\", \".\") }},\n    \"employee_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "520549da-8a4b-4f81-bb07-50de598adc5d",
      "name": "обновляем заявку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2160,
        6840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1f6fd7fa-3e4c-4404-93b2-e22c9c0c0a43",
      "name": "поиск тг айди логистов3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1280,
        7700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "24d44334-92d2-47b1-9497-9ab0df8c5f53",
      "name": "Aggregate3",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1680,
        7700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bb0655d-024f-47a7-a880-8644ced9b94a",
              "name": "message",
              "value": "={{ \"Сообщение отправлено диспетчеру\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0b1712d2-dd51-44c5-a0f4-03a071047ab1",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1880,
        7700
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "7bd320e9-2bd9-4be2-a1d4-15d3753b3395",
      "name": "поиск диспетчера",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        1100,
        7700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "6e7c991c-6ba0-40bf-820e-923fc42fb79b",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2240,
        7580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cd5ce67-7030-49fa-b1d7-63e5baca1d30",
              "name": "status",
              "value": "=✅ Документ <b>{{ $json.type_of_document_id[1] }}</b> действует бессрочно",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3fff03a6-270c-4e89-98f2-060f82854d6a",
      "name": "бессрочно",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4880,
        4900
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {},
      "id": "15b3e45e-097f-4ddb-8792-317918076a86",
      "name": "объединяем в один список2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5420,
        5080
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('если авто не привязан').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "В работе"
            }
          ]
        }
      },
      "id": "6c73ec7d-d3d9-4505-a74a-83ede8cbf133",
      "name": "получим все заявки \"В работе\"",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        5260,
        3620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "230d2a2f-75dd-40a3-a8c7-0ba67887863f",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "38d95bbd-add9-4c5f-a245-eeb3b850e002",
      "name": "Проверка есть ли такие заявки",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5440,
        3620
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0bbbe487-c0dc-42c1-89ed-b25cb24281a5",
      "name": "Получение даты",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2100,
        2880
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "driver.schedule",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "date",
              "value": "={{ $json.currentDate }}"
            }
          ]
        }
      },
      "id": "a374f124-449e-4010-ad62-41ebde8ec145",
      "name": "Получение машины из графика",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2260,
        2880
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "25225955-cb86-434c-be8e-0b0a19d69a22",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f62b0fc2-74ad-4b7a-b580-1dcaa68a1931",
      "name": "Проверка есть ли водитель в графике",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2420,
        2880
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ccbef0ac-48ef-4b19-91e9-3f4ea8cfd19d",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2560,
        3000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=По графику ваш автомобиль  \n<b>{{ $json.car[1] }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Выбрать",
                    "additionalFields": {
                      "callback_data": "pick_car"
                    }
                  },
                  {
                    "text": "Взять другой",
                    "additionalFields": {
                      "callback_data": "other_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "8854deca-c92d-4b5f-89d8-e91061c58b82",
      "name": "сообщение ввода автомобиля1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2660,
        2880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "398cce1b-fc4a-4e73-a413-e2460d35b751",
      "name": "меняем статус",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2780,
        3060
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Подтвердите правильность автомобиля и номера:\n<b>{{ $json.model }} - {{ $json.number_car }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Подтвердить",
                    "additionalFields": {
                      "callback_data": "correct_number"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ввести номер авто заново",
                    "additionalFields": {
                      "callback_data": "back_to_input_car"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "bffa28d9-2df2-44ad-b2cb-2e3c4b6b0ddd",
      "name": "проверка правильности номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2800,
        4420
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "operator": "in",
              "value": "={{ [\"Логист\"] }}"
            }
          ]
        }
      },
      "id": "3e33613a-b9ab-4190-8211-732dce0afc19",
      "name": "поиск логистов2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        960,
        8514
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_id",
              "operator": "in",
              "value": "={{ [\"Механик\", \"Логист\", \"Диспетчер\"] }}"
            }
          ]
        }
      },
      "id": "5fc1f9d1-248d-49c9-8522-32a42a03714d",
      "name": "механики и логисты",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        880,
        7920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля: <b>{{ $('номер авто').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('данные сотрудника').item.json[\"display_name\"] }}</b> <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a> проблема: \n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d21239f1-4e8b-442a-83aa-f79b5b1c88d6",
      "name": "Отправка проблемы диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1500,
        7700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Отправьте сообщение, фото, видео, запись диктофона или кружок",
        "additionalFields": {}
      },
      "id": "fc1968f3-bc77-4b60-ade8-be7c6c70e9f9",
      "name": "убираем кнопку назад3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3540,
        8140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8df7426f-9944-4496-9a28-cc430dcfce0d",
      "name": "поиск тг айди логистов2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1180,
        8514
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "b90b741d-3db1-4172-9ac9-b4266b267591",
      "name": "диспетчер1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2000,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "5545d804-3fe5-4e64-a80e-79e6d138e265",
      "name": "диспетчер2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        2040,
        8480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c4a3eff1-db8d-4155-bff1-9a3fdb9db54e",
      "name": "айди для отправки сообщения3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2220,
        8480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "82331a6a-3230-4a49-878c-60546b0cb5c9",
      "name": "Aggregate4",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2500,
        8740
      ]
    },
    {
      "parameters": {
        "errorMessage": "driver reply"
      },
      "id": "1202ff87-42b9-4328-a660-31c27c73d764",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -725,
        3120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "-1002392592613",
        "text": "=У водителя <a href=\"tg://user?id={{ $('Execute Workflow Trigger').item.json.message.chat.id }}\">{{ $('данные сотрудника').all()[0].json.name }}</a>(авто {{ $('номер авто').all()[0].json.number_car }}) проблема на маршруте <b>{{ $('получим перевозку').all()[0].json.display_name.substring(11) }}</b>: <i>{{ $('Execute Workflow Trigger').all()[0].json[\"message\"][\"text\"] }}</i>\n\n{{ $('в один текст').item.json.concatenated_logists != `@<a href=\"tg://user?id=\">Логист</a>` ? $('в один текст').item.json.concatenated_logists : \"\"}}\n{{ $('в один текст1').item.json.concatenated_dispatchers != `@<a href=\"tg://user?id=\">Диспетчер</a>` ?  $('в один текст1').item.json.concatenated_dispatchers : \"\"}}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3179ff5c-088f-4517-8842-b57ecffffbe4",
      "name": "отправка в чат",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2880,
        8480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "logists",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "8ca41ac7-fe88-402a-aaa1-b754dab1b915",
      "name": "в один текст",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1843,
        8483
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "logists",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Логист</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "703c3209-8c8d-402f-a9c4-e2bde54b043b",
      "name": "айди логистов",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1643,
        8483
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06957abc-1855-46f6-ba1a-7207cb6c3a81",
              "name": "dispatchers",
              "value": "=@<a href=\"tg://user?id={{ $json.tg_id }}\">Диспетчер</a>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5539aace-b3dc-42ee-8667-7b2d6bf2ffa6",
      "name": "айди диспетчера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2420,
        8480
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dispatchers",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "86dec167-c4af-4635-a852-4e7673e9740c",
      "name": "в один текст1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2660,
        8480
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $json.odoo_id }}"
            }
          ]
        }
      },
      "id": "88ed7c87-5189-4134-8e25-5723a19f02ac",
      "name": "есть авто?",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        476,
        3838
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "aa34d759-7ed5-432a-990f-a196eae48734",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "811efd61-2657-4395-8a6d-10cf7eee19dc",
      "name": "привязан авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        696,
        3838
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Чтобы написать диспетчеру, нужно пройти утренний осмотр автомобиля",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "44216e01-e8eb-42ad-b475-aeca39a9e548",
      "name": "нужен авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        936,
        3898
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Введите ваше сообщение диспетчеру",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "44553b49-5334-44fe-98f6-bd75eee0445c",
      "name": "введите сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        936,
        3738
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "inputing_to_dispatcher"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "70ff1c31-f1b3-4c6d-adb7-36efe816c72d",
      "name": "статус=ввод сообщения диспетчеру",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1156,
        3738
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Сообщение диспетчеру",
        "height": 315.0421795158151,
        "width": 863.4674878401926,
        "color": 6
      },
      "id": "ec77dde4-23b4-46db-8e81-8209a5382696",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        3720
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').item.json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a>(авто {{ $('номер авто').item.json[\"number_car\"] }}) на маршруте {{ $('получим перевозку').all()[0].json.display_name.substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "9b33b4d3-04b8-4f66-9b1c-a6045928004f",
      "name": "отправка логистам о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        8734
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a4de3abc-5947-4435-82da-185264f63c9a",
      "name": "айди для отправки сообщения4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2160,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Проблема с <b>документами</b> у водителя {{ $('данные сотрудника').item.json[\"display_name\"] }} <a href=\"tel:{{ $('данные сотрудника').item.json.mobile_phone }}\">{{ $('данные сотрудника').item.json.mobile_phone }}</a>(авто {{ $('номер авто').item.json[\"number_car\"] }}) на маршруте {{ $('получим перевозку').all()[0].json.display_name.substring(11) }}:\n\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Перейти к диалогу",
                    "additionalFields": {
                      "url": "=tg://user?id={{ $('Execute Workflow Trigger').item.json.tg_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "9fc22128-7851-435c-b3f7-b2b53ca7ca1c",
      "name": "отправка диспетчеру о доках",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2340,
        8740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили информацию о документах логистам и диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0cdeec83-75b3-40f1-b3c6-e46f5001f79e",
      "name": "Сообщение отправлено2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2700,
        8740
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "job_title",
              "value": "Диспетчер"
            }
          ]
        }
      },
      "id": "e3af68b1-cfc1-4b36-b1c0-9c948d527211",
      "name": "диспетчер3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        160,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a37b3a6a-38f7-4a0a-985f-f4f873584f2e",
      "name": "айди для отправки сообщения5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        380,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Несрочное сообщение",
        "height": 233.01808081143514,
        "width": 1709.1877305719204,
        "color": 6
      },
      "id": "f40ef1fc-21dc-4efa-ade7-0c92f21203c1",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -244.3380515945937,
        8740
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "get",
        "customResourceId": "={{ $json.odoo_id }}",
        "options": {}
      },
      "id": "9058e147-e2eb-4236-a8db-0b320b54f4c4",
      "name": "данные сотрудника1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -220,
        8800
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "0489a560-387d-4eb8-b469-b8493aac6631",
      "name": "номер авто1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -40,
        8800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "id": "c439f2f1-95e8-45f6-b833-309442d2034e",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        760,
        8800
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы отправили сообщение диспетчеру",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "d61d160b-2279-4b52-b4e5-c72053c309d1",
      "name": "Сообщение отправлено3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        960,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Введите ваше сообщение диспетчеру",
        "additionalFields": {}
      },
      "id": "df1fac65-a5b2-4d0b-9f3c-16ec5e2f47c4",
      "name": "убираем кнопку назад4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1160,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "dc26d4c5-4df1-40e4-86ac-138bce7bdd95",
      "name": "возвращаем статус5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1340,
        8800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=Сообщение от водителя автомобиля {{ $('номер авто1').item.json.number_car }}, {{ $('данные сотрудника1').item.json.name }}, <a href=\"tel:{{ $('данные сотрудника1').item.json.mobile_phone }} \">{{ $('данные сотрудника1').item.json.mobile_phone }}</a>:\n<i>{{ $('Execute Workflow Trigger').item.json.message.text }}</i>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Ответить на сообщение",
                    "additionalFields": {
                      "callback_data": "=answer_to_not_urgent_{{ $('Execute Workflow Trigger').item.json.message.chat.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "38df4cab-5d0d-4d50-b6aa-9a68bcb1e491",
      "name": "сообщение диспетчеру",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        8800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Нет доступных перевозок/рейсов",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "7497197e-44d9-4351-a69f-cc082fcfe0d6",
      "name": "Рейсы не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3920,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.formattedDate }}",
                    "rightValue": "01.01.1970",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4d8ac404-b74b-4df3-8919-0de5596a2e53",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c7b85a8b-0464-40f1-becb-57f1a23f84b7",
                    "leftValue": "={{ $json.timeDifference }}",
                    "rightValue": 31,
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "7a1d2c57-39f6-455c-864e-f8ff5d4f7f6c",
      "name": "сколько дней до окончания срока",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4592,
        5220
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "route",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "cd6ec3dc-180b-43ea-8c12-a7d7e91ea930",
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "eebda63f-8f6a-4868-9eeb-94a4f6c017b9",
      "name": "маршрут",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1380,
        8514
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c4da0df3-5d9c-4d2c-82fb-1d22ae096f24",
      "name": "Получение даты1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        5940,
        5240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6160867c-892e-41f3-8005-31ea66475bd6",
              "leftValue": "={{ $('есть ли неисправности2').item.json.date }}",
              "rightValue": "={{ $('Получение даты1').item.json.currentDate }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "15f38bf2-6e77-48a1-b982-c386f5844bfe",
      "name": "запланирован ли ремонт/ТО",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7188,
        5100
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $json[\"data\"];\n\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return day + '.' + month + '.' + year;\n}\n\nlet combinedMessage = '';\n\nitems.forEach(item => {\n    const formattedDate = formatDate(item[\"date\"]);\n    let message = '';\n    let description = '';\n    if (item[\"description_of_maintenance\"] != false) {\n        description = ' (' + item[\"description_of_maintenance\"] + ')';\n    } else {\n        description = '';\n    }\n\n    if (item[\"tech_maintenance\"]) {\n        message = '<b>🛠У вас запланировано ТО' + description +'</b> на ' + '<b>' + formattedDate + '</b>';\n    } else {\n        message = '<b>🛠У вас запланирован ремонт' + description + '</b> на ' + '<b>' + formattedDate + '</b>';\n    }\n\n    combinedMessage += message + '\\n';\n});\n\nconst finalMessage = '\\n' + combinedMessage.trim() + '\\n';\n\nreturn [{\n    json: {\n        message: finalMessage\n    }\n}];"
      },
      "id": "d6e9677b-f148-4b19-98a7-3a4d0e04b2f4",
      "name": "текст для запланированного ТО/Ремонта",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8028,
        5260
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "fe619700-bfca-4d25-98b2-4244600b351f",
      "name": "объединяем данные о запланированных работах",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        7580,
        5260
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "d3815bfd-1f3d-406a-b0bc-b44b2fd96f57",
      "name": "объединяем сообщения",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        8700,
        5060
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $json[\"data\"] || [];\n\nlet concatenatedData = \"\";\nlet messageData = \"\";\n\ndata.forEach(item => {\n    if (item.result) {\n        concatenatedData = item.result;\n    }\n    if (item.message) {\n        messageData = item.message;\n    }\n});\n\nlet finalMessage = \"\";\n\nif (concatenatedData) {\n    finalMessage += \"\\n\" + concatenatedData + \"\\n\";\n}\n\nif (messageData) {\n    finalMessage += messageData;\n}\n\nreturn [\n    {\n        json: {\n            finalMessage: finalMessage\n        }\n    }\n];"
      },
      "id": "f7fef827-f66a-45db-bf68-3663906ed115",
      "name": "объединение заявок и запланированных в одно сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8920,
        5060
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').item.json[\"concatenated_status\"] }}\n\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').item.json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').item.json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').item.json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').item.json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "84c189b8-753f-4294-8f0c-5de2c950e48b",
      "name": "Меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        7320,
        5480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c2aba2e0-1ff8-4041-8a5e-8203f3a733d4",
      "name": "возвращаем статус6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        9148,
        5460
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "fieldName": "status",
              "operator": "notEqual",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "2e8462eb-7ecc-41dc-9ce8-3654c2f5ea22",
      "name": "получим все неисправности1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        6180,
        5380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0512750-cabb-473b-a650-4e13eb2f16bb",
              "leftValue": "={{ $('убираем пустые списки').item.json }}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "57554fb4-e300-4c92-930d-1095c92917aa",
      "name": "есть ли неисправности2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6900,
        5240
      ]
    },
    {
      "parameters": {
        "content": "## Вывод неисправностей и напоминаний о запланированных ТО/ремонтов перед сменой",
        "height": 702.728777590311,
        "width": 3479.9961837874575,
        "color": 6
      },
      "id": "ce30d3a9-bfa6-456f-95d6-16d4dd21da5b",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5899.1101003847225,
        4960
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.create_date }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm",
        "options": {}
      },
      "id": "802cd2a3-0a15-4bb6-915b-f01afdf0629e",
      "name": "форматируем время в удобный формат2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7560,
        4980
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>Документы на автомобиль:</b>\n\n{{ $('соединяем в единое сообщение').all()[0].json[\"concatenated_status\"] }}\n{{ $json.finalMessage }}\n<b>Пожалуйста, проведите осмотр авто перед началом работы!</b>\n\nАвтомобиль: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"model\"] }}</b>\nНомер: <b>{{ $('получаем данные автомобиля1').all()[0].json[\"number_car\"] }}</b>\nПробег: <b>{{ $('Execute Workflow Trigger').all()[0].json.message.text }} км</b>\n______________________\n<b> Тех. жидкость в норме❓\n Тормозная система в норме❓\n Ходовая часть в норме❓\n Запаска в норме❓\n</b>\n{{ $('преобразуем инф. о масле в единое для меню ТО').all()[0].json.concatenated_my_field_2 }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "✅Всё в норме.",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "❌Есть неисправности",
                    "additionalFields": {
                      "callback_data": "menu_wrong"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "287fff4a-5499-4e4f-bdd9-f6daf4350783",
      "name": "Меню ТО3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        9168,
        5060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "332465da-005f-4b4f-b308-6bc37dec1418",
      "name": "объединяем время и текст2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        7780,
        5060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90695d8c-3cb9-4dd0-a519-10f98ad471c2",
              "name": "dateAndText",
              "value": "={{ $('объединяем время и текст2').item.json.formattedDate }} - <b>{{ $('объединяем время и текст2').item.json.description_of_maintenance }}</b>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f2de0da8-eff0-4592-be0c-37438c4993c6",
      "name": "добавляем теги1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7700,
        4560
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "dateAndText",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "id": "ad96d7ff-e5fa-4c3d-9f62-4c93df3546a5",
      "name": "добавляем разделитель - новая строка1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        7940,
        4560
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "722015b4-690f-43a4-8c0a-490c0892eb76",
      "name": "Выводим информацию о перевозке6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5180,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "6bda12c4-aa81-4a11-83a9-2ca1bf5bf938",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3220,
        2440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "ed40beef-9310-4044-9646-6443fb5244ab",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3500,
        2380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ad212d55-a9e3-4def-8a3b-d5365fd1d4e6",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        2380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e342a757-7d87-4a1d-8ab1-bca86349e18b",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4120,
        2440
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "57895c69-f5d9-4d5e-8108-5f6fb358a9a1",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4980,
        2320
      ]
    },
    {
      "parameters": {},
      "id": "2c7113b6-888a-41f2-b197-32ebcca800f2",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4980,
        2460
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "c5a1026c-907c-4ee6-a43c-d22bff2bc63d",
      "name": "перевозки+имена1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4740,
        2320
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $json.rounds }}"
            },
            {
              "fieldName": "driver",
              "operator": "notEqual",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "driver",
              "operator": "notEqual",
              "value": "={{ null }}"
            }
          ]
        }
      },
      "id": "285cbf75-021a-45f2-bd73-9aa94fa3da45",
      "name": "рейсы в перевозке1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4340,
        2460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "af019f47-111b-4598-a5ab-19a202940628",
      "name": "склеить имена водителей1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        4740,
        2460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "170b52b6-14dc-4982-9e4f-967a4baf388e",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5220,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "6cb90cdc-a7f8-4364-87c3-34f5e56c4044",
      "name": "Вывод перевозок на день, работа первой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5500,
        2240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "52e30937-0668-4249-a5cf-633108eae51c",
      "name": "Выводим информацию о перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5500,
        2440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.from.id }}",
            "current_quarry_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d71b6fca-3e95-49ad-b7bf-ec0fc41240aa",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -940,
        6160
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод карьер-часов",
        "height": 476.3912289841209,
        "width": 940.444874510144,
        "color": 6
      },
      "id": "277546de-a6e0-4fd7-96be-06647b06adc6",
      "name": "Sticky Note58",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1500,
        6080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:[.,]\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "563c3180-a424-4a7d-a84a-92ff66d5a039",
      "name": "проверка на число4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1480,
        6180
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, повторите попытку",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "4677a3cc-54ca-44d4-9b5f-5ee217a103cd",
      "name": "часы введены неверно1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1180,
        6360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы ввели карьер-часы - <b>{{ $json.message.text }}</b>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_quarry_hours"
                    }
                  },
                  {
                    "text": "Ввести заново",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "0e86c78b-fde1-4907-a23a-ab817e2a5c45",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1160,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы ввели данные, смена завершена!",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "21f42e14-8354-465a-b580-8440b744231c",
      "name": "данные смены введены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1365,
        5840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Произошла ошибка, повторите ввод данных одометра",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "a8f35793-cc4c-4e14-bc24-7d4de9e4c891",
      "name": "одометр введён неверно",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1315,
        5580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id-1 }}",
        "text": "=Введите количество карьер-часов. Пример: \"8\"",
        "additionalFields": {}
      },
      "id": "b1b7dec2-c77e-4b64-a932-85a405a943e5",
      "name": "Удаление кнопки в вводе часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -720,
        6160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "03746b92-6bde-4ced-a78e-0b97bea9f986",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -960,
        2900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "status": "authorized",
            "weight_measure": "={{ $('Execute Workflow Trigger').item.json.message.text }} {{ $('Execute Workflow Trigger').item.json.weight_measure}} "
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "97ab7dab-ffc5-465d-8ce7-00a8f712d49f",
      "name": "записываем объём материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        700,
        6820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "5db8d089-c21c-4fb1-bc80-993554497795",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        880,
        6820
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "b8c0a171-ac97-4daa-931a-e1f0f52ffc3c",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "d12c3bbb-b975-4ece-a87f-cfe1c5779fe8",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3140,
        3080
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "aac8b080-0bc9-4ec8-9ab8-f361bdb4a621",
      "name": "преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6660,
        2728
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "84fbc417-fd17-4625-a5e7-ebc973acd2ba",
      "name": "получение перевозок1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6000,
        2768
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "fdeb81c1-8644-4780-81a6-82f4ae704b0b",
      "name": "Сортировка перевозок и работ в карьере2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6220,
        2728
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "5cbbe94b-09fb-4735-a368-164fb104145a",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        6440,
        2728
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "3c339f67-d9d3-4cce-b8e1-93d738c57f2a",
      "name": "находим машину по odoo id",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        5800,
        2768
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы выполняете:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "e47e5db4-e01c-43aa-885e-528ffa3b84e6",
      "name": "Выводим информацию о перевозке7",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6860,
        2728
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## вывод текущей работы в карьере",
        "height": 229.27416531557694,
        "width": 1247.7741668527976
      },
      "id": "8f5eac66-c4e3-43de-aa31-8e2b2b822aed",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5760,
        2700
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $input.all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "9b367f15-27c2-4de3-8500-9063a8bac1d4",
      "name": "в одно сообщение2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4360,
        3148
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessage = \"\";\n\nfor (const item of $input.all()) {\n  const transportation = item.json;\n  const sender = transportation.sender[1];\n  const partner = transportation.partner[1];\n  const route = transportation.display_name.substring(11);\n  const material = transportation.material[1];\n  const comment = transportation.comment;\n  const endCondition = transportation.end_condition;\n  const requiredCubicMetre = transportation.required_cubic_metre;\n  const required_ton= transportation.required_ton;\n\n  let message = `Отправитель - <b>${sender}</b>\\nПолучатель - <b>${partner}</b>\\nМаршрут - <b>${route}</b>\\nМатериал - <b>${material}</b>`;\n\n  if (comment !== false) {\n    message += `\\nКомментарий - <b>${comment}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным кубометрам\") {\n    message += `\\nОстаток кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n  }\n\n  if (endCondition === \"По перевезенным тоннам\") {\n    message += `\\nТребуемое количество тонн по перевозке - <b>${required_ton}</b>`;\n  }\n\n  message += \"\\n\\n\";\n\n  combinedMessage = message.trim();\n}\n\nreturn [{ json: { combinedMessage: combinedMessage } }];"
      },
      "id": "a905b60a-8f65-477c-8716-231da16f6f7d",
      "name": "в одно сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4360,
        2888
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "aa742e03-17a2-4930-96ff-64af344da15d",
      "name": "убираем кнопку назад и оставляем тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        7000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id - 1}}",
        "text": "Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "6b841ed6-af8d-4d35-b7be-080e7baad803",
      "name": "убираем кнопку назад и оставляем м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1140,
        6800
      ],
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "driver[1]",
        "options": {}
      },
      "id": "a7182bfe-a79e-4cc4-8024-d36c1a157957",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        4560,
        2460
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44403514-747a-47bf-9419-77944fae7bb7",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
              "rightValue": "^\\d+(?:\\d+)?$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3fde6059-3058-40c1-8a1d-9f6dc080f5d0",
      "name": "проверка на число5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1820,
        6840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Часы введены неверно, введите еще раз",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "595c6be5-01c3-41aa-abca-c7e2c3fc0059",
      "name": "часы введены неверно2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        7020
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Выполняется",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "8f16fd18-1271-49f2-a3b2-81e9f3ef31f4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "Назначен",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "60e14a74-a750-4ebb-9d16-42b0d1b2faa9",
                    "leftValue": "={{ $('Limit').item.json.quarry_works }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "9c5ca052-065c-4392-bf4e-84b6ca63cc45",
      "name": "проверка выполняющихся рейсов или работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3760,
        2920
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "34f8a594-6e1b-43c7-ab7b-951cef48bfde",
      "name": "айди последнего сообщения2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4800,
        3240
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b> водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: {{ $('Execute Workflow Trigger').item.json.message.text }} \n\n<a href=\"https://everest.lamart.site/web#id={{ $('создание заявки').item.json.id }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "41bafc84-179a-4720-b66c-414b7abd70cb",
      "name": "Отправка проблемы механикам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4710,
        6121
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "=У автомобиля <b>{{ $('получаем данные автомобиля').item.json[\"number_car\"] }}</b>, водитель: <b>{{ $('Получение инф. о водителе').item.json[\"display_name\"] }}</b> {{ $('Получение инф. о водителе').item.json[\"mobile_phone\"] }},  проблема: {{ $('Execute Workflow Trigger').item.json.message.text }} ",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "af7cbb8d-7ef5-44e8-a616-d9d07341ea99",
      "name": "Отправка проблемы логистам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        6520,
        6200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "0ebd2d8e-6373-4ebc-a0d9-ae23e1bf4e08",
      "name": "Проверка старта",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -425,
        2840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "Вы уже авторизованы",
        "replyMarkup": "replyKeyboard",
        "replyKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Срочно",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Связь с диспетчером",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Моя статистика",
                    "additionalFields": {}
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Заявки по авто",
                    "additionalFields": {}
                  }
                ]
              }
            }
          ]
        },
        "replyKeyboardOptions": {
          "resize_keyboard": true
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9a08a1b5-899b-4587-b8d9-ef7c61cdc3de",
      "name": "/start",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        740,
        2480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').all()[0].json.status.substring(22) }}",
                    "rightValue": "={{ \"\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3d1c52ef-0090-4b88-b998-5930a4bd0a78",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        180,
        8000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c328907d-5e2f-4059-b43d-dec7c9a2136a",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "authorized",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ed5a4e82-0574-4022-a4e9-a9e3d492e32f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_car_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "27af43d5-2d5c-4cf3-9fd6-11b9316f9089",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_odometer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "c2794bc8-e2a0-40b4-b9a7-bf906ac1f32b",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_data_after_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "886fe962-d8ac-4fe7-bfc6-53735b1d1c2f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b1352144-6e5b-4776-aed7-ef2b3b1af6ea",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_request_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "03354b42-0d53-4fdf-8303-664dfa71f703",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_fuel_count",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a7622408-5f09-4a62-aa84-c23ede0d56a4",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "119a2411-e4a8-48a4-bece-f74c47e3c9d1",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "input_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a8048314-1a54-4c74-a6c3-fb4941861ea5",
      "name": "проверка статуса авторизации",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -80,
        5740
      ]
    },
    {
      "parameters": {},
      "id": "491b6013-204f-4c78-b847-4633b2437b33",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        8460,
        5160
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "technical.maintenance",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car_id",
              "value": "={{ $('получаем данные автомобиля1').item.json.id }}"
            },
            {
              "fieldName": "tech_maintenance",
              "value": "={{ true }}"
            },
            {
              "fieldName": "status",
              "value": "Готово"
            }
          ]
        }
      },
      "id": "02989d42-c6f0-44ea-a037-7e17a3c46c5b",
      "name": "получим все пройденные ТО",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        6180,
        5100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем данные из предыдущего шага\nconst items = $input.all();\n\n// Переменные для хранения итоговых сообщений\nlet maintenanceText = \"\";\nlet nonMaintenanceText = \"\";\n\n// Флаги для отслеживания, были ли добавлены заголовки\nlet maintenanceHeaderAdded = false;\nlet nonMaintenanceHeaderAdded = false;\n\n// Проходим по каждому элементу из массива заявок\nfor (let item of items) {\n  const formattedDate = item.json.formattedDate;\n  const description = item.json.description_of_maintenance;\n\n  // Проверка для техобслуживания (ТО)\n  if (item.json.tech_maintenance === true && item.json.status === 'Готово') {\n    // Добавляем заголовок только один раз\n    if (!maintenanceHeaderAdded) {\n      maintenanceText += `<b>Пройденные ТО:</b>\\n`;\n      maintenanceHeaderAdded = true;\n    }\n    maintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n  \n  // Проверка для заявок на техобслуживание\n  if (item.json.tech_maintenance === false) {\n    // Добавляем заголовок только один раз\n    if (!nonMaintenanceHeaderAdded) {\n      nonMaintenanceText += `\\n<b>Найдены заявки на техобслуживание:</b>\\n`;\n      nonMaintenanceHeaderAdded = true;\n    }\n    nonMaintenanceText += `${formattedDate} - <b>${description}</b>\\n`;\n  }\n}\n\n// Формируем финальный текст\nlet finalText = \"\";\n\n// Если есть текст по ТО, добавляем его\nif (maintenanceText) {\n  finalText += maintenanceText;\n}\n\n// Если есть текст по заявкам на техобслуживание, добавляем его\nif (nonMaintenanceText) {\n  finalText += nonMaintenanceText;\n}\n\n// Возвращаем результат\nreturn [\n  {\n    json: {\n      result: finalText.trim() // Возвращаем итоговый текст, убрав лишние пробелы\n    }\n  }\n];\n"
      },
      "id": "238e6542-b31e-4b0f-8fa7-1c6776cbb292",
      "name": "текст для запланированного ТО/Ремонта1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8048,
        5060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ae491c28-3b50-427e-b12d-f77d6b4ed1d9",
              "leftValue": "={{ $('объединяем пройденные ТО и остальные заявки').item.json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a238133-85fc-468e-aa59-4fbab9549acc",
      "name": "убираем пустые списки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.1,
      "position": [
        6660,
        5240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "cd25a3f1-eab7-48a4-aebd-d0cfd2ccce85",
      "name": "объединяем пройденные ТО и остальные заявки",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6440,
        5240
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "6905d00d-a0b5-4be8-8b8e-2ea037510fa8",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/quickly",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "6569f114-fa63-4967-9d77-4c1927b57a41",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/dispatcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "475cdd9e-74f2-4ff7-8910-57f19870e4f7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/statistics",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "9281af0b-9b85-422c-852d-104070bcaa96",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "/service",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "21cc182a-f231-4d69-8f41-e8a8aae02115",
      "name": "команды",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.1,
      "position": [
        160,
        2920
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Заявки по авто не найдены",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_TO"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "8e65bd8f-31a5-4c2e-8e33-ca34999ea98a",
      "name": "Заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3180,
        3960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку",
                    "additionalFields": {
                      "callback_data": "finish_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "3cdb8346-677c-41f1-a50e-fcc428adf3cf",
      "name": "Вывод с кнопкой \"завершить заявку\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5760,
        3520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "={{ $('в один текст объединяем').item.json.concatenated_concatenated_date_description }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Создать заявку",
                    "additionalFields": {
                      "callback_data": "create_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Взять заявку в работу",
                    "additionalFields": {
                      "callback_data": "take_to"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "delete_TO"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "7cf16a8f-4673-4686-a2a6-9e652271ba8b",
      "name": "Вывод с кнопкой \"назад\"",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5740,
        3740
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_warn_message",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5f0d2bb4-f1ab-41cf-87ff-a91e750353da",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_to_dispatcher",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ee7793b8-a9d7-44b9-a746-766fe1cb0d94",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "inputing_create_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "c2ebf020-ec03-4861-be59-de65890dccf7",
      "name": "проверка статуса2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -400,
        8480
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "cars.cars",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "dab94d86-d998-4e13-9e8e-cf1fd6866398",
      "name": "получаем данные автомобиля2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        -340,
        9192
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_maintenance",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }},\n    \"description\": {{ '\"' + $('Execute Workflow Trigger').item.json.message.text + '\"'}},\n    \"hours\": {{ 1 }},\n    \"tech_maintenance\": {{ false }},\n    \"cost\": {{ 1 }},\n    \"employee_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}   ",
        "options": {}
      },
      "id": "435a59e3-5f3c-43ae-ae9c-2589c3be58c8",
      "name": "создание заявки для работы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -100,
        9192
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.chat.id }}",
        "text": "Заявка создана! Какое будет ваше дальнейшее действие?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к выполнению заявки",
                    "additionalFields": {
                      "callback_data": "=TR_{{ $json.id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "В меню",
                    "additionalFields": {
                      "callback_data": "list_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "32d580d5-ae8b-484e-91d1-7b3cd2c0a54e",
      "name": "заявка создана",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        140,
        9192
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.message.message_id -1}}",
        "text": "Напишите <b>текстом</b> описание заявки для работы.",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ff3c2812-f030-467a-8389-8ad1e605617b",
      "name": "убираем кнопку назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        420,
        9192
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Создание заявки для работ по авто",
        "height": 230.0052364677437,
        "width": 935.9344095910992
      },
      "id": "bb6adc7d-5c55-4a9e-a43a-c53d5152516d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        9140
      ]
    },
    {
      "parameters": {
        "content": "## Вывод статистики \nПока данные берутся из Postgres",
        "height": 626.577500188101,
        "width": 3182.3458029008684,
        "color": 6
      },
      "id": "2fef9714-814f-43da-8420-d828952cbe8a",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        380
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            }
          ]
        }
      },
      "id": "a79b25fa-d0bb-4a34-8e4a-1bebcd541c2a",
      "name": "Получаем рейсы",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        800,
        500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "e4268240-a1e3-4a60-b3e3-9dea2c7c2053",
      "name": "Объединение рейсов в один файл",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1160,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, write_date } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: write_date,  // Для вывода используем write_date\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: write_date,  // Для вывода используем write_date\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n\n\n"
      },
      "id": "02e8e405-1b06-4952-988e-0d719d7ff2ea",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Извлекаем только дату из поля time_of_start\n            const date = time_of_start.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "a9d3f6b2-c8a5-4948-a597-101a55982882",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        500
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.from.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "9fd71fe3-2e5b-43d0-a07a-08717d1e326d",
      "name": "Telegram4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2300,
        540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "quarry.work",
        "operation": "getAll",
        "options": {
          "fieldsList": []
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Получение информации о водителе').item.json.resource_id[1] }}"
            }
          ]
        }
      },
      "id": "7af06a9f-1004-46ee-9085-0b6e4923533c",
      "name": "Получение работ в карьере2",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        960,
        840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {},
      "id": "56e4f45f-2f3f-49cb-a3df-3a986646cfc3",
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1840,
        540
      ]
    },
    {
      "parameters": {
        "jsCode": "const inputData = items.map(item => item.json);  // Подключаем данные через items\n\n// Определяем текущую дату\nconst today = new Date();  // Текущая дата\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60)); // UTC +10 Владивосток\n\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + 1); // Понедельник текущей недели\n\n// Определяем начало и конец прошлых недель\nconst previousWeekStart = new Date(startOfWeek);\npreviousWeekStart.setDate(previousWeekStart.getDate() - 7);\nconst twoWeeksAgoStart = new Date(previousWeekStart);\ntwoWeeksAgoStart.setDate(twoWeeksAgoStart.getDate() - 7);\nconst threeWeeksAgoStart = new Date(twoWeeksAgoStart);\nthreeWeeksAgoStart.setDate(threeWeeksAgoStart.getDate() - 7);\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    inputData.forEach(entry => {\n        const entryDate = new Date(entry.date);\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === date.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                // Считаем данные по суммарным данным дня\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            }\n            // Для записей о работах в карьере\n            else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    // Проходим по каждому дню от текущего дня к понедельнику\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toISOString().split('T')[0];\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за неделю\nfunction getWeeklyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    inputData.forEach(entry => {\n        const entryDate = new Date(entry.date);\n\n        if (entryDate >= startDate && entryDate < endDate) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Считаем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Получаем отчеты за прошлые недели\nconst previousWeekReport = getWeeklyReport(previousWeekStart, startOfWeek);\nconst twoWeeksAgoReport = getWeeklyReport(twoWeeksAgoStart, previousWeekStart);\nconst threeWeeksAgoReport = getWeeklyReport(threeWeeksAgoStart, twoWeeksAgoStart);\n\n// Формируем текст отчета для Telegram\nlet textMessage = getCurrentWeekReport();  // Отчет за текущую неделю\n\ntextMessage += '📊 <b>Отчет за прошлые недели месяца</b>\\n\\n';\n\ntextMessage += `📅 <b>Неделя с ${previousWeekStart.toISOString().split('T')[0]} по ${startOfWeek.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${previousWeekReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${previousWeekReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${previousWeekReport.total} руб.\\n\\n`;\n\ntextMessage += `📅 <b>Неделя с ${twoWeeksAgoStart.toISOString().split('T')[0]} по ${previousWeekStart.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${twoWeeksAgoReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${twoWeeksAgoReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${twoWeeksAgoReport.total} руб.\\n\\n`;\n\ntextMessage += `📅 <b>Неделя с ${threeWeeksAgoStart.toISOString().split('T')[0]} по ${twoWeeksAgoStart.toISOString().split('T')[0]}:</b>\\n`;\ntextMessage += `🔹 Количество рейсов: ${threeWeeksAgoReport.count}\\n`;\ntextMessage += `🔹 Карьерные часы: ${threeWeeksAgoReport.quarry_hours} ч\\n`;\ntextMessage += `🔹 Заработок: ${threeWeeksAgoReport.total} руб.\\n\\n`;\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "793a3e99-62a9-4080-a7f4-86c77015048e",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        540
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "hr.employee",
        "operation": "getAll",
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        }
      },
      "id": "ce53cfe9-0ef8-4388-8011-812af612da46",
      "name": "Получение информации о водителе",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        500,
        720
      ],
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "quarry.work",
        "operation": "getAll",
        "returnAll": true,
        "options": {},
        "filterRequest": {
          "filter": [
            {
              "fieldName": "car",
              "value": "={{ $('ищем автомобиль с таким же сотрудником').item.json.id }}"
            },
            {
              "fieldName": "status",
              "value": "Выполняются"
            },
            {
              "fieldName": "start_time",
              "operator": "greaterOrEqual",
              "value": "={{ $today }}"
            }
          ]
        }
      },
      "id": "87903171-9b8a-47b1-a022-e88a32cf283b",
      "name": "рейсы в карьере",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        4936,
        2998
      ],
      "alwaysOutputData": true,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "96e8bb62-db18-435b-9236-e0676701eaf1",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7e5d8e84-9703-4456-a11c-9e35bc1635b2",
      "name": "есть рейсы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5136,
        2998
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = $('Limit').all()[0].json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "57400291-072e-4515-8224-a4c52bb59aa0",
      "name": "преобразуем в сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5316,
        2838
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Вы выполняете:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "72b9970f-da16-431b-8bba-fe6dc7ad5459",
      "name": "Выводим информацию о перевозке8",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5496,
        2838
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = $('Limit').all()[0].json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    } else {message += `\\nУсловие завершения - в течении смены`}\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "5c3d8fc4-ec1a-4fdb-8c5b-f1aeb57ff7a0",
      "name": "преобразуем в сообщение2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5316,
        3118
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
        "text": "=Ваша следующая перевозка:\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "d67540fd-11ca-4aa7-b155-c162c1dd393c",
      "name": "Выводим информацию о перевозке9",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5496,
        3118
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Рейсы в карьере\nУ рейсов время utc + 0, поэтому их можно сравнивать с $today",
        "height": 385.9376061699952,
        "width": 833.2513752650746,
        "color": 6
      },
      "id": "6a3238ea-64d5-420d-9190-66f9b8542ed8",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4880,
        2860
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f23e83c4-baa8-4c16-8dcb-cf971fbebb14",
      "name": "айди последнего сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5676,
        3118
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Моя статистика",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "46700892-d6f7-4494-9b30-6e3a9344bc28",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Приступить к работе",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e9d1379d-cad3-4666-a782-5366de1a5ead",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Срочно",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "41f0fd84-a2a8-4d16-8bd0-ea0e5824d5dc",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Заявки по авто",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0d0a1a6d-fc12-4cdd-9ac1-c419d96eae91",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.message.text }}",
                    "rightValue": "Связь с диспетчером",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "d83852b7-464c-48e1-bf90-fda067cc8a85",
      "name": "Разделение reply-кнопок или иного ввода",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -205,
        3240
      ]
    },
    {
      "parameters": {},
      "id": "6ebabbfd-e12e-4f1e-8049-f254afc6e2c6",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        700,
        1536
      ]
    },
    {
      "parameters": {},
      "id": "5604a2e7-0cf6-4f74-8bcc-21eca8a42aaa",
      "name": "Merge7",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1880,
        1556
      ]
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=transportation.round",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "time_of_start",
            "driver_rate",
            "driver_with_trailer"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершен"
            }
          ]
        }
      },
      "id": "e782c38b-3395-41e8-9625-a174a07aa9b1",
      "name": "Получаем рейсы1",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        980,
        1436
      ],
      "alwaysOutputData": false,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "resource": "custom",
        "customResource": "=quarry.work",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "fieldsList": [
            "id",
            "quarry_hours",
            "price_for_driver",
            "create_date",
            "start_time"
          ]
        },
        "filterRequest": {
          "filter": [
            {
              "fieldName": "driver",
              "value": "={{ $json.odoo_id }}"
            },
            {
              "fieldName": "status",
              "value": "Завершены"
            }
          ]
        }
      },
      "id": "ad0ae6cc-d86d-42b1-82a5-a54510e5d07a",
      "name": "Получение работ в карьере3",
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        980,
        1676
      ],
      "alwaysOutputData": false,
      "credentials": {
        "odooApi": {
          "id": "8fI2woAI3HZ7dHDv",
          "name": "Odoo production"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "dfba3d73-f236-4554-9924-677d571d037e",
      "name": "Объединение рейсов в один файл1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1300,
        1436
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для добавления 10 часов ко времени\nfunction addHoursToTime(timeStr, hours) {\n    const dateObj = new Date(timeStr.replace(\" \", \"T\")); // Преобразуем строку времени в объект Date\n    dateObj.setHours(dateObj.getHours() + hours); // Добавляем 10 часов\n    return dateObj.toISOString().replace(\"T\", \" \").split(\".\")[0]; // Преобразуем обратно в строку и убираем миллисекунды\n}\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Добавляем 10 часов ко времени\n            const adjustedTime = addHoursToTime(time_of_start, 10);\n\n            // Извлекаем только дату из скорректированного времени\n            const date = adjustedTime.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "a29fef23-b4a4-414a-9518-4582bf6c3ca0",
      "name": "Code7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        1436
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, start_time } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            // Добавляем 10 часов к дате\n            const adjustedDate = new Date(start_time);\n            adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        // Добавляем 10 часов к дате\n        const adjustedDate = new Date(start_time);\n        adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "ea94fa3d-ab07-4fdf-964f-a7bd478c3140",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        1676
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные через items\nconst inputData = items.map(item => item.json);\n\n// Задаем текущую дату для тестирования\nconst today = new Date(); //\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60)); // UTC +10 Владивосток\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + 1); // Понедельник текущей недели\n\n// Определяем начало и конец прошлых недель (понедельник - начало, воскресенье - конец)\nconst previousWeekStart = new Date(startOfWeek);\npreviousWeekStart.setDate(previousWeekStart.getDate() - 7);\nconst previousWeekEnd = new Date(previousWeekStart);\npreviousWeekEnd.setDate(previousWeekEnd.getDate() + 6);\n\nconst twoWeeksAgoStart = new Date(previousWeekStart);\ntwoWeeksAgoStart.setDate(twoWeeksAgoStart.getDate() - 7);\nconst twoWeeksAgoEnd = new Date(twoWeeksAgoStart);\ntwoWeeksAgoEnd.setDate(twoWeeksAgoEnd.getDate() + 6);\n\nconst threeWeeksAgoStart = new Date(twoWeeksAgoStart);\nthreeWeeksAgoStart.setDate(threeWeeksAgoStart.getDate() - 7);\nconst threeWeeksAgoEnd = new Date(threeWeeksAgoStart);\nthreeWeeksAgoEnd.setDate(threeWeeksAgoEnd.getDate() + 6);\n\n// Функция для обнуления времени в дате\nfunction resetTime(date) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0); // Убираем компоненты времени\n    return newDate;\n}\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    const resetDate = resetTime(date);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === resetDate.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' });\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за неделю\nfunction getWeeklyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    // Обнуляем время для начала и конца недели\n    const start = resetTime(startDate);\n    const end = resetTime(endDate);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        // Включаем в расчет как начало, так и конец недели\n        if (entryDate >= start && entryDate <= end) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Считаем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для проверки, относится ли неделя к прошлому месяцу\nfunction isFullWeekInPreviousMonth(startDate, endDate) {\n    const startMonth = startDate.getMonth();\n    const endMonth = endDate.getMonth();\n    return startMonth < today.getMonth() && endMonth < today.getMonth();\n}\n\n// Получаем отчеты за прошлые недели\nconst previousWeekReport = getWeeklyReport(previousWeekStart, previousWeekEnd);\nconst twoWeeksAgoReport = getWeeklyReport(twoWeeksAgoStart, twoWeeksAgoEnd);\nconst threeWeeksAgoReport = getWeeklyReport(threeWeeksAgoStart, threeWeeksAgoEnd);\n\n// Формируем текст отчета для Telegram\nlet textMessage = getCurrentWeekReport();  // Отчет за текущую неделю\n\nlet pastWeeksText = ''; // Текст для прошлых недель\n\n// Проверяем и добавляем прошлые недели\nif (!isFullWeekInPreviousMonth(previousWeekStart, previousWeekEnd)) {\n    pastWeeksText += `📅 <b>Неделя с ${previousWeekStart.toLocaleDateString('ru-RU')} по ${previousWeekEnd.toLocaleDateString('ru-RU')}:</b>\\n`;\n    pastWeeksText += `🚚 Количество рейсов: ${previousWeekReport.count}\\n`;\n    pastWeeksText += `🕑 Карьерные часы: ${previousWeekReport.quarry_hours} ч\\n`;\n    pastWeeksText += `💵 Заработок: ${previousWeekReport.total} руб.\\n\\n`;\n}\n\nif (!isFullWeekInPreviousMonth(twoWeeksAgoStart, twoWeeksAgoEnd)) {\n    pastWeeksText += `📅 <b>Неделя с ${twoWeeksAgoStart.toLocaleDateString('ru-RU')} по ${twoWeeksAgoEnd.toLocaleDateString('ru-RU')}:</b>\\n`;\n    pastWeeksText += `🚚 Количество рейсов: ${twoWeeksAgoReport.count}\\n`;\n    pastWeeksText += `🕑 Карьерные часы: ${twoWeeksAgoReport.quarry_hours} ч\\n`;\n    pastWeeksText += `💵 Заработок: ${twoWeeksAgoReport.total} руб.\\n\\n`;\n}\n\nif (!isFullWeekInPreviousMonth(threeWeeksAgoStart, threeWeeksAgoEnd)) {\n    pastWeeksText += `📅 <b>Неделя с ${threeWeeksAgoStart.toLocaleDateString('ru-RU')} по ${threeWeeksAgoEnd.toLocaleDateString('ru-RU')}:</b>\\n`;\n    pastWeeksText += `🚚 Количество рейсов: ${threeWeeksAgoReport.count}\\n`;\n    pastWeeksText += `🕑 Карьерные часы: ${threeWeeksAgoReport.quarry_hours} ч\\n`;\n    pastWeeksText += `💵 Заработок: ${threeWeeksAgoReport.total} руб.\\n\\n`;\n}\n\n// Если есть данные по прошлым неделям, добавляем заголовок\nif (pastWeeksText) {\n    textMessage += '📊 <b>Отчет за прошлые недели месяца</b>\\n\\n';\n    textMessage += pastWeeksText; // Добавляем текст прошлых недель\n}\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "df82c4f8-f270-46a0-9bc4-7c9abca20168",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2140,
        1556
      ]
    },
    {
      "parameters": {
        "content": "## Вывод статистики \nПока данные берутся из Postgres",
        "height": 498.4063197737614,
        "width": 1908.660391723593,
        "color": 6
      },
      "id": "2b36bd3c-56fa-4468-ad0b-3d43d99b4387",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        1360
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.message.from.id }}",
        "text": "={{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "after_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "051359a0-299a-454b-b145-5ba44d4aaf09",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2400,
        1556
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100629222,
          "message": {
            "message_id": 21377,
            "from": {
              "id": 700956969,
              "is_bot": false,
              "first_name": "Алексей",
              "username": "Chronos196",
              "language_code": "ru"
            },
            "chat": {
              "id": 700956969,
              "first_name": "Алексей",
              "username": "Chronos196",
              "type": "private"
            },
            "date": 1727344865,
            "text": "Приступить к работе"
          },
          "tg_id": "700956969",
          "odoo_id": 2,
          "status": "authorized",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": null,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 18,
          "fuel_liters": null,
          "weight_measure": "10 м3 ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": null,
          "count_weight_photo": null,
          "count_weight_photo_sent": null,
          "current_quarry_hours": 1,
          "end_round_message_id": 21376,
          "last_message_text": "Отлично, вы завершили рейс, хотите начать следующий?\nКарьер Ключевое - Карьер Ключевое\nТест1 (Карьер Ключевое)",
          "logist_notifications": false,
          "cookie": "session_id=f16645359f2c09fcdb9bac9c8009e44d828e4cd4; Expires=Fri, 26 Sep 2025 10:01:06 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-10-03T10:14:52.912Z",
  "versionId": "2274ec5c-4264-4551-87f1-8ad69b327160"
}