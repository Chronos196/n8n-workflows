{
  "active": false,
  "connections": {
    "отправьте данные": {
      "main": [
        [
          {
            "node": "статус=отправка срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "меняем статус - ввод текста запроса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "комментарий механику": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статус получения фото при неисправности": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Завершение смены": {
      "main": [
        [
          {
            "node": "получаем odoo id5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отмена отправки фото": {
      "main": [
        [
          {
            "node": "Статус получения фото при неисправности1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки": {
      "main": [
        [
          {
            "node": "отправляем сообщение ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение ": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправляем сообщение 1": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с заявками1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия заявок1": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявки не найдены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки": {
      "main": [
        [
          {
            "node": "обновим статус на \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди механиков1": {
      "main": [
        [
          {
            "node": "проверка наличия механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия механиков1": {
      "main": [
        [
          {
            "node": "данные водителя",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно вписать часы": {
      "main": [
        [
          {
            "node": "обновим статус и номер текущей заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной заявки1": {
      "main": [
        [
          {
            "node": "получим актуальный статус заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки": {
      "main": [
        [
          {
            "node": "убираем номер заявки из пг",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем номер заявки из пг": {
      "main": [
        [
          {
            "node": "поиск механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершён процесс заявки1": {
      "main": [
        [
          {
            "node": "меняем на статус отправки фотографии",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявка в работе?": {
      "main": [
        [
          {
            "node": "нужно вписать часы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "заявка уже изменена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "принятие заказа": {
      "main": [
        [
          {
            "node": "Получение информации о водителе1",
            "type": "main",
            "index": 0
          },
          {
            "node": "айди последнего сообщения3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение информации о водителе1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нажатие водителем на кнопку замена масла": {
      "main": [
        [
          {
            "node": "Получаем odoo_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем odoo_id": {
      "main": [
        [
          {
            "node": "Получаем информацию о машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение при нажатии на кнопку отправить фото": {
      "main": [
        [
          {
            "node": "Обновление статуса отправки фото логисту",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нужно ли приложить фото?1": {
      "main": [
        [
          {
            "node": "возвращаем статус3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото завершения заявки": {
      "main": [
        [
          {
            "node": "завершён процесс заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "завершён процесс заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно ли приложить фото?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки отправки фото груза и замены масла",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправка весовых справок или ттн при завершении смены": {
      "main": [
        [
          {
            "node": "отправить весовую или ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки отправки фото груза и замены масла": {
      "main": [
        [
          {
            "node": "Нажатие водителем на кнопку замена масла",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение при нажатии на кнопку отправить фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "снова вводим номер авто": {
      "main": [
        [
          {
            "node": "снова ввод номера авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если сотрудник уже занял авто1": {
      "main": [
        [
          {
            "node": "он не может занять новый, пока занят старый1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "снова вводим номер авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель взял авто?": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нужно взять авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id2": {
      "main": [
        [
          {
            "node": "находим машину по odoo id2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Отправка весовой": {
      "main": [
        [
          {
            "node": "меняем статус на отправку весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы выполняющиеся": {
      "main": [
        [
          {
            "node": "сохраняем текст сообщения1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "нет рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "нет рейсов": {
      "main": [
        [
          {
            "node": "удалим инлайн кнопку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о литрах": {
      "main": [
        [
          {
            "node": "статус ввода литров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "фото чека": {
      "main": [
        [
          {
            "node": "статус=чек фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли чек": {
      "main": [
        [
          {
            "node": "статус дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выбор меры": {
      "main": [
        [
          {
            "node": "статус=дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус=ввод количества материала": {
      "main": [
        [
          {
            "node": "Проверка выбранного матрериала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Кнопки после отправки фото": {
      "main": [
        [
          {
            "node": "Отправка фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус на дефолтный2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статус получения фото при неисправности",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "отмена отправки фото",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Отправка весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки завершения смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "мера1": {
      "main": [
        [
          {
            "node": "статус=ввод количества материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус на дефолтный2": {
      "main": [
        [
          {
            "node": "Требуется ли отправка весовой",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объём материала": {
      "main": [
        [
          {
            "node": "выбор меры",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "мера1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ТТН и весовые в конце смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обработка кнопок ТО": {
      "main": [
        [
          {
            "node": "номер авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной заявки1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото завершения заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки": {
      "main": [
        [
          {
            "node": "перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с выбором": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок2": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вам назначена срочная перевозка": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "есть ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняется сейчас срочная?": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получение перевозок2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?": {
      "main": [
        [
          {
            "node": "метры или тонны?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок3": {
      "main": [
        [
          {
            "node": "разделение перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделение перевозок1": {
      "main": [
        [
          {
            "node": "находим прошлую перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершена ли срочная перевозка": {
      "main": [
        [
          {
            "node": "получение перевозок3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочная перевозка завершена": {
      "main": [
        [
          {
            "node": "Выводим информацию о срочной перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим прошлую перевозку": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?1": {
      "main": [
        [
          {
            "node": "завершена ли срочная перевозка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "преобразуем в сообщение1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли еще рейсы по этой перевозке?2": {
      "main": [
        [
          {
            "node": "срочная перевозка завершена",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершен рейс и перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли срочная перевозка": {
      "main": [
        [
          {
            "node": "ищем рейсы по перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ищем рейсы по перевозке2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize5": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаляем прошлое сообщение с завершением смены": {
      "main": [
        [
          {
            "node": "номер авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок": {
      "main": [
        [
          {
            "node": "разграничение перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "создаём динамически инлайн кнопки2": {
      "main": [
        [
          {
            "node": "сегодняшнее число",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер выбранной перевозки1": {
      "main": [
        [
          {
            "node": "запишем номер выбранной перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "запишем номер выбранной перевозки2": {
      "main": [
        [
          {
            "node": "перевозки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые2": {
      "main": [
        [
          {
            "node": "номер выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение для описания проблемы": {
      "main": [
        [
          {
            "node": "статус=дефолт",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные1": {
      "main": [
        [
          {
            "node": "статус=отправка срочно маршрут",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс": {
      "main": [
        [
          {
            "node": "есть рейс?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?": {
      "main": [
        [
          {
            "node": "отправьте данные1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "актуальный рейс1": {
      "main": [
        [
          {
            "node": "есть рейс?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейс?1": {
      "main": [
        [
          {
            "node": "отправьте данные2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправьте данные2": {
      "main": [
        [
          {
            "node": "статус=отправка срочно документ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "обновим статус на \"в работе\"": {
      "main": [
        [
          {
            "node": "заявка взята в работу",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "если есть ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "удаление меню ТО": {
      "main": [
        [
          {
            "node": "удаление меню ТО1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "завершение рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"м3\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем \"Тонны\"": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "завершение рейса": {
      "main": [
        [
          {
            "node": "ищем перевозку",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверка наличия": {
      "main": [
        [
          {
            "node": "если автомобиль уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Автомобиль отсутствует",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если автомобиль уже занят другим водителем": {
      "main": [
        [
          {
            "node": "авто уже занят другим водителем",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "статус ввода одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра": {
      "main": [
        [
          {
            "node": "Изменение прошлого сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сообщение о вводе номера": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем кнопки у подтверждения номера",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Статистика1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопки у подтверждения номера": {
      "main": [
        [
          {
            "node": "ввод одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ввод одометра1": {
      "main": [
        [
          {
            "node": "статус ввода одометра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начало рейса": {
      "main": [
        [
          {
            "node": "метры или тонны?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ошибки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке1": {
      "main": [
        [
          {
            "node": "авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем завершённые перевозки": {
      "main": [
        [
          {
            "node": "первая перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первая перевозка": {
      "main": [
        [
          {
            "node": "тонны или м3?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "очередь перевозок": {
      "main": [
        [
          {
            "node": "перевозка из очереди",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "кнопки принятия и завершения заказа",
            "type": "main",
            "index": 0
          },
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для кубометров": {
      "main": [
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст для тонн": {
      "main": [
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок4": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "есть ли перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка1": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "перевозки+имена",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Split Out3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склеить имена водителей": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "в единое сообщение": {
      "main": [
        [
          {
            "node": "первой работа или перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод перевозок": {
      "main": [
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "обработка кнопок ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем odoo id8": {
      "main": [
        [
          {
            "node": "находим машину по odoo id9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок7": {
      "main": [
        [
          {
            "node": "сортировка перевозок и работ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли перевозка3": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель/наёмник1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "перевозка или работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозка или работа в карьере": {
      "main": [
        [
          {
            "node": "вывод работы в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вывод доступных перевозок5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод работы в карьере": {
      "main": [
        [
          {
            "node": "Выводим информацию о работе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "вывод доступных перевозок5": {
      "main": [
        [
          {
            "node": "Выводим информацию о перевозке6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выводим информацию о перевозке6": {
      "main": [
        [
          {
            "node": "Добавление перевозки в бд3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сортировка перевозок и работ": {
      "main": [
        [
          {
            "node": "есть ли перевозка3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "первой работа или перевозка": {
      "main": [
        [
          {
            "node": "Вывод перевозок на день, работа первой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Вывод перевозок на день",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Вывод перевозок на день, работа первой": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          },
          {
            "node": "айди последнего сообщения2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "ищем автомобиль с таким же сотрудником",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "меняем статус2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение перевозок6": {
      "main": [
        [
          {
            "node": "Сортировка перевозок и работ в карьере1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов": {
      "main": [
        [
          {
            "node": "поиск текущего авто3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Начало работы в карьере": {
      "main": [
        [
          {
            "node": "поиск текущего авто2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершение карьерных работ1": {
      "main": [
        [
          {
            "node": "Работа в карьере выполнена1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение введенных часов1": {
      "main": [
        [
          {
            "node": "поиск текущего авто4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнена работа в карьере": {
      "main": [
        [
          {
            "node": "завершение карьерных работ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ввод часов1": {
      "main": [
        [
          {
            "node": "Смена статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "убираем кнопку у перевозки на день": {
      "main": [
        [
          {
            "node": "Начало работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram5": {
      "main": [
        [
          {
            "node": "получение перевозок6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере1": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Проверка часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка часов": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Недостаточное кол-во часов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматированная дата": {
      "main": [
        [
          {
            "node": "отправялем запрос",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "отправялем запрос": {
      "main": [
        [
          {
            "node": "данные занесенны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "время екатеринбург": {
      "main": [
        [
          {
            "node": "форматированная дата",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные занесенны": {
      "main": [
        [
          {
            "node": "меняем статус на обычный2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка выбранного матрериала": {
      "main": [
        [
          {
            "node": "ввод количества материала м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ввод количества материала тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "проверяем м3 или тонны": {
      "main": [
        [
          {
            "node": "убираем \"м3\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "убираем \"Тонны\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Выполнена работа в карьере без условия",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Выполнена работа в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнена работа в карьере без условия": {
      "main": [
        [
          {
            "node": "завершение карьерных работ2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть ли рейсы": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "сегодня не было перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные о топливе": {
      "main": [
        [
          {
            "node": "данные о литрах",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "фото чека",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "есть ли чек",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "объём материала",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершение смены": {
      "main": [
        [
          {
            "node": "Удаление дневной статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разграничение перевозок и работ в карьере": {
      "main": [
        [
          {
            "node": "рейсы по авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление меню ТО/статистика": {
      "main": [
        [
          {
            "node": "удаление меню ТО",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Текст для тонн": {
      "main": [
        [
          {
            "node": "текст для тонн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Текст для кубометров": {
      "main": [
        [
          {
            "node": "текст для кубометров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление дневной статистики": {
      "main": [
        [
          {
            "node": "смена завершена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Статистика1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление статистики",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные о топливе",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Удаление статистики": {
      "main": [
        [
          {
            "node": "Удаление статистики1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен без условий": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен тонны": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Рейс завершен м3": {
      "main": [
        [
          {
            "node": "айди последнего сообщения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Недостаточное кол-во часов": {
      "main": [
        [
          {
            "node": "айди последнего сообщения1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "статус ввода одометра": {
      "main": [
        [
          {
            "node": "ввод одометра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус2": {
      "main": [
        [
          {
            "node": "Сообщение о вводе номера",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "склеить имена водителей",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "меняем статус - ввод текста запроса": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сортировка перевозок и работ в карьере2": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "преобразуем в сообщение1": {
      "main": [
        [
          {
            "node": "вам назначена срочная перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "метры или тонны?": {
      "main": [
        [
          {
            "node": "Рейс завершен м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейс завершен тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Рейс завершен без условий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "тонны или м3?": {
      "main": [
        [
          {
            "node": "Текст для тонн",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Текст для кубометров",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "принятие заказа",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки меню ТО": {
      "main": [
        [
          {
            "node": "поиск текущего авто1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "комментарий механику",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Кнопки после отправки фото",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "была заправка": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ошибки": {
      "main": [
        [
          {
            "node": "Нет перевозки или работы в карьере",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Работы в карьере": {
      "main": [
        [
          {
            "node": "убираем кнопку у перевозки на день",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ввод часов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Начало работы в карьере2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Получение введенных часов1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск тг айди логистов": {
      "main": [
        [
          {
            "node": "отправка сообщения о начале рейса логистам",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем время в удобный формат1": {
      "main": [
        [
          {
            "node": "поиск логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок3": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок4": {
      "main": [
        [
          {
            "node": "убираем кнопки в меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Нет доступных перевозок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram4": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок1": {
      "main": [
        [],
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Нет доступных перевозок": {
      "main": [
        [],
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram6": {
      "main": [
        [
          {
            "node": "Нет доступных перевозок8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы за сегодня?": {
      "main": [
        [
          {
            "node": "счёт рейсов",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "форматируем1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "счёт рейсов": {
      "main": [
        [
          {
            "node": "форматируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "форматируем1": {
      "main": [
        [
          {
            "node": "отправляем сообщение 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сегодняшнее число": {
      "main": [
        [
          {
            "node": "рейсы по водителю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Объединение рейсов в один файл": {
      "main": [
        [
          {
            "node": "считаем по дням кол-во рейсов и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "считаем часы и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "считаем по дням кол-во рейсов и заработок": {
      "main": [
        [
          {
            "node": "соединяем рейсы и работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "соединяем рейсы и работы": {
      "main": [
        [
          {
            "node": "сортируем все данные, считаем итоги, преобразуем в сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сортируем все данные, считаем итоги, преобразуем в сообщение": {
      "main": [
        [
          {
            "node": "вывод недельной статистики",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "получаем рейсы по водителю1",
            "type": "main",
            "index": 0
          },
          {
            "node": "получаем работы по водителю1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "метры или тонны?1": {
      "main": [
        [
          {
            "node": "начатый рейс м3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс тонны",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс без условий",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс м3": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс тонны": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "начатый рейс без условий": {
      "main": [
        [
          {
            "node": "айди сообщения в бд",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сохраняем текст сообщения1": {
      "main": [
        [
          {
            "node": "Подтверждение завершения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "смена завершена": {
      "main": [
        [
          {
            "node": "график на завтра",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ТТН и весовые в конце смены": {
      "main": [
        [
          {
            "node": "удаляем прошлое сообщение с завершением смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "удаляем прошлое сообщение с выбором",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "загрузите ттн или весовые2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "срочно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "если не равно нулю": {
      "main": [
        [
          {
            "node": "группируем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "группируем": {
      "main": [
        [
          {
            "node": "сохраним текст",
            "type": "main",
            "index": 0
          },
          {
            "node": "склоняем",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "склоняем": {
      "main": [
        [
          {
            "node": "отправим сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "итоговое кол-во": {
      "main": [
        [
          {
            "node": "если не равно нулю",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "график на завтра": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "работы на завтра1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "работы": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "работы на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "итоговое кол-во",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "рейсы2",
            "type": "main",
            "index": 0
          },
          {
            "node": "работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы2": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "на завтра1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "айди сообщения в бд": {
      "main": [
        [
          {
            "node": "все рейсы по авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id": {
      "main": [
        [
          {
            "node": "начало рейса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся рейсы1": {
      "main": [
        [
          {
            "node": "форматируем время в удобный формат1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "все рейсы по авто": {
      "main": [
        [
          {
            "node": "разделяем рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск логистов": {
      "main": [
        [
          {
            "node": "поиск тг айди логистов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы1": {
      "main": [
        [
          {
            "node": "выполняющиеся рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id2": {
      "main": [
        [
          {
            "node": "проверяем м3 или тонны",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы": {
      "main": [
        [
          {
            "node": "находим рейсы по машине9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке": {
      "main": [
        [
          {
            "node": "разделяем рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине9": {
      "main": [
        [
          {
            "node": "Summarize5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке1": {
      "main": [
        [
          {
            "node": "разделяем рейсы2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы2": {
      "main": [
        [
          {
            "node": "находим рейсы по машине10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине10": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем рейсы по перевозке2": {
      "main": [
        [
          {
            "node": "разделяем рейсы3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы3": {
      "main": [
        [
          {
            "node": "находим рейсы по машине4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто": {
      "main": [
        [
          {
            "node": "рейсы по авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки принятия и завершения заказа": {
      "main": [
        [
          {
            "node": "находим машину по odoo id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "поиск текущего авто",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "водитель взял авто?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "получаем odoo id8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "начатый рейс1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "кнопки меню ТО",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто": {
      "main": [
        [
          {
            "node": "разделяем рейсы4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы4": {
      "main": [
        [
          {
            "node": "выполняющиеся рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "выполняющиеся рейсы": {
      "main": [
        [
          {
            "node": "есть рейсы выполняющиеся",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто": {
      "main": [
        [
          {
            "node": "очередь перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозка из очереди": {
      "main": [
        [
          {
            "node": "сами перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сами перевозки": {
      "main": [
        [
          {
            "node": "убираем завершённые перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто1": {
      "main": [
        [
          {
            "node": "получение перевозок4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получение рейсов": {
      "main": [
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "рейсы в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out3": {
      "main": [
        [
          {
            "node": "получение рейсов",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы в перевозке": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки+имена": {
      "main": [
        [
          {
            "node": "в единое сообщение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер автомобиля": {
      "main": [
        [
          {
            "node": "завершение смены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "кнопки завершения смены": {
      "main": [
        [
          {
            "node": "Подтверждение завершения смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер автомобиля",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "данные при работе в карьере",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Завершение смены",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "была заправка",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Подтверждение завершения смены после вывода перевозки",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "вывод перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим машину по odoo id9": {
      "main": [
        [
          {
            "node": "получение перевозок7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "водитель/наёмник1": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем заявки": {
      "main": [
        [
          {
            "node": "заявки \"к выполнению\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто": {
      "main": [
        [
          {
            "node": "получаем заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"к выполнению\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем заявки1": {
      "main": [
        [
          {
            "node": "заявки \"в работе\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто1": {
      "main": [
        [
          {
            "node": "получаем заявки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "заявки \"в работе\"": {
      "main": [
        [
          {
            "node": "проверка наличия заявок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получим актуальный статус заявки": {
      "main": [
        [
          {
            "node": "заявка в работе?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск механиков1": {
      "main": [
        [
          {
            "node": "поиск тг айди механиков1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные водителя": {
      "main": [
        [
          {
            "node": "данные авто",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "данные авто": {
      "main": [
        [
          {
            "node": "текст заявки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "текст заявки": {
      "main": [
        [
          {
            "node": "Отправка проблемы механикам1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получаем информацию о машине": {
      "main": [
        [
          {
            "node": "Обновление пробега при котором нужна будет замена масла1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником1": {
      "main": [
        [
          {
            "node": "если сотрудник уже занял авто1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем рейсы по водителю1": {
      "main": [
        [
          {
            "node": "разделяем рейсы5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы5": {
      "main": [
        [
          {
            "node": "завершенные рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "завершенные рейсы1": {
      "main": [
        [
          {
            "node": "Объединение рейсов в один файл",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем работы по водителю1": {
      "main": [
        [
          {
            "node": "считаем часы и заработок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "авто1": {
      "main": [
        [
          {
            "node": "время екатеринбург",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто2": {
      "main": [
        [
          {
            "node": "получение перевозок",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки": {
      "main": [
        [
          {
            "node": "находим перевозки, которые выведем в кнопках",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим перевозки, которые выведем в кнопках": {
      "main": [
        [
          {
            "node": "создаём динамически инлайн кнопки2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по водителю": {
      "main": [
        [
          {
            "node": "разделяем рейсы7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы7": {
      "main": [
        [
          {
            "node": "рейсы за сегодня",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы за сегодня": {
      "main": [
        [
          {
            "node": "есть рейсы за сегодня?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки1": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка1": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки": {
      "main": [
        [
          {
            "node": "рейсы по авто2",
            "type": "main",
            "index": 0
          },
          {
            "node": "рейсы по авто3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без ттн": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "сколько всего рейсов в перевозке по машине": {
      "main": [
        [
          {
            "node": "объединяем кол-во в одно",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "объединяем кол-во в одно": {
      "main": [
        [
          {
            "node": "сравниваем общее кол-во рейсов и рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сравниваем общее кол-во рейсов и рейсов без ттн": {
      "main": [
        [
          {
            "node": "загрузите ттн",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ттн загружена",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн": {
      "main": [
        [
          {
            "node": "меняем статус на отправку ТТН",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто3": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы  в перевозке": {
      "main": [
        [
          {
            "node": "сколько всего рейсов в перевозке по машине",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без ттн в перевозке": {
      "main": [
        [
          {
            "node": "сколько рейсов без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто2": {
      "main": [
        [
          {
            "node": "разделяем рейсы8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы8": {
      "main": [
        [
          {
            "node": "находим рейсы  в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто3": {
      "main": [
        [
          {
            "node": "разделяем рейсы9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы9": {
      "main": [
        [
          {
            "node": "находим рейсы без ттн в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "получаем id выбранной перевозки1": {
      "main": [
        [
          {
            "node": "рейсы по авто4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "есть рейсы или нет": {
      "main": [
        [
          {
            "node": "сколько рейсов без весовой",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "весовые загружены",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "сколько рейсов без весовой": {
      "main": [
        [
          {
            "node": "загрузите весовые",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите весовые": {
      "main": [
        [
          {
            "node": "меняем статус на отправку нескольких весовых",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто4": {
      "main": [
        [
          {
            "node": "получаем id выбранной перевозки1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без весовой в перевозке": {
      "main": [
        [
          {
            "node": "есть рейсы или нет",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто4": {
      "main": [
        [
          {
            "node": "разделяем рейсы10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы10": {
      "main": [
        [
          {
            "node": "находим рейсы без весовой в перевозке",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "срочно": {
      "main": [
        [
          {
            "node": "отправьте данные",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "назад",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Сообщение для описания проблемы",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "номер авто6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Удаление меню ТО/статистика",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто5": {
      "main": [
        [
          {
            "node": "рейсы по авто5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто5": {
      "main": [
        [
          {
            "node": "разделяем рейсы11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы11": {
      "main": [
        [
          {
            "node": "рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "номер авто6": {
      "main": [
        [
          {
            "node": "рейсы по авто6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто6": {
      "main": [
        [
          {
            "node": "разделяем рейсы12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы12": {
      "main": [
        [
          {
            "node": "рейсы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы1": {
      "main": [
        [
          {
            "node": "актуальный рейс1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем автомобиль с таким же сотрудником": {
      "main": [
        [
          {
            "node": "Odoo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo": {
      "main": [
        [
          {
            "node": "Odoo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Odoo1": {
      "main": [
        [
          {
            "node": "проверка наличия",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто2": {
      "main": [
        [
          {
            "node": "accept_order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто3": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "поиск текущего авто4": {
      "main": [
        [
          {
            "node": "завершение карьерных работ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы": {
      "main": [
        [
          {
            "node": "актуальный рейс",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "перевозки2": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка2": {
      "main": [
        [
          {
            "node": "загрузите ттн или весовые3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "загрузите ттн или весовые3": {
      "main": [
        [
          {
            "node": "меняем статус на дефолтный6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ищем перевозку": {
      "main": [
        [
          {
            "node": "находим какая сейчас перевозка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим какая сейчас перевозка": {
      "main": [
        [
          {
            "node": "выполняется сейчас срочная?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы по машине4": {
      "main": [
        [
          {
            "node": "есть ли еще рейсы по этой перевозке?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "рейсы по авто1": {
      "main": [
        [
          {
            "node": "разделяем рейсы6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "разделяем рейсы6": {
      "main": [
        [
          {
            "node": "находим рейсы без ттн",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "находим рейсы без ттн": {
      "main": [
        [
          {
            "node": "есть ли рейсы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-17T16:04:54.553Z",
  "id": "aWP89ViC6zly3vSU",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "old_prod_driver_inline",
  "nodes": [
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с автомобилем\nОтправьте сообщение, фото, видео, запись диктофона или кружок",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "3e254a7b-9b4f-4fbf-90e8-ebb261fbfab2",
      "name": "отправьте данные",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        9820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "abcf1999-6c71-481a-aefe-3de83628e288",
      "name": "статус=отправка срочно",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        9820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": true,
            "odoo_id": "={{ $json.odoo_id }}",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "6270978f-21b9-41ce-8ee2-229e55b23438",
      "name": "меняем статус - ввод текста запроса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        0,
        2680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9fc20c75-b8a0-4923-9ab5-b7bed7f1266b",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -400,
        2680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Отправьте свой комментарий механику",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "825787f8-f60d-4031-ab54-cd0b9c50cfc4",
      "name": "комментарий механику",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        2680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Блок проверки нажатой водителем кнопки",
        "height": 5589.183573096278,
        "width": 2241.8033428606927
      },
      "id": "ca05aae2-b3e2-4eec-b000-81859720c2d0",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1100,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "photo_cancel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "f12d89d4-7ff9-455d-ad79-b388c2da04ad",
      "name": "Отправка фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        2780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "check_final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "9cacaa29-f514-416b-88c7-8e812b76d160",
      "name": "Подтверждение завершения смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение смены\nсвои изменения буду делать белым цветом",
        "height": 538.650511832316,
        "width": 1230.4022564984548,
        "color": 6
      },
      "id": "293aa3a0-2295-47d1-9367-7df5dcd4fde0",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        3240
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": true,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ef308e6e-4efa-4202-9ac6-7817d71eccde",
      "name": "Статус получения фото при неисправности",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        2860
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Для завершения введите <b>количество карьер-часов</b>",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "074f2fdb-4fd6-43cd-9fc6-12aac24dd3a5",
      "name": "данные при работе в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1280,
        3160
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Cмена завершена!",
        "additionalFields": {}
      },
      "id": "01ff2460-b0e0-45cf-ab19-79d7980c6dc6",
      "name": "Завершение смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -540,
        3540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.result.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "af972d91-cda0-429e-a8ae-2bff39d6d17f",
      "name": "получаем odoo id5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -360,
        3640
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "mech_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "968d42ef-373f-42ff-a910-586b5548045e",
      "name": "Статус получения фото при неисправности1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        160,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Комментарий доставлен механикам",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "menu_ok"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Добавить фото",
                    "additionalFields": {
                      "callback_data": "mech_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "ee5ec324-e28b-438c-a7a4-40b3cfa0ff52",
      "name": "отмена отправки фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -140,
        3080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## завершение смены",
        "height": 192.98769776932238,
        "width": 878.3119518363878
      },
      "id": "5cfdb667-5f13-411e-9bcd-a7db2f5f845b",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        3420
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `TR_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"В меню\", callback_data: \"list_to\" }] // постоянная кнопка\n    ]\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите начать\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "92433e0a-5d9a-4c62-82ce-fb404b1c5b20",
      "name": "создаём динамически инлайн кнопки",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        4220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "e0d7dc43-522d-44a6-a620-ea455af0d5b8",
      "name": "отправляем сообщение ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        760,
        4220
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "0a947a47-6254-44a2-9660-9f1f6c319a42",
      "name": "удаляем прошлое сообщение с заявками",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        980,
        4220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для принятия заявки",
        "height": 257.97529446338507,
        "width": 1077.334745180572,
        "color": 6
      },
      "id": "7676a217-77e8-4372-8dec-cbd5a74c576f",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        4140
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.description_of_maintenance}`,\n    callback_data: `ER_${item.json.id}` // FR - end request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"В меню\", callback_data: \"list_to\" }] // постоянная кнопка\n    ]\n};\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Нажмите на заявку, которую хотите завершить\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "65ea6b4b-41ab-4f5a-abbd-6b717cef504f",
      "name": "создаём динамически инлайн кнопки1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        4580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "c2e7a3fc-2b42-410d-ae56-399433f9f20b",
      "name": "отправляем сообщение 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        760,
        4580
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "f0defc0e-8c0e-4f32-aed5-decd51ceaf7a",
      "name": "удаляем прошлое сообщение с заявками1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        980,
        4580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод кнопок для завершения заявки",
        "height": 257.97529446338507,
        "width": 1084.9093561699729,
        "color": 6
      },
      "id": "fc583c62-3b95-43b9-b9aa-a34dfa5b2848",
      "name": "Sticky Note31",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        4500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0137e4ef-a4ad-47f2-8e72-76851a2041ff",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dad2b628-091d-4cdb-a4f2-01ecddf57a14",
      "name": "проверка наличия заявок",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        4580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6d3ef479-f9d1-4c48-9141-f8120a69fece",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6f6d9007-7209-403b-a5b9-36eaa7f17973",
      "name": "проверка наличия заявок1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        4220
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Заявки не найдены"
        }
      },
      "id": "d5a37f81-edea-4ad9-aafa-2d24bf7cd850",
      "name": "заявки не найдены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        600,
        4400
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "19040020-4461-43c7-bfaf-483c39405cf6",
      "name": "номер выбранной заявки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        200,
        4860
      ]
    },
    {
      "parameters": {
        "content": "## Водитель берёт задачу в работу",
        "height": 323.3861574435644,
        "width": 649.594490717535,
        "color": 6
      },
      "id": "34260c47-b68a-4541-a1a0-a4166969e9cd",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        4800
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3f6e38b2-5654-4d2c-bdf7-10fc551b9f4c",
      "name": "поиск тг айди механиков1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1360,
        5700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "40eca1c8-25ce-4538-9aec-0b10b421179f",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9d8a3ab7-8dd3-4425-af31-4a6c9faba46e",
      "name": "проверка наличия механиков1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1585,
        5699
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('поиск тг айди механиков1').item.json.tg_id }}",
        "text": "={{ $('данные авто').item.json[\"number_car\"] }} - {{ $('Execute Workflow Trigger').item.json[\"end_request_hours\"] }} ч. - {{ $('данные водителя').item.json[\"display_name\"] }} - {{ $json.description_of_maintenance }}\n\n<b>Требуется проверить корректность выставленных часов</b>\n<a href=\"https://everest.lamart.site/web#id={{ $('Execute Workflow Trigger').item.json[\"end_request_id\"] }}&model=technical.maintenance&view_type=form\">Ссылка на заявку в Odoo</a>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Принять заявку✅",
                    "additionalFields": {
                      "callback_data": "={{\"accept_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отклонить заявку ❌",
                    "additionalFields": {
                      "callback_data": "={{\"reject_TO_\" + $('Execute Workflow Trigger').item.json.end_request_id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "ca8f5ebe-d050-48b1-8d88-dd609b0d592d",
      "name": "Отправка проблемы механикам1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2440,
        5680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Ошибка Odoo: {{ $json.error }}",
        "additionalFields": {}
      },
      "id": "35467ccf-dd53-45cb-a55f-af395a2029db",
      "name": "если есть ошибки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        660,
        4966
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Заявка взята в работу. Не забудьте завершить заявку после ремонта",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить заявку сейчас",
                    "additionalFields": {
                      "callback_data": "={{ \"ER_\"+$json.id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "В меню",
                    "additionalFields": {
                      "callback_data": "list_to"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "60174f32-a87b-4888-9bb8-68533ef99d0a",
      "name": "заявка взята в работу",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        660,
        4806
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Механик получает уведомление, когда водитель завершает заявку",
        "height": 250.48240620104332,
        "width": 1538.2139291185106,
        "color": 6
      },
      "id": "0c33efc0-a2ac-4045-aa73-02a5f1acb12d",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        5640
      ]
    },
    {
      "parameters": {
        "content": "## Водитель завершает заявку",
        "height": 315.592882734556,
        "width": 1246.6718203422697,
        "color": 6
      },
      "id": "a2daf918-e499-4c39-9c6f-a1e3f34a4f8d",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        5140
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите число затраченных часов на работу:",
        "additionalFields": {}
      },
      "id": "a4ef7c89-68e9-4a4d-8b41-127a43d9b062",
      "name": "нужно вписать часы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        620,
        5165
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TO_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3398c4ab-77e0-4409-88d2-f0d531267f49",
      "name": "номер выбранной заявки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -40,
        5245
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_request_hours",
            "end_request_id": "={{ $('номер выбранной заявки1').item.json.TO_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "e348fbe3-c60a-43ca-8b7d-f9978f75d14b",
      "name": "обновим статус и номер текущей заявки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        920,
        5165
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Когда механик проверит заявку, вам придёт уведомление",
        "additionalFields": {}
      },
      "id": "2a8d1697-5ae0-416b-803e-b83f099226b7",
      "name": "завершён процесс заявки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        280,
        5680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "end_request_id": "={{ null }}",
            "end_request_hours": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "fad00aff-a32c-4468-a796-3f1efb73143c",
      "name": "убираем номер заявки из пг",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        540,
        5680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Прикрепите фото исправления:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "1de90dd6-a982-4bd4-842c-5d52ca32229d",
      "name": "завершён процесс заявки1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        280,
        5520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "adding_end_request_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "71ce087b-e141-4b91-aa60-c5bba2ad9342",
      "name": "меняем на статус отправки фотографии",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        500,
        5520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопок для отправки фото завершения заявки",
        "height": 369.7365490265316,
        "width": 579.6907768759479,
        "color": 6
      },
      "id": "512c5353-229e-477c-86d7-a73e51250987",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        5460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fc7e922b-a871-4029-abf2-95687ecdcc6a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "60ff1445-eb90-4f2b-9d04-fca2d26798b3",
      "name": "заявка в работе?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        5245
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Статус заявки должен быть \"В работе\""
        }
      },
      "id": "19f6f759-d006-4485-8d89-46fb57395978",
      "name": "заявка уже изменена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        760,
        5305
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=У вас есть доступные рейсы\n{{ $('первая перевозка').item.json.place_from[1] }} - {{ $('первая перевозка').item.json.place_to[1] }}\n{{ $('первая перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\n{{ $json.message }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить фото материала",
                    "additionalFields": {
                      "callback_data": "materials_photo"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "09cafeb7-38db-4697-a7a9-4768716909b1",
      "name": "принятие заказа",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        3660,
        2120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b2786097-f1e9-4a43-bb8f-69d2837bbb36",
      "name": "Получение информации о водителе1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3880,
        2340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab1dea4e-d947-4ffa-a190-704692bf9687",
              "leftValue": "={{ $json.materials_photo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bd67c81d-c5e3-4c4b-9ca2-9e37f48a7dd5",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4080,
        2340
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": false,
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "28ac9adb-383d-48d6-9fc5-88b92fa0aad5",
      "name": "Обновление статуса отправки фото логисту1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4620,
        2340
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "96dbcae3-5310-400e-b4f1-b828b8f471a7",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        4360,
        2340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "materials_photo": true,
            "tg_id": "={{ $('Сообщение при нажатии на кнопку отправить фото').item.json.result.chat.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "0e27b53f-09d9-447e-9d4b-5bd83ecdd2ef",
      "name": "Обновление статуса отправки фото логисту",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        260,
        6140
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Спасибо за замену масла, следующую нужно будет произвести через 15000 км. Я обязательно пришлю вам уведомление",
        "additionalFields": {}
      },
      "id": "e24462d9-cab0-4db2-b5d3-81dbbf2cc034",
      "name": "Нажатие водителем на кнопку замена масла",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -20,
        5885
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9f2b9a79-edd4-4dbe-8a6c-60ef6f671cea",
      "name": "Получаем odoo_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        220,
        5885
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обновление регламента замены масла после подтверждения водителем замены",
        "height": 242.0127880946941,
        "width": 1022.4114664041946,
        "color": 4
      },
      "id": "0981ddf7-331a-4a83-a259-d72c50c54aea",
      "name": "Sticky Note37",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        5820
      ]
    },
    {
      "parameters": {
        "content": "## Отправка водителем фотографии материала",
        "height": 242.24910613248537,
        "width": 576.4460386934658,
        "color": 5
      },
      "id": "efa5ad56-991d-4fbc-8114-327d93e6aed8",
      "name": "Sticky Note38",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -100,
        6080
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию и ожидайте уведомление от логиста.",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "c6c7cf4e-6efd-402e-8481-d57e95b11224",
      "name": "Сообщение при нажатии на кнопку отправить фото",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        0,
        6140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Обработка кнопки \"назад\" при выборе отправки материала",
        "height": 254.01493864256875,
        "width": 981.6305810235699,
        "color": 4
      },
      "id": "57701cce-871f-4483-a8ce-cf766ee64133",
      "name": "Sticky Note40",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3800,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Нужно приложить фото исправления?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "yes_request_photo"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_request_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "573be886-1a5a-4f6d-995d-4d97fe4dabce",
      "name": "нужно ли приложить фото?1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -520,
        5740
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "authorized",
            "end_request_hours": "={{ $('Execute Workflow Trigger').item.json.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3fbe9415-88a2-4795-9413-fd461f0db449",
      "name": "возвращаем статус3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -300,
        5740
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "yes_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "386be4a5-616e-44af-bee7-3a9e3fee981c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e0aeb7f9-0c4b-475f-bef0-1e5a98d8bd2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_request_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "1749ca8b-df9e-40b5-bbd7-b1ade62def1a",
      "name": "фото завершения заявки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -840,
        5620
      ]
    },
    {
      "parameters": {
        "content": "## Отмена отправки фото исправления",
        "height": 207.35648349288545,
        "width": 487.077305180272,
        "color": 6
      },
      "id": "551fff71-4102-4027-b187-3268013d7284",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -600,
        5700
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "weight_or_ttn",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "8a169a69-1763-46e2-b3c0-f0f5bf9dc2fa",
      "name": "отправка весовых справок или ттн при завершении смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1580,
        5920
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Для завершения отправьте ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "career"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "weight_or_ttn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "68c1cef3-c658-4c97-8dae-117a962f9422",
      "name": "отправить весовую или ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1720,
        5240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "oil",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5d8c11e3-17b7-408e-9ef9-e1c9ec8f3258",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "materials_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "2e55736e-5065-426c-9c3e-86f3ac351de2",
      "name": "кнопки отправки фото груза и замены масла",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -920,
        6020
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {}
      },
      "id": "61432305-3c1e-4249-bd97-b7bbee62f8ea",
      "name": "снова вводим номер авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        6600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c5ffc47b-8efc-4ed3-98fe-e60fbae48809",
      "name": "снова ввод номера авто",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        360,
        6600
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fc134d68-e55f-4a7c-9f54-1baa487f56f7",
      "name": "если сотрудник уже занял авто1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -120,
        6460
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "=Вы не можете занять новый автомобиль, сейчас вы привязаны к авто:\n{{ $json[\"model\"] }} {{ $json[\"number_car\"] }}",
        "additionalFields": {}
      },
      "id": "3b8251f3-acc4-4596-9ac1-19e0bfc5d779",
      "name": "он не может занять новый, пока занят старый1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        6440
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вернуться к вводу номера",
        "height": 419.59874123065686,
        "width": 1005.9448008587696,
        "color": 6
      },
      "id": "cd0ff6c0-6409-4f19-9a24-a0d41838cdb9",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        6360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "47286136-a0d9-421b-9f0b-93270696d9ff",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "de7a3947-cb11-4eb6-8c2c-1873556103d6",
      "name": "водитель взял авто?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -280,
        2060
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "Чтобы начать смену, нужно взять автомобиль"
        }
      },
      "id": "ccc992e1-2e9f-47d1-8af8-56f715b73884",
      "name": "нужно взять авто",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -40,
        2180
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Начало рейса и смена статусов через эндпоинт",
        "height": 326.37446299268754,
        "width": 932.7416531557697,
        "color": 5
      },
      "id": "6f2e80c3-b9a1-4de2-bcee-54c94e95713f",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        740
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5b25ee83-d70a-48a5-9ecf-caf0d1a4a5ed",
      "name": "получаем odoo id2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -700,
        1560
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Завершение рейса и смена статусов через эндпоинт",
        "height": 333.57059544936584,
        "width": 1630.8723698847368,
        "color": 5
      },
      "id": "cfd817c3-2e74-4551-8eb4-d34517fac7e1",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -728.9968651247295,
        1449.6107313338616
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отлично, отправляйте фото",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "last"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "b179b58e-6f6f-4d8b-9e12-fae829f3927a",
      "name": "Отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        3080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправить фотографию весовой справки? ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить",
                    "additionalFields": {
                      "callback_data": "document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отправить в конце смены",
                    "additionalFields": {
                      "callback_data": "final"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "80599c3b-58b0-4756-890d-91f6387d5cbe",
      "name": "Требуется ли отправка весовой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        200,
        2880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "28695591-31fd-4965-ba31-3eb236bdba93",
      "name": "Удаление статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -400,
        7240
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2eed836a-a22c-4f31-abfd-431debae8854",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fc674c55-4d3a-4cf3-a2e5-2f3980f59cd9",
      "name": "есть рейсы выполняющиеся",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        580,
        1880
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет выполняющихся рейсов"
        }
      },
      "id": "451709d4-737f-44ed-ad02-87eaae5667bb",
      "name": "нет рейсов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        780,
        1980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Подтверждение завершения рейса",
        "height": 339.93292480078713,
        "width": 1435.063007894557,
        "color": 6
      },
      "id": "be53ec16-5ff5-4df8-bd32-fc0d75326fbc",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -325.96572971985825,
        1786
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "2622a0e5-520f-4343-b26c-4c78ed0a2ebf",
      "name": "удалим инлайн кнопку",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1000,
        1980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## ввод данных о топливе",
        "height": 192.98769776932238,
        "width": 878.3119518363878,
        "color": 6
      },
      "id": "b52a7209-edb1-4cfe-bd1e-d95ff00d9cb2",
      "name": "Sticky Note56",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -980,
        7480
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить смену?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "upload_sertificate"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "5415f551-ce2d-4235-8ed9-cd1da24cb580",
      "name": "Подтверждение завершения смены после вывода перевозки",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        40,
        3260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Была ли заправка у данного автомобиля?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "fuel"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "1299cc04-ba79-40da-af79-7fb676af3064",
      "name": "была заправка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -740,
        3640
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Сколько литров вы заправили в автомобиль? Введите число, например: 100",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "check_fuel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d4c9e5ff-6a6a-43a6-9de4-5484bdd29a5f",
      "name": "данные о литрах",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -700,
        7520
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Отправьте фотографию чека с заправки:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад ",
                    "additionalFields": {
                      "callback_data": "cancel_receipt_photo"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "586b29cc-536e-4293-9df6-197bc3a360e0",
      "name": "фото чека",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -440,
        8080
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_fuel_count"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "11a1dd1f-3cbf-4b97-bec4-ee0128a2899b",
      "name": "статус ввода литров",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -480,
        7520
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "У вас сохранился чек?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "add_fuel_receipt"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "no_receipt"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "39d68d19-d424-4e61-84ec-a229af6f0dc5",
      "name": "есть ли чек",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -500,
        8260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Фото чека",
        "height": 334.02911078486767,
        "width": 615.1032860836,
        "color": 6
      },
      "id": "f1bcb315-7453-4a34-82b1-170f3a70585c",
      "name": "Sticky Note60",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -620,
        8044
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Выберите меру исчисления перевозимого материала:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "м3",
                    "additionalFields": {
                      "callback_data": "measure_m3"
                    }
                  },
                  {
                    "text": "Тонны",
                    "additionalFields": {
                      "callback_data": "measure_t"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "3d627bea-3e8a-4526-aef7-7290f5c2488c",
      "name": "выбор меры",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -180,
        8500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "photo_fuel_receipt"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "811b7244-817b-4045-8d94-3690dd6de442",
      "name": "статус=чек фото",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -260,
        8080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "40135956-a09a-4ef2-af22-99b8b273135f",
      "name": "статус дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -260,
        8260
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "6b6588ab-f56e-4dc1-bbba-e86e630356bb",
      "name": "статус=дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        0,
        8500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "inputing_material_volume",
            "weight_measure": "={{ $json.measure }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "0dbeb74b-41d9-4aed-929c-45b4108387ed",
      "name": "статус=ввод количества материала",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -120,
        8760
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "send_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "219e6b5f-9163-4d47-be94-eaa66793d95e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "last",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9ae7ddc4-13c4-4009-8856-5b2bfbe14441",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "mech_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5273404d-720b-4e65-82f4-df39ecd37ae7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "photo_cancel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4c57a215-ac3c-40f6-b79d-95384548ad56",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "64a2ebb3-29d5-4d30-bcfa-935a73a6b7f9",
      "name": "Кнопки после отправки фото",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        2800
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c998d5a5-0ba2-42ce-94b8-7eb8c4900754",
              "name": "measure",
              "value": "м3",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24aac222-6110-46ca-adf1-e0fc4856b154",
      "name": "мера",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -340,
        8680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd7f631a-2dd0-4bd9-a162-d6b2e9db5ffe",
              "name": "measure",
              "value": "Тонны",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8b12ddbb-ff78-4237-a42d-26103c597d79",
      "name": "мера1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -340,
        8860
      ]
    },
    {
      "parameters": {
        "content": "## сохранение объёма материала",
        "height": 589.7232460239827,
        "width": 841.1891717773943,
        "color": 6
      },
      "id": "6b6863b3-cc78-4420-8b92-18a7e2ae934d",
      "name": "Sticky Note61",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        8440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы выполнили все рейсы по данной перевозке!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть назначенную перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {}
          ]
        },
        "additionalFields": {}
      },
      "id": "c916205f-53e7-4e05-8d90-b8c15a8c4cf7",
      "name": "Завершен рейс и перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1800,
        1700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f73c539e-53ee-4cd0-ba31-838c7d8a0916",
      "name": "меняем статус на дефолтный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -20,
        2880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "weight_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e3449bfa-0d8b-407d-b745-6ac58e537b87",
      "name": "меняем статус на отправку весовой",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -440,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "material_volume",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "24448d12-7e1b-4732-a4a0-0221bb3273da",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_m3",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5cf07c1d-3184-4f47-b88a-2fc5bea5dd8a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "measure_t",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "dfa939a2-6dec-4619-adb0-90c237aeb81e",
      "name": "объём материала",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -960,
        8500
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Выберите документ, который хотите проверить по перевозке:\nОтправитель - {{ $json.sender[1] }}\nПолучатель - {{ $json.partner[1] }}\nМаршрут - {{ $json.place_from[1] }}-{{ $json.place_to[1] }}\nМатериал - {{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "0be28a6d-1b7a-4562-ba50-46e179a0b8c6",
      "name": "загрузите ттн или весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        180,
        9500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "05eeee1a-44a9-419f-bedb-ac2e2b29a802",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        880,
        8780
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "take_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "535cadc8-a70a-4a72-a932-a352cc94843b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_to",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4a9a6c70-e2e7-4ac3-ad3b-9b2fc779f25d",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TR_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c15e9b8-76c9-4f34-96af-cf0008354db6",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"ER_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "f210e549-3d37-4958-aca1-7fa1361c23e7",
      "name": "обработка кнопок ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1100,
        4440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(3) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "939705b5-bdf5-4945-b2d4-6b38daf2acab",
      "name": "номер выбранной перевозки",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -620,
        9500
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b735886d-b3b5-4533-92fd-7b28c9ddbace",
      "name": "запишем номер выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -400,
        9500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ null }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "9f8239cb-4ab9-49d2-99d9-304346348900",
      "name": "запишем номер выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -420,
        9280
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "ef1b663e-8d85-4dcb-82da-5a287fcca50d",
      "name": "удаляем прошлое сообщение с выбором",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -640,
        9280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок динамическими инлайн кнопками для дальнейшей проверки документов\nА также возврат к этому меню",
        "height": 396.78241746442734,
        "width": 2211.214572365982
      },
      "id": "24eb2bd9-6ba6-4bb8-8a2c-ec2ae2d5c29e",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        9060
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "4c13c4b5-d14a-43aa-b454-fc8c1b33d9f6",
      "name": "меняем статус на дефолтный4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        360,
        9500
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам",
        "height": 197.9358524347207,
        "width": 1176.0644741483143
      },
      "id": "768f3979-7c5e-4cfd-8660-926fee50faa3",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -689,
        9460
      ]
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 385.52249089873953,
        "width": 2012.9601224596395
      },
      "id": "3098a76c-149e-49c7-aef4-7dc4eab41267",
      "name": "Sticky Note64",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        10300
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "e8d081dd-8796-4b27-9e6b-bb94fcf01000",
      "name": "получение перевозок2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -360,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена срочная перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "7f92b7a0-d1dd-408a-a2f1-3b90380d75dd",
      "name": "вам назначена срочная перевозка",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        1300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение1').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "92269501-be17-423b-b241-44fc62e4b742",
      "name": "Выводим информацию о срочной перевозке",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        1300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "20bfeb73-0117-4fca-b42b-7891817b57fe",
      "name": "Filter1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        160,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $json.type }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "c87d52a8-b033-4521-acbe-c8168704b95c",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5c8e5a97-5c85-4562-8e1e-674c71e20e60",
      "name": "выполняется сейчас срочная?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        1560
      ]
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "transportation[0]",
        "options": {}
      },
      "id": "2a2bc7fa-873c-4b9d-bab1-aee1317a8ab3",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        880,
        9080
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине4').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "79989096-b9fd-4e13-a11d-75150de34535",
      "name": "есть ли еще рейсы по этой перевозке?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        1540
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Отправитель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"sender\"][1] }}</b>\nПолучатель - <b>{{ $('находим прошлую перевозку').item.json.transportations[\"partner\"][1] }}</b>\nМаршрут - <b>{{ $('находим прошлую перевозку').item.json.transportations.display_name.substring(11) }}</b>\nМатериал - <b>{{ $('находим прошлую перевозку').item.json.transportations.material[1] }}</b>\nКомментарий - <b>{{ $('находим прошлую перевозку').item.json.transportations.comment }}</b> ",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить перевозку",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "63249e65-17b8-4d5c-8b55-b000fecf7d15",
      "name": "Выводим информацию о срочной перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2620,
        1060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "c02bbcf2-c14b-404f-b6e5-7ab8e7576bde",
      "name": "получение перевозок3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        1060
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportations",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "fcacb165-dec4-4fde-9227-10bf1cb98c50",
      "name": "разделение перевозок1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1620,
        1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bb8153e1-c56a-4454-a9d3-3d7fe5fd3d07",
              "leftValue": "={{ $('находим машину по odoo id2').item.json.current_transportation[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.current_transportation[0] }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d37f4566-bbce-4755-9a8e-c6977ee6a293",
      "name": "завершена ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы завершили срочную перевозку\nДо этого Вы выполняли перевозку:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "35174d0e-7480-41b2-a63d-05dd41939734",
      "name": "срочная перевозка завершена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2420,
        1060
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b7b19961-4591-41af-8992-c960138ac1ea",
              "leftValue": "={{ $json.transportations.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "5a61de57-7c06-4354-93fb-20f077c6a0db",
              "leftValue": "={{ $json.transportations.type }}",
              "rightValue": "Запланированная",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6033e3ba-0ef2-4c04-a2e4-c1918f14aa9d",
      "name": "находим прошлую перевозку",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1820,
        1060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "06a95259-6455-4102-bf15-891e6ad56042",
      "name": "есть ли еще рейсы по этой перевозке?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1200,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dc2c4b42-32a5-4439-bfc6-f23aa5c47e03",
              "leftValue": "={{ $('находим рейсы по машине10').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "830411af-784e-4bc4-b69e-b5e86c55e07b",
      "name": "есть ли еще рейсы по этой перевозке?2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2200,
        1060
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Filter1').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ac4ce84f-c13d-4cff-886c-b7aa89e4b935",
      "name": "есть ли срочная перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        380,
        1300
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "1af8fa69-0e49-4ad4-9333-8032391b4710",
      "name": "Summarize5",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1020,
        1300
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b2a8f875-8297-48fd-87f0-35684be5cd32",
      "name": "Удаление дневной статистики",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        120,
        3460
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}"
      },
      "id": "133eaf9c-cf97-4beb-91ef-e2406808533a",
      "name": "удаляем прошлое сообщение с завершением смены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -860,
        9120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Меню выполнения следующего рейса, либо перевозка заверена",
        "height": 326.33462121963237,
        "width": 711.5058573856858
      },
      "id": "3a39c610-fbb4-4507-ad80-deb615b550ff",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        1460
      ]
    },
    {
      "parameters": {
        "content": "## Проверка наличия срочной перевозки",
        "height": 190.88466314753396,
        "width": 1514.209602825899
      },
      "id": "4ed0a5d8-1e36-49d3-882b-987abe18d533",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -379.71297653981696,
        1265.5871571978169
      ]
    },
    {
      "parameters": {
        "content": "## Вывод срочной перевозки",
        "height": 210.2083569266656,
        "width": 751.5916578131095,
        "color": 5
      },
      "id": "f6a91c03-1d51-4c32-a805-1b7969e8d6d6",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1140,
        1240
      ]
    },
    {
      "parameters": {
        "content": "## Завершена ли срочная еревозка и возврат к предыдущей",
        "height": 223.82830383823693,
        "width": 1656.5765497002262
      },
      "id": "64efb782-85a9-47d1-985d-103f8ab9cc21",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        1021.4692021114788
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n} ",
        "options": {}
      },
      "id": "d2c20e53-5e6d-4b09-b1f9-d0078a6ae988",
      "name": "получение перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -420,
        9120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst buttons = items.map((item, index) => ({\n    text: `${item.json.display_name.substring(11)}`,\n    callback_data: `TS_${item.json.id}` // TR - take request\n}));\n\nconst inlineKeyboard = {\n    inline_keyboard: [\n        ...buttons.map(button => [button]), // динамические кнопки, каждая строка содержит одну кнопку\n        [{ text: \"Завершить проверку\", callback_data: \"check_fuel\" }] // постоянная кнопка\n    ]\n};\n\nconsole.log(JSON.stringify(inlineKeyboard, null, 2));\n\nconst chatId = $('Execute Workflow Trigger').all()[0].json.callback_query.from.id;\nconst token = '7062531188:AAFkpyOiRuXLHFQO8mWKHuftPGglQSruqwo';\nconst url = `https://api.telegram.org/bot${token}/sendMessage`;\n\nconst message = {\n    chat_id: chatId,\n    text: \"Проверьте наличие ТТН и Весовых справок в перевозке.\\nВыберите необходимую перевозку🛻\",\n    reply_markup: inlineKeyboard\n};\n\n// Возвращаем данные для запроса\nreturn [\n    {\n        json: {\n            url,\n            message\n        }\n    }\n];\n"
      },
      "id": "6135eacc-243c-4553-a0a7-06b1ed44511a",
      "name": "создаём динамически инлайн кнопки2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        9100
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "За эту смену у Вас не было перевозок или у Вас нет выполненных рейсов, чтобы загрузить ТТН или весовые",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_fuel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "35f1ad7e-88fb-48ea-8ca7-46df72f77f95",
      "name": "сегодня не было перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        640,
        9300
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ad7c1c-cd84-4fc3-bf35-ca59aedad2a0",
              "name": "TS_number",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.data.substring(4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2f109982-1fdf-43ab-9be9-dc3b6d2fc048",
      "name": "номер выбранной перевозки1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -640,
        10820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "transportation_for_certificate": "={{ $json.TS_number }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "b4c7d750-33df-4ee0-9a4f-2f28539ff31e",
      "name": "запишем номер выбранной перевозки2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -420,
        10820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "29b11aeb-9cb5-4480-8210-24c1a607cac8",
      "name": "меняем статус на дефолтный6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        340,
        10820
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Меню с выбором ттн, весовой или возврата к перевозкам после загрузки весовых",
        "height": 241.63069006760355,
        "width": 1300.757384350416
      },
      "id": "d6e27cf6-d5ed-476e-8a82-395af3f6fc02",
      "name": "Sticky Note66",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        10760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "3601f5f9-24d3-4e81-be7d-3076db3a66a5",
      "name": "загрузите ттн или весовые2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -820,
        10820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Вы в главном меню",
        "additionalFields": {}
      },
      "id": "e7aa2053-c955-4e25-949f-a3a908161f54",
      "name": "назад",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        9960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Дорогой водитель, с чем у вас возникла проблема?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Автомобилем",
                    "additionalFields": {
                      "callback_data": "warn_problem_auto"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Маршрутом",
                    "additionalFields": {
                      "callback_data": "warn_problem_route"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "С Документами",
                    "additionalFields": {
                      "callback_data": "warn_problem_document"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "warn_back_to_menu"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "f7602f5f-e73a-4c96-92be-4d99a48493b2",
      "name": "Сообщение для описания проблемы",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10120
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "52876d92-fbee-4f1f-8195-4b1ceb6ac471",
      "name": "статус=дефолт",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10120
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## меню Срочно",
        "height": 987.9912140099913,
        "width": 515.4472763738418,
        "color": 6
      },
      "id": "ce949413-8890-47a9-a304-cb5cff6c71ee",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1340,
        9760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с маршрутом\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "e5d267a2-523b-4a31-b8da-390aa49fccce",
      "name": "отправьте данные1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_route"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "dfb36812-0dd0-4ea6-9065-07380d78306b",
      "name": "статус=отправка срочно маршрут",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10320
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "55"
      },
      "id": "57f05d25-9197-4d0a-9426-96a222be28fd",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1900,
        1980
      ],
      "disabled": true
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "7bb4cedf-2d62-4785-ab1a-6e21c5c9030a",
      "name": "актуальный рейс",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1660,
        10240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8114f4ea-57a4-439d-98fd-4288d7116637",
      "name": "есть рейс?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1460,
        10240
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "У вас нет начатого рейса, вы не можете указать проблему"
        }
      },
      "id": "1963cbfc-4d89-415c-a307-56eec245415e",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "keep": "lastItems"
      },
      "id": "fe206b0d-cc6a-455c-b35d-4d75a38c148e",
      "name": "актуальный рейс1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1660,
        10440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b5a301a-c219-41f3-a4c1-9ceb5ecbe763",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e28d66e1-6440-47db-8e01-4b205f8812b5",
      "name": "есть рейс?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1460,
        10440
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Проблема с документами\nОтправьте сообщение, фото, видео, запись диктофона или кружок:",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_choise_warn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d1eb9ef4-54cb-4501-8e53-369993a9de2f",
      "name": "отправьте данные2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1200,
        10480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_warn_message_document"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "550bf499-a657-4cc5-8086-69dbbe838bf7",
      "name": "статус=отправка срочно документ",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -980,
        10480
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/take_maintenance_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "91fd8ddd-b517-4188-85d0-d6ff54d6833b",
      "name": "обновим статус на \"в работе\"",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        4860
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1 }}"
      },
      "id": "cfa09d24-a14d-4f16-bada-1322ba52550e",
      "name": "удаление меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -2120,
        11360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id  }}"
      },
      "id": "a28c3e96-414e-45d1-b138-7ae7f7c5f99a",
      "name": "удаление меню ТО1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1900,
        11380
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_round",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $('находим машину по odoo id2').item.json.number_car +'\"'}},\n  {{ $json.weight.replace(\",\", \".\") }}\n}",
        "options": {}
      },
      "id": "a327c029-371c-40a6-bf24-43569b537f78",
      "name": "завершение рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        280,
        1560
      ]
    },
    {
      "parameters": {},
      "id": "dcdc1edf-cca4-4649-a2f2-ce213f67a79c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        120,
        1560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_volume\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -4) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5f119c4e-5db1-4244-b945-53d10a3ede77",
      "name": "убираем \"м3\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -80,
        1500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e60e044-2138-4cf2-9870-90703b723193",
              "name": "weight",
              "value": "=\"cargo_netto\": {{ $('Execute Workflow Trigger').item.json.weight_measure.slice(0, -7) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6e16fb61-fe63-4e7b-96bb-c316d094eae6",
      "name": "убираем \"Тонны\"",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -80,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "=inputing_car_number"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "91f283e0-b79a-4460-af40-50c5b2e86755",
      "name": "меняем статус2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2100,
        12140
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d4be8aa-73f6-479a-a3a3-9ab858135854",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "500bafec-e23f-4147-b8e6-e1fe79a11043",
      "name": "проверка наличия",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1420,
        11840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "eb8f3a86-31ee-4b61-9746-eff045d2ed87",
              "leftValue": "={{ $json.employee_id[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "21180730-3d4e-471f-b7fa-6a2093e4ff22",
      "name": "если автомобиль уже занят другим водителем",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1200,
        11840
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> не найден!\nВведите номер заново",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "c51587ed-6ca8-4e4b-930a-41dedd8f3abe",
      "name": "Автомобиль отсутствует",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1120,
        12040
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Автомобиль с номером <b>{{ $('Execute Workflow Trigger').item.json.message.text }}</b> сейчас привязан к другому водителю.\nВы не можете занять этот автомобиль",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "1e0a4812-d6e1-4921-8c3b-e542903c9f9e",
      "name": "авто уже занят другим водителем",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -960,
        11760
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "17b3006d-48e2-460f-9ae1-a3ba8dd32dd9",
      "name": "ввод одометра",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -480,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "inputing_odometer",
            "car_id_while_inputing": "={{ $('если автомобиль уже занят другим водителем').item.json.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a541e922-561b-4d5d-b0ef-419fd1ca9aa9",
      "name": "статус ввода одометра",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -780,
        11860
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "Введите номер автомобиля в любом удобном формате: а777аа; Х777ХХ; О 777 ОО; о 777 оо",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "5a2c2dd2-3546-49e0-9dc1-5519da885543",
      "name": "Сообщение о вводе номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1880,
        12140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1}}",
        "text": "=Ваш автомобиль {{ $('Odoo1').item.json.model }} - {{ $('Odoo1').item.json.number_car }}",
        "additionalFields": {}
      },
      "id": "743332bf-a09e-4edc-bad4-6daea91a0354",
      "name": "Изменение прошлого сообщения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -220,
        11860
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $json.result.chat.id }}",
        "messageId": "={{ $json.result.message_id - 1 }}"
      },
      "id": "574b4da4-5b16-4e5e-9df1-86e4a93b8fa4",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -1660,
        12140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_input_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "475a9936-9e3b-4576-a4d4-1b35af3b38e0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "correct_number",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "31019ff7-8349-467e-8863-0ff724b97cc1",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -760,
        6480
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "8108ee49-592c-4ec2-8f93-50bab80107f7",
      "name": "убираем кнопки у подтверждения номера",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -440,
        6620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Введите показатель одометра.\nНапример: 999999",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "aecf310f-c4f9-4737-ab3d-9c925d414243",
      "name": "ввод одометра1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -240,
        6620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "status": "inputing_odometer"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "7e4d48e0-e622-4352-8792-a5e95b35ca0a",
      "name": "статус ввода одометра1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -40,
        6620
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод перевозок на день в начале смены",
        "height": 318.97070094800966,
        "width": 1046.2058075770242,
        "color": 3
      },
      "id": "66a01374-18de-4677-b0ac-1c33e1c1e742",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        2360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}},\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "189822f6-1525-471b-8686-d382fec9267a",
      "name": "начало рейса",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -160,
        840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "6ed99b8d-95c2-4596-bfc2-657b5d55e7ab",
      "name": "Выводим информацию о перевозке1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        2100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44efe1cd-1ec6-4f53-adb5-ffa5dd25effa",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершена",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "e2d3564c-e6ef-45f4-bd61-2e82ed8f86c8",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Приостановлена",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0f7040ba-a916-40d9-aa82-906fc9e425a1",
      "name": "убираем завершённые перевозки",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        2360,
        2040
      ]
    },
    {
      "parameters": {},
      "id": "41fcd3ae-d0cd-4b86-8e5c-0211c34f0c7d",
      "name": "первая перевозка",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2580,
        2040
      ]
    },
    {
      "parameters": {
        "content": "## Вывод остатка",
        "height": 314.21707399841006,
        "width": 1373.4954938883134,
        "color": 6
      },
      "id": "125396bd-de30-4f0b-a632-ccf6605162b3",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        1860
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_queue",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"car_id\": {{ $json.id }}\n} ",
        "options": {}
      },
      "id": "53e6094d-4194-41d3-8a59-3f8aa9012fcb",
      "name": "очередь перевозок",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1720,
        2040
      ]
    },
    {
      "parameters": {},
      "id": "ddcb690b-3448-48ba-907c-33245ae49d1c",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2120,
        1740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "576be792-da0a-4129-b754-b4da4f75c36a",
              "name": "message",
              "value": "=Осталось перевезти {{ $json.required_ton - $json.current_ton }} т.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5277d9be-0914-44bd-a865-776f161bbbac",
      "name": "текст для тонн",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3400,
        1780
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "576be792-da0a-4129-b754-b4da4f75c36a",
              "name": "message",
              "value": "=Осталось перевезти {{ $json.required_cubic_metre - $json.current_cubic_metre }} м3.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cfec1b3d-3636-47ab-a963-d90b7096f5da",
      "name": "текст для кубометров",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3400,
        2000
      ],
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "3ee1481b-3fd6-4e84-8afb-60812c5f4f6f",
      "name": "получение перевозок4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -600,
        2440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "7704b960-90f4-470b-84bc-f64a5d94b283",
      "name": "Сортировка перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        2380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('Сортировка перевозок и работ в карьере').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1e1ea89a-60e6-4e7a-9f02-e02bd876f7eb",
      "name": "есть ли перевозка1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -120,
        2380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "66a70188-1d7c-413f-9f20-83a9bb5989c5",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        300,
        2440
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "transportation_round[0].driver[1]",
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "d86c5fbe-2639-4f85-8414-a818c4ee39fc",
      "name": "склеить имена водителей",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        920,
        2460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "id": "6a5982e8-efb8-4b63-98a2-8c632e33eea1",
      "name": "Replace Me3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1160,
        2460
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nlet index = 1;\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `<b>${index}.</b> Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre|| 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    message = `<b>${index}.</b>`;\n    \n    if (sender) message += ` Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += (item.json.concatenated_transportation_round0_driver1 ? \"\\n\\nВодители, выполняющие перевозку с вами:\\n\" + item.json.concatenated_transportation_round0_driver1 : \"\");\n\n    message += `\\n\\n`;\n  }\n\n  if (index === 1) {\n    message = `<i>${message.trim()}</i>\\n\\n`;\n  }\n\n  combinedMessages += message;\n  index++;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];\n"
      },
      "id": "a4e524d0-8f1d-428a-95de-e1fd39fc76f3",
      "name": "в единое сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к первой перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "761f7f4f-1be5-4c49-a595-3e8c97331add",
      "name": "Вывод перевозок на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        2480
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "62c8186c-6395-454f-a02a-14a89b140012",
      "name": "убираем кнопки в меню ТО",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1980,
        2680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Вывод водителей с той же перевозкой",
        "height": 357.7855900491362,
        "width": 1115.923707913178,
        "color": 6
      },
      "id": "eab55ea8-3d3f-4c83-81e5-9ef3f8557f4c",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        200,
        2300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "перевозки",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "0234d61c-2c85-4751-a4d1-82ea9c9e5e73",
      "name": "вывод перевозок",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        3860
      ]
    },
    {
      "parameters": {
        "content": "## Вывод перевозок водителю",
        "height": 326.7771809966836,
        "width": 1921.1026431074927,
        "color": 3
      },
      "id": "56507ba8-bca2-4c80-8e15-e504b6f52596",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -900,
        3800
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d88190b3-08ec-4047-b1d1-0f7e6580afdc",
      "name": "получаем odoo id8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -780,
        3880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": {{'\"'+ $json.number_car +'\"'}}\n}  ",
        "options": {}
      },
      "id": "d62f85b7-d6b4-4710-afe5-028bdb06e299",
      "name": "получение перевозок7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        3880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e24d83cc-dc2d-4d01-8af3-ff146b515d82",
              "leftValue": "={{ $('сортировка перевозок и работ').item.json }}",
              "rightValue": "Срочная",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b2d4277-e304-4a52-96aa-19a2bb85ecdb",
      "name": "есть ли перевозка3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        140,
        3800
      ]
    },
    {
      "parameters": {},
      "id": "36a47273-29a9-45cd-8cd2-156d18709b24",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        420,
        3780
      ]
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $input.all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre || 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "88a56b78-2876-49a4-a974-8ef9d95bb6a7",
      "name": "преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        3780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ddf86125-a34c-4261-a381-7aa3af6ec422",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "Работа",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f1ce67a0-03d9-4cce-b296-4b6c6c967a28",
      "name": "перевозка или работа в карьере",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        3820
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначено следующим:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d57089cf-2794-4367-b5a7-d4e97b80e8f0",
      "name": "вывод работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        3720
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "95de7fe8-3e7f-4ec3-830a-fdb8d2ab3bb4",
      "name": "Выводим информацию о работе",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1400,
        3720
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вам назначена следующая перевозка:",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "bef8e7f4-6ce6-4b4b-85a3-0b76b504e56a",
      "name": "вывод доступных перевозок5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1120,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "={{ $('преобразуем в сообщение').item.json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к перевозке",
                    "additionalFields": {
                      "callback_data": "accept"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "b82bcee7-30d6-4f71-bfbe-2540cb0c5502",
      "name": "Выводим информацию о перевозке6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1360,
        3980
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "transportation",
          "mode": "list",
          "cachedResultName": "transportation"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Limit').item.json.route[1] }}",
            "id": "={{ $('Limit').item.json.id }}",
            "driver_id": "={{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "count",
              "displayName": "count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weigth",
              "displayName": "weigth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "driver_id",
              "displayName": "driver_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "602126d7-05a1-448c-82f7-5aa018634f12",
      "name": "Добавление перевозки в бд3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1540,
        3980
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## вывод информации о перевозке",
        "height": 230.83366425667094,
        "width": 649.0474523395976
      },
      "id": "75893a5e-d91e-41e9-a8fc-d612c0769c43",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        3920
      ]
    },
    {
      "parameters": {
        "content": "## вывод информации о работе",
        "height": 206.09289092967919,
        "width": 637.5017581203348
      },
      "id": "9fca702d-29dd-425e-8683-ea59cb15d729",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        3680
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\n\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "c47abc5e-9436-43f4-a33f-d23a52ad4b9f",
      "name": "сортировка перевозок и работ",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        3800
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ab898071-c183-48b0-b7b8-9355eebe5abd",
              "leftValue": "={{ $json.combinedMessages }}",
              "rightValue": "<i><b>1.</b> Работа ",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6c936a49-d621-438a-954d-9d38e9f2b3cc",
      "name": "первой работа или перевозка",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        2320
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
        "text": "=<b>На сегодня Вам назначены перевозки в следующем порядке:</b>\n\n{{ $json.combinedMessages }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к работе в карьере",
                    "additionalFields": {
                      "callback_data": "accept_quarry"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "36ae4c40-4f0e-4eb5-ad08-cdc208422ba5",
      "name": "Вывод перевозок на день, работа первой",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1640,
        2280
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток кубометров по текущей перевозке - {{ $('находим какая сейчас перевозка').item.json.diff_cubic_metre }}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "b707700a-e6f5-4da2-97f0-76fec85bff3e",
      "name": "Рейс завершен м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2180,
        1400
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток по текущей перевозке -  {{ $('находим какая сейчас перевозка').item.json.diff_ton }} т.</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "ad684af1-9da0-4232-ac9f-fe2dbb598a20",
      "name": "Рейс завершен тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2300,
        1540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a22d8717-31bf-4c08-bdcc-48ad1d7f83bd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "other_car",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "86c8b9c3-9895-4f9a-9ad1-e5fa06d7f656",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2420,
        11940
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/transportations_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": \"{{ $('поиск текущего авто3').item.json.number_car }}\"\n}   ",
        "options": {}
      },
      "id": "2d6c5e0a-f5c2-4420-b34e-d148473d419a",
      "name": "получение перевозок6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1560,
        12960
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "f2c69e77-f2b6-4cb5-83f9-c09dc8b695d5",
      "name": "Получение введенных часов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2280,
        12960
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "input_quarry_hours",
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "56ab58db-92f5-4f13-b967-907f5a57512a",
      "name": "Смена статуса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1760,
        12780
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "cf5c1c65-f42f-4d4f-9007-14db9a941e55",
      "name": "Начало работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1880,
        12600
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('поиск текущего авто3').item.json.id }},\n  \"hours\": {{ $('Получение введенных часов').item.json.current_quarry_hours }},\n  \"count_rounds\": 1\n}     ",
        "options": {}
      },
      "id": "5b062764-4296-4e06-aa7e-ef7af062d58b",
      "name": "завершение карьерных работ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        60,
        12800
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"hours\": {{ $('Получение введенных часов1').item.json.current_quarry_hours }}\n}       ",
        "options": {}
      },
      "id": "d99a6468-a37a-47c0-80f6-4c34d2bcedd2",
      "name": "завершение карьерных работ1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1980,
        13360
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $json.callback_query.from.id }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "current_quarry_hours"
            }
          ]
        },
        "options": {}
      },
      "id": "d1d8fe17-336c-4365-890e-24eb1a3ff8fb",
      "name": "Получение введенных часов1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2420,
        13340
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/accept_order",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number_car\": \"{{ $('поиск текущего авто2').item.json.number_car }}\",\n  \"driver_id\": {{ $('поиск текущего авто2').item.json.driver_id[0] }}\n}  ",
        "options": {}
      },
      "id": "648db05d-e5fa-48e7-8b7f-e948de238a2c",
      "name": "accept_order",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1500,
        12600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "Вы выполнили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "2c14ce42-5dda-4c97-805b-cc3e4f63d531",
      "name": "Выполнена работа в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -180,
        12800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Условие по часам не выполнено! Осталось ещё {{ $('Проверка часов').item.json.required_hours - $('Получение введенных часов').item.json.current_quarry_hours }}. Вы уверены, что хотите завершить работу?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Да",
                    "additionalFields": {
                      "callback_data": "finish_quarry_work"
                    }
                  },
                  {
                    "text": "Нет",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "7a4194a1-b3a2-45a8-82c1-7d41ef6df1a6",
      "name": "Недостаточное кол-во часов",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -120,
        13000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Введите количество карьер-часов. Пример: \"8\"",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_to_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "48291196-fb11-46bd-bec8-9480454838d9",
      "name": "Ввод часов1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2000,
        12780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Работа в карьере начата. По завершении своих работ нажмите «Завершить работу»",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить работу",
                    "additionalFields": {
                      "callback_data": "quarry_hours"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "3cde3fc7-057e-4a44-9bcf-bf71006f2dd1",
      "name": "Начало работы в карьере2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2280,
        13200
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Вы выполнили работу в карьере!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "4d0915f6-465b-4dab-84c4-89d0c8345946",
      "name": "Работа в карьере выполнена1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1480,
        13320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item\n.json.callback_query.message.message_id }}",
        "text": "={{ $json.callback_query.message.text }}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "254e79f4-6a98-45e7-bb23-eb7a05e0c2cb",
      "name": "убираем кнопку у перевозки на день",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2140,
        12620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}",
        "additionalFields": {}
      },
      "id": "ac3a4f9f-ea75-445a-9c6e-caa79edf1c89",
      "name": "Telegram5",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1860,
        12960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "9e1d0b61-3d07-4f4d-bb71-39653489651a",
      "name": "Сортировка перевозок и работ в карьере1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1220,
        12900
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "64406da3-0e33-49f4-8376-5e5e40f1424e",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1000,
        12900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f1c26ea0-98da-4685-83a4-979d32f63755",
              "leftValue": "={{ $('Получение введенных часов').item.json.current_quarry_hours }}",
              "rightValue": "={{ $json.required_hours }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fd2cae64-d2ba-42df-8cf0-13309250674b",
      "name": "Проверка часов",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -760,
        12900
      ]
    },
    {
      "parameters": {
        "content": "## Работы в карьере",
        "height": 1128.1889295296114,
        "width": 3053.4219888044854,
        "color": 6
      },
      "id": "2d37b3a9-f09f-4774-87fb-459f4129f133",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2700,
        12420
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "custom",
        "customFormat": "dd.MM.yyyy HH:mm:ss",
        "options": {}
      },
      "id": "041730e3-a64e-4c2d-a4c1-12617bda283b",
      "name": "форматированная дата",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        420,
        7880
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/create_refill_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"date\": \"{{ $json.formattedDate }}\",\n  \"car_number\": \"{{ $('авто1').item.json.number_car }}\",\n  \"number_of_liters\": {{ $('Execute Workflow Trigger').item.json.fuel_liters }},\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "9acc4096-7f68-4c0c-abdc-94b6f6e66c64",
      "name": "отправялем запрос",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        7880
      ]
    },
    {
      "parameters": {
        "options": {
          "timezone": "Asia/Yekaterinburg"
        }
      },
      "id": "f2b01031-9fd5-479e-97b3-67a612824d6d",
      "name": "время екатеринбург",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        200,
        7880
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "91ba95ed-cca6-4bef-af9a-e1d8672fa0db",
      "name": "меняем статус на обычный2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1096,
        7880
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.tg_id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Информация о заправке передана в систему. Спасибо!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Продолжить",
                    "additionalFields": {
                      "callback_data": "check_career"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "2cc77369-4b07-414a-b587-77eb965ab351",
      "name": "данные занесенны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        860,
        7880
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## Ввод литров",
        "height": 270.986894258945,
        "width": 1232.275685576996,
        "color": 6
      },
      "id": "8781b468-d9fb-49f3-bedb-32914cbbd602",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        7780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4c3c04f1-6431-46e9-8052-32be5be9b010",
              "leftValue": "={{ $json.weight_measure }}",
              "rightValue": "м3",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6865bbb9-80b5-4468-b94b-a260f3093e99",
      "name": "Проверка выбранного матрериала",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        100,
        8760
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите объем перевозимого материала в <b>м3</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "88660340-030b-46d6-9893-c5ac8632d1e2",
      "name": "ввод количества материала м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        360,
        8660
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Введите массу перевозимого материала в <b>тоннах</b>: Пример: 57,2",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "material_volume"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1194feca-7fcb-4df6-92e9-0052cc3a5f77",
      "name": "ввод количества материала тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        360,
        8840
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "м3",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "39846e7b-2c8a-476b-b750-592c68d5434c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.weight_measure }}",
                    "rightValue": "Тонны",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "f9b07e5f-5c50-44f1-ae02-1dc9001d60e0",
      "name": "проверяем м3 или тонны",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -300,
        1560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d6935db4-813b-4683-b6de-89ca440c23a7",
              "leftValue": "={{ $json.end_condition }}",
              "rightValue": "В течении смены",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f545f8c1-bb9f-4ab5-80bb-8bd4f6228968",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -560,
        12720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/complete_quarry_work",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('поиск текущего авто3').item.json.id }},\n  \"hours\": {{ $('Получение введенных часов').item.json.current_quarry_hours }},\n  \"count_rounds\": 1\n}     ",
        "options": {}
      },
      "id": "2a83c1a4-9721-4254-aa75-aecb693a3fe0",
      "name": "завершение карьерных работ2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        60,
        12580
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "Вы завершили работу в карьере!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Посмотреть следующую перевозку",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3133e7df-7bcf-4e12-853b-8cc57131437c",
      "name": "Выполнена работа в карьере без условия",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -180,
        12580
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "066f3458-627a-4880-8a05-94d6baceabba",
              "leftValue": "={{ $('находим рейсы без ттн').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2ea2822c-46e1-4b90-9036-39eba188bcec",
      "name": "есть ли рейсы",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        620,
        9100
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "f94be98c-f8f1-4704-98c0-334305d62c81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "no_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "2fd426ab-a8c4-4d3d-ac1c-695cb0c9155b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "add_fuel_receipt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4e2010a9-533d-40b6-8dd9-d434e1f1fb81",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "cancel_receipt_photo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4e129782-3d83-42ca-9493-3357a4d0d12f",
      "name": "данные о топливе",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -920,
        7520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/finish_shift",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"number_car\": {{ '\"' + $json.number_car + '\"' }}\n}",
        "options": {}
      },
      "id": "82074ed3-875e-4294-b569-6c5f7520bbb3",
      "name": "завершение смены",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -80,
        3460
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "text": "Смена завершена!",
        "additionalFields": {}
      },
      "id": "50979029-b536-48d7-a9cf-5eb38ebbdd11",
      "name": "смена завершена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        340,
        3460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "310a1cdf-3a80-451d-bdcf-4f0169b7255d",
      "name": "разграничение перевозок и работ в карьере",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        9100
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Вывод статистики \nПока данные берутся из Postgres",
        "height": 438.94672682336886,
        "width": 2194.2075928205836,
        "color": 6
      },
      "id": "97594285-b284-483c-9150-913666205645",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        6820
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "delete_TO",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b1a4ef45-8499-492d-9470-b55ebf665457",
      "name": "Удаление меню ТО/статистика",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2440,
        11400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst input = items[0].json;\n\n// Извлекаем данные\nconst inputData = input;\n\n// Функция для склонения слова \"тонн\"\nfunction declineTonne(number) {\n    if (number % 100 >= 11 && number % 100 <= 19) {\n        return \"тонн\";\n    } else if (number % 10 === 1) {\n        return \"тонну\";\n    } else if (number % 10 >= 2 && number % 10 <= 4) {\n        return \"тонны\";\n    } else {\n        return \"тонн\";\n    }\n}\n\n// Функция для обработки данных и формирования сообщений по тоннажу\nfunction generateTonneMessage(data) {\n    // Проверка на наличие необходимых данных\n    const diff_ton = data.diff_ton;\n\n    if (typeof diff_ton === 'undefined') {\n        return {\n            message: \"Ошибка: недостаточно данных для расчета.\"\n        };\n    }\n\n    // Расчет оставшегося объема для перевозки\n    const remainingTonnes = diff_ton;\n    const tonneWord = declineTonne(remainingTonnes);\n\n    return {\n        id: data.id || 'Неизвестный ID',\n        message: `Осталось перевезти ${remainingTonnes} ${tonneWord}.`\n    };\n}\n\n// Обработка данных\nconst result = generateTonneMessage(inputData);\n\n// Возвращаем результат для следующего кубика в формате JSON\nreturn { json: result };\n"
      },
      "id": "d85b0fab-d1a4-49d8-a2df-6c267f3fef9c",
      "name": "Текст для тонн",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3020,
        1800
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst input = items[0].json;\n\n// Извлекаем данные\nconst inputData = input;\n\n// Функция для склонения слова \"кубометров\"\nfunction declineCubicMetre(number) {\n    if (number % 100 >= 11 && number % 100 <= 19) {\n        return \"кубометров\";\n    } else if (number % 10 === 1) {\n        return \"кубометр\";\n    } else if (number % 10 >= 2 && number % 10 <= 4) {\n        return \"кубометра\";\n    } else {\n        return \"кубометров\";\n    }\n}\n\n// Функция для обработки данных и формирования сообщений\nfunction generateMessage(data) {\n    // Проверка на наличие необходимых данных\n    const diff_cubic_metre = data.diff_cubic_metre;\n\n    if (typeof diff_cubic_metre === 'undefined') {\n        return {\n            message: \"Ошибка: недостаточно данных для расчета.\"\n        };\n    }\n\n    // Расчет оставшегося объема для перевозки\n    const remainingCubicMetres = diff_cubic_metre;\n    const cubicMetreWord = declineCubicMetre(remainingCubicMetres);\n\n    return {\n        id: data.id || 'Неизвестный ID',\n        message: `Осталось перевезти ${remainingCubicMetres} ${cubicMetreWord}.`\n    };\n}\n\n// Обработка данных\nconst result = generateMessage(inputData);\n\n// Возвращаем результат для следующего кубика в формате JSON\nreturn { json: result };\n"
      },
      "id": "6547e989-1ed6-44dd-92df-7c3c3884ca2b",
      "name": "Текст для кубометров",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3140,
        2000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "56a65c23-f7c2-46db-bfcd-8287fe8833b4",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "after_stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "bbe59062-4a97-4103-b518-184012dd85f7",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_stats",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "825d2949-561f-416d-9ed7-d868a84c67ae",
      "name": "Статистика1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -900,
        7100
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "4de1e69c-543e-4a0e-b2ec-0d259d7beb3a",
      "name": "Нет доступных перевозок2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -620,
        7340
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $json.last_message_text }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "932390f1-5e2b-414f-995c-2b7d54f8549d",
      "name": "начатый рейс1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -840,
        2140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id - 1}}"
      },
      "id": "13a3634b-5c4c-4b80-a9ff-00a9e929f077",
      "name": "Удаление статистики1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        -200,
        7260
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, вы завершили рейс, хотите начать следующий?\n<b>{{ $('находим какая сейчас перевозка').item.json.place_from[1] }} - {{ $('находим какая сейчас перевозка').item.json.place_to[1] }}\n{{ $('находим какая сейчас перевозка').item.json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}</b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Начать рейс",
                    "additionalFields": {
                      "callback_data": "pick"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Приступить к следующей перевозке",
                    "additionalFields": {
                      "callback_data": "transportation_to_tail"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "b3eb5b80-8e14-4137-ae3b-0ad984ab4e41",
      "name": "Рейс завершен без условий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2320,
        1700
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "607a94f0-3141-40da-b409-1c7eb266d96c",
      "name": "айди последнего сообщения",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2580,
        1540
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "02114297-ac44-47df-b14f-994718aeca41",
      "name": "айди последнего сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        120,
        13100
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "de40aad5-61f5-4c99-bb7a-c3de7fbf724c",
      "name": "айди последнего сообщения2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1960,
        2320
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "driver[1]",
        "options": {}
      },
      "id": "6c419a99-df4a-4b21-b9d9-96df1ed37662",
      "name": "Remove Duplicates1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        740,
        2460
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nlet allItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n    const { transportations, full_quarry_work } = items[i].json;\n\n    if (transportations && Array.isArray(transportations)) {\n        allItems = allItems.concat(transportations);\n    }\n    if (full_quarry_work && Array.isArray(full_quarry_work)) {\n        allItems = allItems.concat(full_quarry_work);\n    }\n}\n\nallItems = allItems.filter(item => item.hasOwnProperty('sequence'));\nallItems.sort((a, b) => a.sequence - b.sequence);\n\nreturn allItems.map(item => ({ json: item }));\n"
      },
      "id": "4e8e9fe2-ec95-443a-b0b1-d4648121d5dc",
      "name": "Сортировка перевозок и работ в карьере2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "let combinedMessages = \"\";\n\nfor (const item of $(\"Filter1\").all()) {\n  const data = item.json;\n\n  const isQuarryWork = data.quarry && data.quarry.length > 1;\n\n  let message = \"\";\n\n  if (isQuarryWork) {\n    const quarry = data.quarry[1];\n    const requiredHours = data.required_hours || 0;\n    const comment = data.comment;\n\n    message = `Работа в карьере - <b>${quarry}</b>`;\n    if (data.end_condition === \"По часам\") {\n      message += `\\nНеобходимое количество часов - <b>${requiredHours}</b>`;\n    }\n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n    message += `\\n\\n`;\n  } else {\n    const sender = data.sender && data.sender.length > 1 ? data.sender[1] : \"\";\n    const partner = data.partner && data.partner.length > 1 ? data.partner[1] : \"\";\n    const placeFrom = data.place_from && data.place_from.length > 1 ? data.place_from[1] : \"\";\n    const placeTo = data.place_to && data.place_to.length > 1 ? data.place_to[1] : \"\";\n    const material = data.material && data.material.length > 1 ? data.material[1] : \"\";\n    material = material.replace(/\\s*\\(.*?\\)\\s*/g, \"\");\n    const comment = data.comment;\n    const endCondition = data.end_condition;\n    const requiredCubicMetre = data.required_cubic_metre || 0;\n    const requiredTon = data.required_ton|| 0;\n\n    let route = placeFrom && placeTo ? `${placeFrom}-${placeTo}` : \"\";\n\n    if (sender) message += `Отправитель - <b>${sender}</b>`;\n    if (partner) message += `\\nПолучатель - <b>${partner}</b>`;\n    if (route) message += `\\nМаршрут - <b>${route}</b>`;\n    if (material) message += `\\nМатериал - <b>${material}</b>`;\n    \n    if (comment !== false) {\n      message += `\\nКомментарий - <i>${comment}</i>`;\n    }\n\n    if (endCondition === \"По перевезенным кубометрам\" && requiredCubicMetre > 0) {\n      message += `\\nТребуемое количество кубометров по перевозке - <b>${requiredCubicMetre}</b>`;\n    }\n\n    if (endCondition === \"По перевезенным тоннам\" && requiredTon > 0) {\n      message += `\\nТребуемое количество тонн по перевозке - <b>${requiredTon}</b>`;\n    }\n\n    message += `\\n\\n`;\n  }\n\n  combinedMessages += message;\n}\n\nreturn [{ json: { combinedMessages: combinedMessages.trim() } }];"
      },
      "id": "135a10cf-387b-4cc2-8f7d-4fa6a1880fef",
      "name": "преобразуем в сообщение1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        1300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('находим какая сейчас перевозка').item.json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "966f91de-5633-4f42-947f-f1ea75b1d289",
                    "leftValue": "={{ $('находим какая сейчас перевозка').item.json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "1be0128e-1d37-465a-81a0-5c9ebcb46ad5",
      "name": "метры или тонны?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1980,
        1560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5fae1a58-fae7-4589-85b3-5bb638d4e529",
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "20c0d052-87ce-4670-b36a-66ba05cdc2fb",
      "name": "тонны или м3?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2780,
        2040
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "end_round_message_id": "={{ $json.result.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "845c9b33-b851-4817-bdbc-6a7c24e121ee",
      "name": "айди последнего сообщения3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3880,
        2020
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "6fb344b8-2202-44d1-b21d-8f672278767c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_ok",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "68071ac7-12d9-4440-97e3-ca534a0322b2",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "menu_wrong",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4d0a691f-a32b-4742-8c0b-535d86ecbc23",
      "name": "кнопки меню ТО",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1080,
        2420
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "status": "authorized"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "10b9cc51-3c2b-4bef-a77e-bc2570cfaeb9",
      "name": "меняем статус на дефолтный",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        3680
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.error }}",
                    "rightValue": "Not found quarry_work or transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "c2df028c-a5b5-4b7b-8f0d-d090805cc35f",
      "name": "ошибки",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.1,
      "position": [
        60,
        940
      ]
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $('Execute Workflow Trigger').item.json.callback_query.id }}",
        "additionalFields": {
          "show_alert": true,
          "text": "=В Odoo для авто {{ $('находим машину по odoo id').item.json.number_car }} не найдена перевозка или работа в карьере.\n\nОбратитесь к диспетчеру или логисту"
        }
      },
      "id": "a909e4c0-f608-49ac-ac30-0b617c92f8b3",
      "name": "Нет перевозки или работы в карьере",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        460,
        1000
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept_quarry",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c9613d4-cb1a-4598-9a01-875cff830f42",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a045e192-717d-46b0-bc5e-cfd48bda407a",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_quarry_hours",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "d922ac87-5b93-41cf-8429-3279f3798557",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "95b4736f-c6f3-45f9-bfd7-e82230f3eadd",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "finish_quarry_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "3ea7859e-716c-4f6a-b0a3-ed4d32c80710",
      "name": "Работы в карьере",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2580,
        12660
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "HO89Vdk8fj1rlhEO",
          "mode": "id"
        },
        "options": {}
      },
      "id": "2c4c8cb2-b656-4bf5-a7c2-8422579bc3e0",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -2840,
        12960
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "odoo_id",
              "value": "={{ $json.id }}"
            },
            {
              "column": "logist_notifications",
              "value": "={{ true }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0bb7f5e9-1cfa-4971-bfc7-980e0eb945cf",
      "name": "поиск тг айди логистов",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2040,
        680
      ],
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.time_of_start }}",
        "format": "custom",
        "customFormat": "HH:mm dd.MM.yyyy",
        "options": {
          "timezone": true
        }
      },
      "id": "95ca0fc3-ad43-435d-a223-c01763a5a95f",
      "name": "форматируем время в удобный формат1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1580,
        680
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.tg_id }}",
        "text": "={{ $('находим машину по odoo id').item.json.number_car }} - {{ $('находим машину по odoo id').item.json.driver_id[1] }}\nВремя взятия рейса - {{ $('форматируем время в удобный формат1').item.json.formattedDate }}\n{{ $('начало рейса').item.json.place_from[1] }} - {{ $('начало рейса').item.json.place_to[1] }}\n{{ $('начало рейса').item.json.material[1] }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "62599a0f-c6e4-407a-911d-6a1a6d1682b5",
      "name": "отправка сообщения о начале рейса логистам",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2260,
        680
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "content": "## уведомление логистов о начале рейса",
        "height": 248.5360343562641,
        "width": 1421.375366828862
      },
      "id": "53f78ac6-d013-42d0-a5cf-5212995d047c",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        620
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "3ebe3a00-2ea5-4398-8086-af27d4605e8c",
      "name": "Нет доступных перевозок3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1420,
        2900
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0af1d49e-8c5b-4078-a280-af4fb659d5ee",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "1f29e80f-3b8e-4541-86d6-22335355439d",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1180,
        2940
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "efeb814f-bac9-4163-b768-f227f63209c8",
      "name": "Нет доступных перевозок4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1420,
        3100
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Водитель",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0af1d49e-8c5b-4078-a280-af4fb659d5ee",
                    "leftValue": "={{ $json.job_title }}",
                    "rightValue": "Наёмник",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "172fac98-d638-475c-9eb3-db06535b47ac",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1460,
        4260
      ]
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "a8f983df-6fa6-4f37-ac8a-7b8fd4bd30aa",
      "name": "Telegram4",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        4320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9da89f9b-983b-4b50-8e99-6f7d2bb3df49",
      "name": "Нет доступных перевозок7",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        4320
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Статистика",
                    "additionalFields": {
                      "callback_data": "stats"
                    }
                  },
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "d13d668e-4e90-49c7-8868-c20b7b868388",
      "name": "Нет доступных перевозок",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1680,
        4220
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "На данный момент нет назначенных перевозок!",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "42fb0979-bbc9-4257-a976-8501b88e5213",
      "name": "Нет доступных перевозок1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1660,
        4460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "deleteMessage",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
      },
      "id": "2c15534d-eca1-446b-9124-bbecb9eb6bfb",
      "name": "Telegram6",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1900,
        4500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "На данный момент нет назначенных перевозок!",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Проверить назначенные перевозки",
                    "additionalFields": {
                      "callback_data": "перевозки"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить смену",
                    "additionalFields": {
                      "callback_data": "complete_work_transportation"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "22e0b761-f40c-4732-a7b6-f1b0d7429c01",
      "name": "Нет доступных перевозок8",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2080,
        4500
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6e8334de-8c33-406e-adfb-2f8e35f2ccb4",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bec5afdb-bc36-4fe2-844d-44988d07ee11",
      "name": "есть рейсы за сегодня?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2560,
        9080
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "0a571bde-9d17-4adb-bd42-2206c2330748",
      "name": "счёт рейсов",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2780,
        8960
      ]
    },
    {
      "parameters": {
        "jsCode": "var data = $('создаём динамически инлайн кнопки2').all()[0].json;\ndata.message.text = 'Количество завершенных рейсов: ' + $('счёт рейсов').all()[0].json.count_id + '\\n' + data.message.text;\nreturn data;"
      },
      "id": "2f530605-08f3-443f-a935-91ca76bf6f41",
      "name": "форматируем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2980,
        8960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.message }}",
        "options": {}
      },
      "id": "19b24f87-21f9-4cc1-bc06-0f187f7b979d",
      "name": "отправляем сообщение 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3180,
        9080
      ]
    },
    {
      "parameters": {
        "jsCode": "var data = $('создаём динамически инлайн кнопки2').all()[0].json;\nreturn data;"
      },
      "id": "14911eb6-45a5-45af-a4d6-332157e4152c",
      "name": "форматируем1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        9140
      ]
    },
    {
      "parameters": {
        "includeTime": false,
        "options": {
          "timezone": "Asia/Vladivostok"
        }
      },
      "id": "91f8d1a9-1567-48b9-85b7-a07a5d265da3",
      "name": "сегодняшнее число",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1720,
        9100
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "bc994ef5-1a90-419c-93a5-6297656e0e5d",
      "name": "Объединение рейсов в один файл",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        400,
        6880
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для обработки данных\nfunction calculateTotals(data) {\n    return data.map(entry => {\n        const { id, quarry_hours, price_for_driver, date, start_time } = entry;\n\n        // Если price_for_driver равен 0 или false, заработок равен 0\n        if (!price_for_driver) {\n            // Добавляем 10 часов к дате\n            const adjustedDate = new Date(start_time);\n            adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n            return {\n                id: id,\n                quarry_hours: quarry_hours,  // Количество карьерных часов\n                total: 0,  // Заработок = 0\n                date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n                original_date: date  // Сохраняем оригинальную дату\n            };\n        }\n\n        // Цена водителя уже итоговая, просто передаем её в результат\n        const total = parseFloat(price_for_driver);\n\n        // Добавляем 10 часов к дате\n        const adjustedDate = new Date(start_time);\n        adjustedDate.setHours(adjustedDate.getHours() + 10); // Прибавляем 10 часов\n\n        return {\n            id: id,\n            quarry_hours: quarry_hours,  // Количество карьерных часов\n            total: total,  // Общий заработок = price_for_driver\n            date: adjustedDate.toISOString(),  // Для вывода используем скорректированную дату\n            original_date: date  // Сохраняем оригинальную дату\n        };\n    });\n}\n\n// Обрабатываем входные данные\nconst processedData = calculateTotals(inputData);\n\n// Возвращаем результат в формате JSON для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "51c0f7f3-7e81-4ff2-9e3a-0aa5e276f856",
      "name": "считаем часы и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        7080
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные из предыдущего кубика\nconst inputData = items.map(item => item.json);\n\n// Функция для добавления 10 часов ко времени\nfunction addHoursToTime(timeStr, hours) {\n    const dateObj = new Date(timeStr.replace(\" \", \"T\")); // Преобразуем строку времени в объект Date\n    dateObj.setHours(dateObj.getHours() + hours); // Добавляем 10 часов\n    return dateObj.toISOString().replace(\"T\", \" \").split(\".\")[0]; // Преобразуем обратно в строку и убираем миллисекунды\n}\n\n// Функция для подсчета заработка и количества рейсов по датам\nfunction calculateTotalsByDate(data) {\n    const totalsByDate = {};\n\n    data.forEach(entry => {\n        entry.data.forEach(round => {\n            const { driver_rate, driver_with_trailer, time_of_start } = round;\n\n            // Добавляем 10 часов ко времени\n            const adjustedTime = addHoursToTime(time_of_start, 10);\n\n            // Извлекаем только дату из скорректированного времени\n            const date = adjustedTime.split(\" \")[0];\n\n            // Инициализируем данные для каждой новой даты\n            if (!totalsByDate[date]) {\n                totalsByDate[date] = {\n                    total_count: 0,  // Общее количество рейсов\n                    total_earnings: 0  // Общий заработок\n                };\n            }\n\n            // Увеличиваем количество рейсов\n            totalsByDate[date].total_count++;\n\n            // Увеличиваем сумму заработка\n            totalsByDate[date].total_earnings += driver_rate;\n        });\n    });\n\n    // Преобразуем объект в массив для удобства обработки\n    return Object.keys(totalsByDate).map(date => ({\n        date: date,\n        total_count: totalsByDate[date].total_count,\n        total_earnings: totalsByDate[date].total_earnings\n    }));\n}\n\n// Обрабатываем данные\nconst processedData = calculateTotalsByDate(inputData);\n\n// Возвращаем результат для следующего кубика\nreturn processedData.map(entry => ({ json: entry }));\n"
      },
      "id": "ebf0389b-48ea-4f36-8c63-1ee1a2ef8d88",
      "name": "считаем по дням кол-во рейсов и заработок",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        6880
      ]
    },
    {
      "parameters": {},
      "id": "0bb101ad-289a-4f1b-a8c3-acc72f532b10",
      "name": "соединяем рейсы и работы",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        900,
        6960
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем входные данные через items\nconst inputData = items.map(item => item.json);\n\n// Задаем текущую дату для тестирования\nconst today = new Date(); //'2024-10-11T00:00:00'\ntoday.setMinutes(today.getMinutes() + today.getTimezoneOffset() + (10 * 60));\n\n// Определяем начало текущей недели (понедельник текущей недели)\nconst startOfWeek = new Date(today);\nstartOfWeek.setDate(today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1)); // Учитываем воскресенье как последний день недели\n\n// Функция для обнуления времени в дате\nfunction resetTime(date) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0); // Убираем компоненты времени\n    return newDate;\n}\n\n// Функция для фильтрации данных по дням\nfunction getDailyReport(date) {\n    let totalCount = 0;      // Количество рейсов\n    let totalQuarryHours = 0; // Карьерные часы\n    let totalEarnings = 0;    // Общий заработок за день\n\n    const resetDate = resetTime(date);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        // Сравниваем даты без учета времени\n        if (entryDate.toISOString().split('T')[0] === resetDate.toISOString().split('T')[0]) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;  // Суммируем количество рейсов\n                totalEarnings += entry.total_earnings; // Суммируем заработок\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours; // Суммируем карьерные часы\n                totalEarnings += entry.total; // Суммируем заработок за работы в карьере\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Функция для генерации отчета по дням недели\nfunction getCurrentWeekReport() {\n    let textMessage = '📊 <b>Отчет за текущую неделю</b>\\n\\n';\n\n    let currentDate = new Date(today);\n    while (currentDate >= startOfWeek) {\n        const dayReport = getDailyReport(currentDate);\n        const dayOfWeek = currentDate.toLocaleDateString('ru-RU', { weekday: 'long' });\n        const dateStr = currentDate.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' });\n\n        textMessage += `📅 <b>${dayOfWeek} (${dateStr}):</b>\\n`;\n        if (dayReport.count === 0 && dayReport.quarry_hours === 0) {\n            textMessage += 'Не было перевозок\\n\\n';\n        } else {\n            textMessage += `🚚 Количество рейсов: ${dayReport.count}\\n`;\n            textMessage += `🕑 Карьерные часы: ${dayReport.quarry_hours} ч\\n`;\n            textMessage += `💵 Заработок: ${dayReport.total} руб.\\n\\n`;\n        }\n\n        // Переходим к предыдущему дню\n        currentDate.setDate(currentDate.getDate() - 1);\n    }\n\n    return textMessage;\n}\n\n// Функция для получения отчета за месяц\nfunction getMonthlyReport(startDate, endDate) {\n    let totalCount = 0;\n    let totalQuarryHours = 0;\n    let totalEarnings = 0;\n\n    const start = resetTime(startDate);\n    const end = resetTime(endDate);\n\n    inputData.forEach(entry => {\n        const entryDate = resetTime(new Date(entry.date));\n\n        if (entryDate >= start && entryDate <= end) {\n            if (entry.total_count !== undefined && entry.total_earnings !== undefined) {\n                totalCount += entry.total_count;\n                totalEarnings += entry.total_earnings;\n            } else if (entry.quarry_hours !== undefined && entry.total !== undefined) {\n                totalQuarryHours += entry.quarry_hours;\n                totalEarnings += entry.total;\n            }\n        }\n    });\n\n    return {\n        count: totalCount,\n        quarry_hours: totalQuarryHours,\n        total: totalEarnings\n    };\n}\n\n// Определяем начало и конец текущего месяца\nconst startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Последний день месяца\n\n// Получаем отчет за текущий месяц\nconst currentMonthReport = getMonthlyReport(startOfMonth, today);\n\n// Проверка на вывод отчета за прошлый месяц\nlet previousMonthText = '';\nconst firstOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nconst isInFirstTenDays = today >= firstOfMonth && today < new Date(today.getFullYear(), today.getMonth(), 11, 5, 0, 0);\n\n// Если нужно вывести отчет за прошлый месяц\nif (isInFirstTenDays) {\n    const startOfPreviousMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n    const endOfPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0); // Последний день прошлого месяца\n\n    const previousMonthReport = getMonthlyReport(startOfPreviousMonth, endOfPreviousMonth);\n\n    previousMonthText = `\n📊 <b>Отчет за прошлый месяц</b>\n\n🚚 Количество рейсов: ${previousMonthReport.count}\n🕑 Карьерные часы: ${previousMonthReport.quarry_hours} ч\n💵 Заработок: ${previousMonthReport.total} руб.\\n`;\n}\n\n// Формируем отчет за текущую неделю\nlet textMessage = getCurrentWeekReport();\n\n// Формируем отчет за текущий месяц\nlet currentMonthText = `📊 <b>Отчет за текущий месяц</b>\n\n🚚 Количество рейсов: ${currentMonthReport.count}\n🕑 Карьерные часы: ${currentMonthReport.quarry_hours} ч\n💵 Заработок: ${currentMonthReport.total} руб.\\n`;\n\n// Добавляем месячные отчеты\ntextMessage += currentMonthText;\n\n// Добавляем отчет за прошлый месяц в самом конце, если это необходимо\nif (previousMonthText) {\n    textMessage += previousMonthText;\n}\n\n// Возвращаем результат в формате JSON\nreturn [\n    {\n        json: {\n            message: textMessage\n        }\n    }\n];\n"
      },
      "id": "cd0cc9c6-c048-4f22-a7dc-06d88a83163a",
      "name": "сортируем все данные, считаем итоги, преобразуем в сообщение",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        6960
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "={{ $json.message }}",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "За месяц",
                    "additionalFields": {
                      "callback_data": "month_stats_inline"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_stats"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "5c9744eb-1f5b-4724-aa4d-26ded413b17f",
      "name": "вывод недельной статистики",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1360,
        6960
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {},
      "id": "2fef48e3-4335-4465-8eef-93a8ce9593a3",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -520,
        6980
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток кубометров по текущей перевозке - {{ $json.diff_cubic_metre }}\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "3c896167-aa20-4847-8c01-9ca5f80d1c79",
      "name": "начатый рейс м3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        460
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\nОстаток по текущей перевозке - {{ $json.diff_ton }} т.\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "fd084575-bf7b-406d-9783-7b1854cde83f",
      "name": "начатый рейс тонны",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        620
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=Отлично, рейс активен. \n<i>\n{{ $json.place_from[1] }} - {{ $json.place_to[1] }}\n{{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}\n</i>\nПо его завершению нажмите на кнопку <b><i>\"Завершить рейс\"</i></b>",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Навигатор",
                    "additionalFields": {
                      "callback_data": "navigator"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить рейс",
                    "additionalFields": {
                      "callback_data": "Finish"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Отменить рейс",
                    "additionalFields": {
                      "callback_data": "cancel_round"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "4e2908e0-e2d6-433f-b092-f4ff041611bf",
      "name": "начатый рейс без условий",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        460,
        780
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным кубометрам",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "966f91de-5633-4f42-947f-f1ea75b1d289",
                    "leftValue": "={{ $json.end_condition }}",
                    "rightValue": "По перевезенным тоннам",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "55846192-d284-4b95-801a-29bbae106897",
      "name": "метры или тонны?1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        160,
        620
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Вы уверены, что готовы завершить рейс?",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Завершить",
                    "additionalFields": {
                      "callback_data": "check_material_volume"
                    }
                  },
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_pick"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "8ce050b4-f0b7-4a3c-a263-a101f1b9862e",
      "name": "Подтверждение завершения",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        960,
        1800
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.from.id }}",
            "last_message_text": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.text }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "60ffe447-5662-4616-ad8e-3f3f8c3bbab1",
      "name": "сохраняем текст сообщения1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        780,
        1800
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "upload_sertificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_certificate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "aa099f5f-3f70-427e-b099-02df695e132f",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"TS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef15479-f781-4cf6-8452-ac25023ba248",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_TTN",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5daaa096-aa68-4239-be97-b65bd575add0",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_weight",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d301eb78-6a62-4223-ad44-d3f85f59eb7e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "={{ \"NTS_\" }}",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "a1379383-2784-428a-a921-1cd73dce1acd",
      "name": "ТТН и весовые в конце смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1060,
        9240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "308060bc-fb9d-4379-af49-994a6c61365b",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "d8cd196a-394b-4169-aadf-fd3499170c52",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "979f3827-d80f-4699-a20d-7723b089e779",
      "name": "если не равно нулю",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2940,
        3054
      ]
    },
    {
      "parameters": {
        "jsCode": "const groupedFlights = {};\n\n$('Loop Over Items').all().forEach(it => {\n  var entry = it.json;\n  const carName = entry.car[1]; // Извлекаем название автомобиля\n  const flightInfo = entry.transportation !== undefined ? entry.transportation[1].substring(11) : entry.shift[1].substring(11); // Извлекаем информацию о рейсе\n\n  if (!groupedFlights[carName]) {\n    groupedFlights[carName] = [];\n  }\n\n  groupedFlights[carName].push(flightInfo);\n});\n\n// Формирование итоговой строки\nlet result = '';\n\nfor (const [car, flights] of Object.entries(groupedFlights)) {\n  result += `${car}:\\n`;\n  result += flights.join('\\n') + '\\n\\n';\n}\n\n// Вывод результата\nreturn {res: result};"
      },
      "id": "e33f6f1d-e442-4a3c-93eb-6cf397edbc53",
      "name": "группируем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3160,
        3034
      ]
    },
    {
      "parameters": {
        "jsCode": "function getTransportationWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  let transportationWord;\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    transportationWord = \"перевозка\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    transportationWord = \"перевозки\";\n  } else {\n    transportationWord = \"перевозок\";\n  }\n\n  return `${count} ${transportationWord}`;\n}\n\n// Функция для склонения слова \"запланировано\"\nfunction getPlannedWord(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n\n  if (lastDigit === 1 && lastTwoDigits !== 11) {\n    return \"запланирована\";\n  } else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits < 12 || lastTwoDigits > 14)) {\n    return \"запланированы\";\n  } else {\n    return \"запланированы\";\n  }\n}\nvar count = $('итоговое кол-во').all()[0].json.count_id;\nvar ans = getPlannedWord(count) + ' ' + getTransportationWord(count);\nreturn {'trans': ans}"
      },
      "id": "39b124a9-f421-4460-bb8b-ab2037c634dc",
      "name": "склоняем",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        3140
      ]
    },
    {
      "parameters": {
        "content": "## Вывод на завтра",
        "height": 902.7271656633407,
        "width": 1668.9407629976936,
        "color": 6
      },
      "id": "fba64347-74c6-4db3-91e1-243afe249a55",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        2920
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "f0fddbe6-774f-4485-8158-5e1f4c333287",
      "name": "итоговое кол-во",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2740,
        3074
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
            "last_message_text": "={{ $('группируем').item.json.res }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1abc4a4d-889c-4d4c-ad81-7e43f435dba2",
      "name": "сохраним текст",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3360,
        2960
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').all()[0].json.callback_query.from.id }}",
        "text": "=Уважаемый водитель, на завтра у вас {{ $json.trans }}!\n\n{{ $('группируем').item.json.res }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "id": "5966c182-30da-4938-ae24-5791d4695326",
      "name": "отправим сообщение",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3560,
        3140
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            },
            {
              "name": "start_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            },
            {
              "name": "end_date",
              "value": "={{ $today.plus(1, 'days').format('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "691a0ba9-13c9-4b9a-a769-8c6c037acaf1",
      "name": "график на завтра",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        3380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d43dbc66-2b4b-4df6-b25a-2c1fd1a22f32",
              "leftValue": "={{ $json.transportation[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "33e51aa9-fb48-4b5c-8727-9c6ad2c0f470",
      "name": "на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3440,
        3314
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c53394e2-1089-482a-a9bc-66194a5588b8",
              "leftValue": "={{ $json.shift[1].slice(0, 10) }}",
              "rightValue": "={{ $today.plus(1, 'days') }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f1c0fa9c-8569-4599-b9e7-fcf7937eaa94",
      "name": "работы на завтра1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        3440,
        3554
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_quarry_work_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bcaaa29f-3f60-4018-973e-1917a96ddc83",
      "name": "работы",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        3574
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "quarry_works",
        "options": {}
      },
      "id": "29326336-e171-4130-bc6d-92392917daa5",
      "name": "Split Out2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3220,
        3554
      ]
    },
    {
      "parameters": {},
      "id": "ccca3515-317d-4855-9657-976386ff55cf",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3680,
        3420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1770fbcd-a35b-4d0f-bacc-4ac452e35b88",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2440,
        3334
      ]
    },
    {
      "parameters": {},
      "id": "cc9c3472-67e8-4a55-a373-03168f34105f",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2760,
        3454
      ]
    },
    {
      "parameters": {},
      "id": "0f4bb69f-c4f9-4895-a056-57d141d2ed1a",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4040,
        3594
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "car_id",
              "value": "={{ $json.car[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cbcb4ea4-64fe-4251-9147-5f07c3d0a67b",
      "name": "рейсы2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3000,
        3334
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "4857df1d-7106-4c79-a2d9-e242a192fb07",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3220,
        3314
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
            "round_active_msg_id": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_quarry_hours",
              "displayName": "current_quarry_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_round_message_id",
              "displayName": "end_round_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_message_text",
              "displayName": "last_message_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_notifications",
              "displayName": "logist_notifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "creating_transportation",
              "displayName": "creating_transportation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "round_active_msg_id",
              "displayName": "round_active_msg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "c9531a27-000f-48d3-b194-d0982e2d48dd",
      "name": "айди сообщения в бд",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        620
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "58c3459b-136b-428e-88dd-8fcefbb5521b",
      "name": "находим машину по odoo id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -420,
        840
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "23d4c1b6-d927-4b55-909a-8b838c90713b",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "527f3442-0ea6-45e2-87bb-4995438b8dc2",
      "name": "выполняющиеся рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1360,
        680
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $('находим машину по odoo id').item.json.id }}\n} ",
        "options": {}
      },
      "id": "b40ea9ad-e0b0-4878-ac7b-d0593ada1dd5",
      "name": "все рейсы по авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        860,
        680
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_logists",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6d989784-3830-43a8-8d3a-7ac34c19727a",
      "name": "поиск логистов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1800,
        680
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "45d0993d-2216-4d8f-a2d2-65303fd02daf",
      "name": "разделяем рейсы1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1100,
        680
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "faa67c4a-825b-4c1b-9648-36cdda4c6cc8",
      "name": "находим машину по odoo id2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -500,
        1560
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "99963c05-90e0-4dd3-94e2-dc9a7775831c",
      "name": "разделяем рейсы",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        420,
        1160
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $('Filter1').item.json.id }}\n}  ",
        "options": {}
      },
      "id": "399d9641-550f-4bc2-ac05-344e98835219",
      "name": "ищем рейсы по перевозке",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        180,
        1160
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('находим машину по odoo id2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6ed365e0-479c-4e94-b987-aa3f8ca01a3c",
      "name": "находим рейсы по машине9",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        860,
        1160
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportations.id }}\n}  ",
        "options": {}
      },
      "id": "46880810-21db-4fda-be16-528c387e1bf4",
      "name": "ищем рейсы по перевозке1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1760,
        900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "bb5aa50b-6d86-430b-9e90-97f0e702c6a4",
      "name": "разделяем рейсы2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2000,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('находим машину по odoo id2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Назначен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3dc3bf6e-4980-4b22-a73d-ebfb74b83949",
      "name": "находим рейсы по машине10",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2200,
        900
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $('находим машину по odoo id2').item.json.current_transportation[0] }}\n}  ",
        "options": {}
      },
      "id": "3362df53-5e2c-4ec5-b896-5711ac85cdc9",
      "name": "ищем рейсы по перевозке2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1180,
        1540
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "7c328b0d-f2d7-499b-a132-982506e578dd",
      "name": "разделяем рейсы3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1280,
        1740
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "a000df08-1df2-448a-bfa3-ad57713c92d5",
      "name": "поиск текущего авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "pick",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ab29fac3-d8a1-4277-9aac-c46a8ca3e960",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "1fb76a2e-1b73-4555-8e9c-fb47193d2c4b",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "Finish",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e7143341-d29c-49ad-8647-8595445df788",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "accept",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3a3f51d5-25e1-4bec-a3eb-9615ed6e6ce3",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_final",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e71b3d59-f632-4d5e-a233-7cf24d288f7c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_pick",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "65e1efab-9cf7-48be-9a26-fe2f841a39d5",
      "name": "кнопки принятия и завершения заказа",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1320,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}  ",
        "options": {}
      },
      "id": "2e1dbb35-97ac-45c4-b199-b12c92617944",
      "name": "рейсы по авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -80,
        1880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "48c9335b-ea93-455b-86bf-b0089a0f36cb",
      "name": "выполняющиеся рейсы",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        380,
        1880
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "1c90f4ad-c99f-45d5-8752-3019b86c6b24",
      "name": "разделяем рейсы4",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        1880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "10d765e2-7823-4c6a-9e45-61bd985dd131",
      "name": "авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        2100
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "ef152ae5-36d3-48ff-8898-95ddcc2328b5",
      "name": "сами перевозки",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2180,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportations[0].transportation }}\n} ",
        "options": {}
      },
      "id": "d1a1bc5b-c31b-43be-9a1a-704eaf678583",
      "name": "перевозка из очереди",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1960,
        2040
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "747273ce-34e7-4af3-a612-7b84939eac8f",
      "name": "поиск текущего авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -840,
        2440
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_round_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "round_id",
              "value": "={{ $json.rounds }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4e02677d-b63e-495c-a920-245057ef78c0",
      "name": "получение рейсов",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        500,
        2180
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7461c3bc-d00a-4c55-abeb-1df6fa8be61f",
              "leftValue": "={{ $json.transportation_round[0].driver[0] }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            },
            {
              "id": "1f7d17a3-1371-4099-accc-99a175e9238a",
              "leftValue": "={{ $json.transportation_round[0].driver[1] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f6b9688-0eb8-4b0b-9c87-b3ba2a3fbe69",
      "name": "рейсы в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        720,
        2180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "rounds",
        "options": {}
      },
      "id": "5534210f-90da-4062-88fa-2b532e11c127",
      "name": "Split Out3",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        500,
        2480
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "3985ab6f-0b81-43e7-9a79-e09108c8a8d5",
      "name": "перевозки+имена",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        920,
        2320
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7fdf6716-4f2f-411c-a3c0-bdce9f1fac8f",
      "name": "водитель/наёмник",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        920,
        2940
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "3dfd8ac4-92ec-4e7e-8b0b-07e2cf990d03",
      "name": "номер автомобиля",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        3460
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "career",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0911da09-ad85-466d-b6f4-bc8a1bb02a2c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "final_complete_work",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8d5ad2d4-5afd-4ea6-98d0-ba7aa53e84af",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "check_fuel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e53fa5d5-a88b-4f37-9bf0-46d2099b8322",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "complete_work_transportation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "33517680-2d1b-41d1-81ee-ac5dfc9c40b6",
      "name": "кнопки завершения смены",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1100,
        3440
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "97262e67-b307-469c-a867-ce15a26405af",
      "name": "находим машину по odoo id9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -580,
        3880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driver_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.odoo_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4f651ff0-b44d-44d5-ac73-1e191463e125",
      "name": "водитель/наёмник1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1240,
        4260
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "2641b72c-e583-4184-9196-90ccd21eb5a2",
      "name": "номер авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        4220
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "04652bb5-cfc3-42f1-aee2-cacdc0e1841b",
      "name": "номер авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        4580
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"start_date\": \"{{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(100, 'years').format('yyyy-MM-dd') }}\"\n} ",
        "options": {}
      },
      "id": "808c3c36-b512-4651-a364-cbe4e95d884a",
      "name": "получаем заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        4220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4587f5de-1372-4033-b5c9-25685e0ea9a4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "К выполнению",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a544956-b46a-4818-a926-59254ff6e63f",
      "name": "заявки \"к выполнению\"",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        120,
        4220
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenances_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"start_date\": \"{{ new Date(1970).toDateTime().format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(100, 'years').format('yyyy-MM-dd') }}\"\n} ",
        "options": {}
      },
      "id": "bb5d8f03-bc6b-4be1-804a-bc93b16cfdeb",
      "name": "получаем заявки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        4580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4587f5de-1372-4033-b5c9-25685e0ea9a4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "В работе",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e00b60e6-2d88-4e7c-a1e1-5e05c065124f",
      "name": "заявки \"в работе\"",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        100,
        4580
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenance_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"maintenance_id\": {{ $json.TO_number }}\n}",
        "options": {}
      },
      "id": "aefa70ed-24ee-494f-bb70-259eee14a41e",
      "name": "получим актуальный статус заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        5240
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_mechanics",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "5ab29d33-5f27-4258-b85d-f5516a0a4f04",
      "name": "поиск механиков1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1140,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_driver_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n}",
        "options": {}
      },
      "id": "2c9494f8-09a1-42e2-ac90-3a9507ef1136",
      "name": "данные водителя",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "0ed74336-2793-4534-bf47-c50164ed333f",
      "name": "данные авто",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2000,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_maintenance_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"maintenance_id\": {{ $('Execute Workflow Trigger').item.json.end_request_id }}\n}",
        "options": {}
      },
      "id": "4d499f35-b418-4f06-a37a-59ec476d0e38",
      "name": "текст заявки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2220,
        5700
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "f4fc05dc-0ac7-4446-a176-0e6281cc2ced",
      "name": "Получаем информацию о машине",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        5880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://everest.lamart.site/update_oil_schedule",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }},\n  \"value\": {{ $json.odometer + 15000 }}\n}",
        "options": {}
      },
      "id": "6a30d1b2-24ea-40a4-be66-dc9f4bdd486a",
      "name": "Обновление пробега при котором нужна будет замена масла1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        700,
        5880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "cd8a9f7a-9c8c-4373-9894-c8c461f5f5fa",
      "name": "ищем автомобиль с таким же сотрудником1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -400,
        6440
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n}  ",
        "options": {}
      },
      "id": "a3355fe3-8bd8-4748-93de-6595d0ca34f2",
      "name": "получаем рейсы по водителю1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        6880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0d370ade-d290-4e87-8089-096b280c37ee",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cf4c00aa-e165-4348-8c55-dc7df8122fcd",
      "name": "завершенные рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        160,
        6880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_quarry_works_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n}  ",
        "options": {}
      },
      "id": "f325f062-4a63-454f-b643-24b3a68b294b",
      "name": "получаем работы по водителю1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -140,
        7100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "0a0f5541-f568-40e4-a600-ec870666b883",
      "name": "разделяем рейсы5",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -60,
        6880
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "549d8ef1-eedd-479d-93ab-4a040490728f",
      "name": "авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -40,
        7880
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "f30f1dae-02c4-41ee-ba59-66c990e86f11",
      "name": "номер авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -640,
        9120
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation[0] }}\n}",
        "options": {}
      },
      "id": "7b6df49c-b43f-4187-9d71-fac8bd7005c5",
      "name": "перевозки",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1100,
        9100
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "65c9ae21-7206-41a0-a69a-a7db2f48aa3e",
      "name": "находим перевозки, которые выведем в кнопках",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1280,
        9100
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').all()[0].json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').all()[0].json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "23b197f8-c61e-448e-ac78-ce0b86ba9376",
      "name": "рейсы по водителю",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1920,
        9080
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2cc61638-35e0-402f-be88-bb23eb435f59",
              "leftValue": "={{ new Date(new Date($json.time_of_end.replace(' ', 'T')).setHours(new Date($json.time_of_end.replace(' ', 'T')).getHours() + 10)).toISOString().replace('T', ' ').split('.')[0] }}",
              "rightValue": "={{ $('сегодняшнее число').item.json.currentDate.slice(0,10) }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9cde1139-d1b1-4b73-ae2d-9c133cafa517",
      "name": "рейсы за сегодня",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2340,
        9080
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "efde6172-f6d3-4f18-b7ac-77492bbcfbd7",
      "name": "разделяем рейсы7",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2140,
        9080
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "b9586ccd-6e05-41bd-b7b8-3a5ef737a1f4",
      "name": "находим какая сейчас перевозка1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -20,
        9500
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n}",
        "options": {}
      },
      "id": "1a1d7dd0-3540-4550-8a18-78463562df36",
      "name": "перевозки1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -200,
        9500
      ]
    },
    {
      "parameters": {
        "content": "## Проверка необходимости загрузки ттн",
        "height": 496.7072782298619,
        "width": 2363.793958006972
      },
      "id": "53e56058-2007-4d06-aa9c-697cef2687cd",
      "name": "Sticky Note44",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -760,
        9680
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "794627f6-586e-4989-8abe-5a92a9289dc3",
      "name": "получаем id выбранной перевозки",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -480,
        9900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "ttn"
            }
          ]
        },
        "options": {}
      },
      "id": "e9ebcace-a931-4041-8633-a7c1eb65ee41",
      "name": "сколько рейсов без ттн",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        500,
        10020
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "87d67555-3a54-4f3d-a1a4-5e5924af3a41",
      "name": "сколько всего рейсов в перевозке по машине",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        500,
        9780
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "1c1d022c-44d6-4cb9-bfd9-044afe2ffd4a",
      "name": "объединяем кол-во в одно",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        760,
        9900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "62b9cd55-3ac5-4d9e-a1dc-c4f5c083d658",
              "leftValue": "={{ $json.count_id }}",
              "rightValue": "={{ $json.count_ttn }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "51cb575e-8186-40f6-b66c-49a51c2b1c75",
      "name": "сравниваем общее кол-во рейсов и рейсов без ттн",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        9900
      ]
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "❗Вы не загружали ТТН по данной перевозке.\nОтправьте фото для загрузки",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "9495e60c-e4a6-49ff-b657-866237e92f88",
      "name": "загрузите ттн",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        9760
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "ТТН по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "1afd492d-879f-4942-b4a9-26b379498e91",
      "name": "ттн загружена",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1280,
        9940
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "only_mech": false,
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "TTN_photo"
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "31104543-8f32-4d4a-8f14-ad34ec564f7f",
      "name": "меняем статус на отправку ТТН",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1460,
        9760
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "376b9528-6f42-4d24-8559-50e5aa727ae2",
      "name": "номер авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -700,
        9900
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто3').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dc257b02-2e22-429f-8b6e-bacecaf14cba",
      "name": "находим рейсы  в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        9780
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто3').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "9523149d-f1e3-4707-b795-75f39af662ae",
              "leftValue": "={{ $json.ttn }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d1e76156-78e2-4dc3-855b-f34910a5921a",
      "name": "находим рейсы без ттн в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        10020
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "5d7b09af-a83c-46cb-9a06-5f69e387763a",
      "name": "рейсы по авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -180,
        9780
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "fe92b73d-930a-4ddb-819f-31d2a9002413",
      "name": "разделяем рейсы8",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        60,
        9780
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "82a013ec-34d1-4326-b44e-8eb3f2facd2a",
      "name": "рейсы по авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -180,
        10020
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "db0d0bd4-c399-4d44-9517-cde4267bc8ac",
      "name": "разделяем рейсы9",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        60,
        10020
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "tg_id",
              "value": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e4f66a68-394b-4eb8-ba8f-aa1cef54878f",
      "name": "получаем id выбранной перевозки1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -540,
        10380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "Все весовые справки по данной перевозке загружена✅",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "780e50d9-33c1-4b3a-b4bc-602eb58a1e00",
      "name": "весовые загружены",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        580,
        10540
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "211055ce-8e69-443a-9229-a0997cc776a2",
              "leftValue": "={{ $('находим рейсы без весовой в перевозке').item.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "de839593-7db7-4071-be97-eb34bb6be0af",
      "name": "есть рейсы или нет",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        10380
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "weight_certificate"
            }
          ]
        },
        "options": {}
      },
      "id": "25c15258-16c8-4c48-8f0b-15c6b572e73c",
      "name": "сколько рейсов без весовой",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        580,
        10360
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "tg_users",
          "mode": "list",
          "cachedResultName": "tg_users"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tg_id": "={{ $json.result.chat.id }}",
            "status": "many_weight_photo",
            "count_weight_photo": "={{ $('сколько рейсов без весовой').item.json.count_weight_certificate }}",
            "count_weight_photo_sent": 0
          },
          "matchingColumns": [
            "tg_id"
          ],
          "schema": [
            {
              "id": "tg_id",
              "displayName": "tg_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "odoo_id",
              "displayName": "odoo_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "only_mech",
              "displayName": "only_mech",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mech_photo",
              "displayName": "mech_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_id",
              "displayName": "end_request_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "materials_photo",
              "displayName": "materials_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "end_request_hours",
              "displayName": "end_request_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "car_id_while_inputing",
              "displayName": "car_id_while_inputing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuel_liters",
              "displayName": "fuel_liters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "weight_measure",
              "displayName": "weight_measure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_alert_text",
              "displayName": "logist_alert_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logist_recipient_name",
              "displayName": "logist_recipient_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transportation_for_certificate",
              "displayName": "transportation_for_certificate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "count_weight_photo",
              "displayName": "count_weight_photo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "count_weight_photo_sent",
              "displayName": "count_weight_photo_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "4df23dc7-7990-4bc0-bccd-ecbef47699ef",
      "name": "меняем статус на отправку нескольких весовых",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1020,
        10360
      ],
      "credentials": {
        "postgres": {
          "id": "cMlKL7XYShZtUnqo",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "messageId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "=❗Загружены не все весовые справки по данной перевозке.\nОтправьте <b>{{ $json.count_weight_certificate }}</b> фото для загрузки ",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "={{ `TS_${$('получаем id выбранной перевозки1').item.json.transportation_for_certificate}`}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "9fea240d-b615-4267-936b-1b9bd99f3034",
      "name": "загрузите весовые",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        800,
        10360
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "d518f79d-23f9-4669-a0c5-a61bf1d65cfc",
      "name": "номер авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -780,
        10380
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто4').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "9523149d-f1e3-4707-b795-75f39af662ae",
              "leftValue": "={{ $json.weight_certificate }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1881b6bf-d8fa-4a2e-a27a-b08e179ba90a",
      "name": "находим рейсы без весовой в перевозке",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        120,
        10380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n} ",
        "options": {}
      },
      "id": "0e10cdb9-0af0-41c3-955c-55c225d8e62c",
      "name": "рейсы по авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -340,
        10380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "c597cbba-a667-474c-82a6-9afe42118cf7",
      "name": "разделяем рейсы10",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -100,
        10380
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_auto",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ab2599b7-d238-4b88-bb49-bd3904b8bd0e",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_back_to_menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "32f5ff63-66c6-41ab-b8ae-31db4b91a594",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "back_to_choise_warn",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "5458e8a5-336f-4d88-b337-020b31a58c52",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_route",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "ee338c82-2f82-4b33-ac41-5d054a850f9c",
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.callback_query.data }}",
                    "rightValue": "warn_problem_document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "0ac45f20-c331-4850-95e0-edf77c7161b8",
      "name": "срочно",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2920,
        10100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e12dde19-099a-4664-8888-b04552554800",
      "name": "рейсы",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1860,
        10240
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "1bb7fa9b-f95d-4122-aba5-6249b71c66cb",
      "name": "номер авто5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2560,
        10240
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "aa084b96-3bcc-493f-9e26-9957deadb3e9",
      "name": "рейсы по авто5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2320,
        10240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "72d8fae4-72cf-4e98-8f86-ee2ff39c1689",
      "name": "разделяем рейсы11",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2080,
        10240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Выполняется",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b53730f-250c-4d65-9a57-989ec11b52d5",
      "name": "рейсы1",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1860,
        10440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "d9f48926-7440-487f-bf69-cc4ac926398f",
      "name": "номер авто6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2560,
        10440
      ],
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_car",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.id }}\n}",
        "options": {}
      },
      "id": "14709c11-4216-475c-8f88-88ec5ed0a42f",
      "name": "рейсы по авто6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2320,
        10440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "38ffddef-649e-440f-85ad-de21676b8542",
      "name": "разделяем рейсы12",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2080,
        10440
      ]
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "db1663da-9b42-47dd-926c-0cd8cfc1e6f9",
      "name": "ищем автомобиль с таким же сотрудником",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2100,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_schedules_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }},\n  \"start_date\": \"{{ $today.format('yyyy-MM-dd') }}\",\n  \"end_date\": \"{{ $today.plus(23, 'hours').format('yyyy-MM-dd') }}\"\n}",
        "options": {}
      },
      "id": "7a7ec928-ffd6-479e-86ee-187c47399349",
      "name": "Odoo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1880,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"car_id\": {{ $json.car[0] }}\n}",
        "options": {}
      },
      "id": "cfc758f8-5011-433c-aa81-529a5dd12c32",
      "name": "Odoo1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1640,
        11840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "b4179125-9765-48e3-9a0f-98c8029d3797",
      "name": "поиск текущего авто2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1700,
        12600
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "3bfda6f7-f2ec-46a3-9d7e-225bdc8772b2",
      "name": "поиск текущего авто3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2080,
        12960
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_car_by_driver",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"driver_id\": {{ $('Execute Workflow Trigger').item.json.odoo_id }}\n} ",
        "options": {}
      },
      "id": "8f4e2ae8-0ba7-4dc1-8cef-017cdadb175c",
      "name": "поиск текущего авто4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2200,
        13360
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.transportation_for_certificate }}\n}",
        "options": {}
      },
      "id": "77de246f-3065-4119-8860-94688b07d408",
      "name": "перевозки2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -220,
        10820
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "72b6f47e-1cc2-4256-bb59-2df4399b32d1",
      "name": "находим какая сейчас перевозка2",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -40,
        10820
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Execute Workflow Trigger').item.json.callback_query.message.chat.id }}",
        "text": "=Выберите документ, который хотите проверить по перевозке:\nОтправитель - {{ $json.sender[1] }}\nПолучатель - {{ $json.partner[1] }}\nМаршрут - {{ $json.place_from[1] }}-{{ $json.place_to[1] }}\nМатериал - {{ $json.material[1].replace(/\\s*\\(.*?\\)\\s*/g, \"\") }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "ТТН",
                    "additionalFields": {
                      "callback_data": "check_TTN"
                    }
                  },
                  {
                    "text": "Весовые справки",
                    "additionalFields": {
                      "callback_data": "check_weight"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Назад",
                    "additionalFields": {
                      "callback_data": "back_certificate"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "id": "04c55a91-dd78-47a1-9e20-29f538a51f98",
      "name": "загрузите ттн или весовые3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        160,
        10820
      ],
      "credentials": {
        "telegramApi": {
          "id": "s2yURwRj0JIo9urH",
          "name": "Everest production"
        }
      }
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site//get_transportation_by_id",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.current_transportation[0] }}\n} ",
        "options": {}
      },
      "id": "edb6ef55-f7dc-44b3-a043-1f04ca65ebb7",
      "name": "ищем перевозку",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        1560
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation",
        "options": {}
      },
      "id": "4bfc414b-86fe-4f19-a877-a1cef8e4797c",
      "name": "находим какая сейчас перевозка",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        680,
        1560
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aaf07aad-9b19-4b48-bf43-553efc23a4e7",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('завершение рейса').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "04c8e168-585b-4a34-8fc7-f1ce53f0f128",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Назначен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "959b00ab-fdf7-4de4-90c5-bcb10e8f63b3",
      "name": "находим рейсы по машине4",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1460,
        1740
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://everest.lamart.site/get_rounds_by_transportation",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "={{ $('Execute Workflow Trigger').item.json.cookie }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"transportation_id\": {{ $json.id }}\n} ",
        "options": {}
      },
      "id": "04d0ca6d-d9bd-49fe-bc4d-dff4da5559da",
      "name": "рейсы по авто1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -20,
        9100
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transportation_rounds",
        "options": {}
      },
      "id": "0aaaad1a-3306-41f5-b43e-26049270ffc3",
      "name": "разделяем рейсы6",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        220,
        9080
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b69e28d3-fb37-4a59-b34f-797136b3fb30",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Завершен",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "379c35f0-1b5a-4bfb-a91c-dedfe5e05d04",
              "leftValue": "={{ $json.ttn }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "69d174f3-6965-4b57-8da2-44c8421230d9",
              "leftValue": "={{ $json.car[0] }}",
              "rightValue": "={{ $('номер авто2').item.json.id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6de19bff-6296-4159-adf3-30d67b59b86b",
      "name": "находим рейсы без ттн",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        440,
        9080
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "update_id": 100635853,
          "callback_query": {
            "id": "2008109316609488533",
            "from": {
              "id": 467549384,
              "is_bot": false,
              "first_name": "Sergio",
              "username": "sergo_kf",
              "language_code": "ru",
              "is_premium": true
            },
            "message": {
              "message_id": 28401,
              "from": {
                "id": 7063451965,
                "is_bot": true,
                "first_name": "Everest n8n",
                "username": "myn8nbotbot"
              },
              "chat": {
                "id": 467549384,
                "first_name": "Sergio",
                "username": "sergo_kf",
                "type": "private"
              },
              "date": 1731698642,
              "text": "По графику ваш автомобиль  \nА 657 АА - SCANIA",
              "entities": [
                {
                  "offset": 28,
                  "length": 17,
                  "type": "bold"
                }
              ],
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "Выбрать",
                      "callback_data": "pick_car"
                    },
                    {
                      "text": "Взять другой",
                      "callback_data": "other_car"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "-8293046807322593726",
            "data": "pick_car"
          },
          "tg_id": "467549384",
          "odoo_id": 4,
          "status": "inputing_odometer",
          "only_mech": false,
          "mech_photo": false,
          "end_request_id": 591,
          "materials_photo": false,
          "end_request_hours": null,
          "car_id_while_inputing": 25,
          "fuel_liters": 15,
          "weight_measure": "15 Тонны ",
          "logist_alert_text": null,
          "logist_recipient_name": null,
          "transportation_for_certificate": 1207,
          "count_weight_photo": 4,
          "count_weight_photo_sent": 0,
          "current_quarry_hours": 5,
          "end_round_message_id": 28389,
          "last_message_text": "Отлично, рейс активен. \n\nКарьер Ключевое - улица Карла Маркса, 43\nТЕСТ\nОстаток кубометров по текущей перевозке - 99.84\n\nПо его завершению нажмите на кнопку \"Завершить рейс\"",
          "logist_notifications": false,
          "creating_transportation": "657;\nКарьер Ключевое;",
          "round_active_msg_id": 28389,
          "no_taking_shift_logist_notify": false,
          "logist_template": null,
          "cookie": "session_id=c3e4a62a1a8d37aac55955740fe40fb4fbfdb108; Expires=Tue, 11 Nov 2025 06:56:02 GMT; Max-Age=604800; HttpOnly; Path=/"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Vladivostok",
    "saveManualExecutions": false
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-26T14:50:05.418Z",
      "updatedAt": "2024-08-26T14:50:05.418Z",
      "id": "6aWMzdObOVIXsJ6y",
      "name": "production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-25T16:13:16.862Z",
  "versionId": "bb7a5b5e-f771-466d-97e7-bd95e70cddbe"
}